[{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/883357016","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-883357016","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":883357016,"node_id":"IC_kwDOBP8EZc40pvVY","user":{"login":"mrossinek","id":21973473,"node_id":"MDQ6VXNlcjIxOTczNDcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/21973473?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mrossinek","html_url":"https:\/\/github.com\/mrossinek","followers_url":"https:\/\/api.github.com\/users\/mrossinek\/followers","following_url":"https:\/\/api.github.com\/users\/mrossinek\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mrossinek\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mrossinek\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mrossinek\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mrossinek\/orgs","repos_url":"https:\/\/api.github.com\/users\/mrossinek\/repos","events_url":"https:\/\/api.github.com\/users\/mrossinek\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mrossinek\/received_events","type":"User","site_admin":false},"created_at":"2021-07-20T12:35:04Z","updated_at":"2021-07-20T12:35:04Z","author_association":"MEMBER","body":"Another thought occurred to me: we should probably allow the dictionary values to also be a list:\r\n```python\r\nDict[\r\n    str,\r\n    Union[\r\n        Optional[OperatorBase],\r\n        List[Optional[OperatorBase]\r\n    ]\r\n]\r\n```","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/883381575","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-883381575","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":883381575,"node_id":"IC_kwDOBP8EZc40p1VH","user":{"login":"woodsp-ibm","id":40241007,"node_id":"MDQ6VXNlcjQwMjQxMDA3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40241007?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/woodsp-ibm","html_url":"https:\/\/github.com\/woodsp-ibm","followers_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/followers","following_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/orgs","repos_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/repos","events_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/received_events","type":"User","site_admin":false},"created_at":"2021-07-20T13:12:02Z","updated_at":"2021-07-20T13:12:02Z","author_association":"MEMBER","body":"The original thinking is going to a dict instead of a List was that we create them at some level, which the final values are interpreted again at, but as the list progressed down the stack towards final execution at the algorithm some action(s) against the main operator may cause one or more aux ops to become 'invalid'. Eg symmetry reduction is where we encounter it as present where reducing\/tapering the main operator by symmetry, if an aux ops does not commute with the symmetry then we should not measure it. As the list was an ordered list, to preserve the order a None was put in the operators place and a None in the resultant value - also a list in the same order. This means the originator has to deal with None as a result where the meaning is the operator could not be measured. Rather than this is was felt a dictionary, where we could simply drop the key\/value pair if the aux operator needed to be discarded would be simpler all round - the originator still needs to deal with the result missing keys as no measurement could be taken.\r\n\r\nIn regards of having a key which points to a List, as per above, if any one of that List needs to be dropped then we are back in the same situation so to me it seems like a bad idea - if we really need nested structure - which seems to complicate things all round - then I think again it should be a Dict.\r\n\r\nWhether a List or Dict coding the keys or indexes in many places as explicit values rather than having some Constant values declared somewhere and using is less that is poor coding anyway - the above sample could arguably be improved in that regard but it does not detract from the fact that having a Dict, where order is not the way we know what is what, but can be defined by the user and their choice of keys, is a better way to go.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/890591814","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-890591814","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":890591814,"node_id":"IC_kwDOBP8EZc41FVpG","user":{"login":"CisterMoke","id":17428338,"node_id":"MDQ6VXNlcjE3NDI4MzM4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/17428338?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/CisterMoke","html_url":"https:\/\/github.com\/CisterMoke","followers_url":"https:\/\/api.github.com\/users\/CisterMoke\/followers","following_url":"https:\/\/api.github.com\/users\/CisterMoke\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/CisterMoke\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/CisterMoke\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/CisterMoke\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/CisterMoke\/orgs","repos_url":"https:\/\/api.github.com\/users\/CisterMoke\/repos","events_url":"https:\/\/api.github.com\/users\/CisterMoke\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/CisterMoke\/received_events","type":"User","site_admin":false},"created_at":"2021-08-01T21:47:49Z","updated_at":"2021-08-01T21:47:49Z","author_association":"NONE","body":"Hello, I am interested in picking up this issue as my first contribution. If I understand the issue correctly, the list of classes that should be updated are:\r\n- `NumPyMinimumEigensolver`\r\n- `VQE`\r\n- `QAOA`\r\n- `NumPyEigensolver`\r\n\r\nLooking a bit further in the code it seems that the eigenvalues of the auxiliary operators for a certain eigenstate are returned as a NumPy array that preserves the order of the operators.\r\nWhich order should be chosen when `aux_operators` is a dict? Should I sort the keys or can I simply iterate over `dict.values()`?","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/892097577","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-892097577","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":892097577,"node_id":"IC_kwDOBP8EZc41LFQp","user":{"login":"woodsp-ibm","id":40241007,"node_id":"MDQ6VXNlcjQwMjQxMDA3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40241007?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/woodsp-ibm","html_url":"https:\/\/github.com\/woodsp-ibm","followers_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/followers","following_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/orgs","repos_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/repos","events_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/woodsp-ibm\/received_events","type":"User","site_admin":false},"created_at":"2021-08-03T19:14:43Z","updated_at":"2021-08-03T19:14:43Z","author_association":"MEMBER","body":"@CisterMoke I think the intent was that if a dictionary was passed in that a corresponding dictionary containing the results would be passed back so the keys are the same set. I.e. whatever the key was for the operator in the dictionary that was input, its measured expectation value in the output result would be in a dictionary under the exact same key. Hence the caller simply gets the results by key and there is no order involved.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/892202672","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-892202672","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":892202672,"node_id":"IC_kwDOBP8EZc41Le6w","user":{"login":"CisterMoke","id":17428338,"node_id":"MDQ6VXNlcjE3NDI4MzM4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/17428338?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/CisterMoke","html_url":"https:\/\/github.com\/CisterMoke","followers_url":"https:\/\/api.github.com\/users\/CisterMoke\/followers","following_url":"https:\/\/api.github.com\/users\/CisterMoke\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/CisterMoke\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/CisterMoke\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/CisterMoke\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/CisterMoke\/orgs","repos_url":"https:\/\/api.github.com\/users\/CisterMoke\/repos","events_url":"https:\/\/api.github.com\/users\/CisterMoke\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/CisterMoke\/received_events","type":"User","site_admin":false},"created_at":"2021-08-03T22:16:26Z","updated_at":"2021-08-03T22:16:26Z","author_association":"NONE","body":"Hmm ok makes sense. I'm not immediately sure what possible side effects this could introduce but I'll start investigating that.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/comments\/892427077","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-892427077","issue_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","id":892427077,"node_id":"IC_kwDOBP8EZc41MVtF","user":{"login":"mrossinek","id":21973473,"node_id":"MDQ6VXNlcjIxOTczNDcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/21973473?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mrossinek","html_url":"https:\/\/github.com\/mrossinek","followers_url":"https:\/\/api.github.com\/users\/mrossinek\/followers","following_url":"https:\/\/api.github.com\/users\/mrossinek\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mrossinek\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mrossinek\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mrossinek\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mrossinek\/orgs","repos_url":"https:\/\/api.github.com\/users\/mrossinek\/repos","events_url":"https:\/\/api.github.com\/users\/mrossinek\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mrossinek\/received_events","type":"User","site_admin":false},"created_at":"2021-08-04T07:20:05Z","updated_at":"2021-08-04T07:20:05Z","author_association":"MEMBER","body":"Thanks @CisterMoke for offering your help! What Steve wrote is correct: the intent would be to always access values by keys thereby removing any dependence on ordering. I am also not sure what side effects this will have, so please feel free to share any findings you have.\r\n\r\nI also wanted to quickly point out what Steve wrote here:\r\n> In regards of having a key which points to a List, as per above, if any one of that List needs to be dropped then we are back in the same situation so to me it seems like a bad idea - if we really need nested structure - which seems to complicate things all round - then I think again it should be a Dict.\r\n\r\nI absolutely agree with this (but somehow must have missed his reply previously). Essentially what this means is that the type I proposed above should really be more like this:\r\n```python\r\nDict[\r\n    str,\r\n    Union[\r\n        Optional[OperatorBase],\r\n        Optional[\r\n            Dict[\r\n                str,\r\n                Optional[OperatorBase]\r\n            ]\r\n        ]\r\n    ]\r\n]\r\n```\r\nNote, that this could in theory be continued recursively (although I am not sure if that is something we would like to support).","performed_via_github_app":null}]
