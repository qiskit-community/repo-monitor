[{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6876","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6876\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6876\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6876\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6876","id":961655919,"node_id":"MDU6SXNzdWU5NjE2NTU5MTk=","number":6876,"title":"State overlap interface","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"},{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-05T10:01:32Z","updated_at":"2021-08-05T10:45:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nAdd an algorithm interface for computing state overlaps (similar to the `ExpectationValue`s of #6864) of two states, `|psi>` and `|phi>`: `<psi|phi>`.\r\n\r\nComputing overlaps is a primitive task that's used in several algorithms, such as quantum kernels or evaluating the Quantum Fisher Information. There exist several techniques to evaluate the overlap, so it would be useful to have this as modular building block which can be plugged into an algorithm. Similar to the expectation values, an overlap algorithm could become a runtime program that backends can provide.\r\n\r\nThe base class would take two circuits defining the states (or potentially also a `Statevector`) and allow evaluation of the overlap itself and the absolute value squared of the overlap. We distinguish between the two since there are methods which only compute the absolute value.\r\n```python\r\nclass Overlap(ABC):\r\n    \"\"\"Compute the overlap of two quantum states defined via (possibly paramterized) circuits.\"\"\"\r\n\r\n    def __init__(self, state1: QuantumCircuit, state2: QuantumCircuit, backend_and_options) -> None:\r\n        pass\r\n        \r\n    @abstractmethod\r\n    def evaluate(self, parameters1: Optional[np.ndarray] = None, parameters2: Optional[np.ndarray] = None) -> complex:\r\n        pass\r\n        \r\n    def evaluate_abs(self, parameters1: Optional[np.ndarray] = None, parameters2: Optional[np.ndarray] = None) -> float:\r\n       # per default use evaluate\r\n       return abs(self.evaluate(parameters1, parameters2)) ** 2\r\n```\r\nThe exact design should likely follow the design of the expectation values in #6864, especially in regard to whether the `state1\/2` can be exchanged via setters or whether the `Overlap` object is copied upon modification.\r\n\r\nImplementations should include:\r\n```python\r\nclass SwapTest(Overlap)\r\nclass UncomputeCompute(Overlap)  # implements only evaluate_abs, not evaluate\r\nclass RandomizedMeasurements(Overlap)  # https:\/\/arxiv.org\/abs\/1812.02624\r\nclass BellBasisSwapTest(Overlap)  # https:\/\/arxiv.org\/abs\/1803.04114\r\n```\r\nIf the circuits preparing the states are parameterized, the Overlap caches the transpiled circuits for efficient repetitive evaluations. For example, in QN-SPSA we evaluate the overlap of the ansatz with the current parameters and a slight shift in the parameters:\r\n```python\r\nansatz = RealAmplitudes(3, entanglement=\"linear\")\r\noverlap = SwapTest(ansatz, ansatz)\r\n\r\nparameters1 = # current_parameters\r\nparameters2 = parameters1 + 0.01 * shift\r\nresult = overlap.evaluate_abs(parameters1, parameters2)\r\n```\r\nAnd the quantum kernel and QN-SPSA algorithms could take an overlap (or potentially a factory of overlaps) as input:\r\n```python\r\noverlap = RandomizedMeasurement(backend=provider.get_backend('ibmq_montreal'))\r\n\r\nqk = QuantumKernel(feature_map, overlap, ...)\r\nqnspsa = QNSPSA(ansatz, overlap, ...)\r\n```\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6875","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6875\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6875\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6875\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6875","id":961635647,"node_id":"MDExOlB1bGxSZXF1ZXN0NzA0NTQxODQ5","number":6875,"title":"Minor QFT fixes: Avoid local `ParameterTable` import and fix naming","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":2873016226,"node_id":"MDU6TGFiZWwyODczMDE2MjI2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20None","name":"Changelog: None","color":"FFFFFF","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-05T09:37:12Z","updated_at":"2021-08-05T09:37:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6875","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6875","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6875.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6875.patch"},"body":"\r\n\r\n### Summary\r\n\r\nCloses #4353 and fixes the displayed name of IQFT, which previously showed up as `QFT_dg` and now is `IQFT`.\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6874","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6874\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6874\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6874\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6874","id":961597904,"node_id":"MDExOlB1bGxSZXF1ZXN0NzA0NTA5Mzg1","number":6874,"title":"Add final measurement mapping to QuantumCircuit","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-05T08:53:51Z","updated_at":"2021-08-05T10:29:55Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6874","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6874","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6874.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6874.patch"},"body":"\r\n\r\n### Summary\r\nIn the runtime we needed a fast way to get the final measurement mapping of a circuit for measurement mitigation.  While in principle one can do it from the DAG, the conversion cost is high.  Here is a port of the runtime code that finds the final measurements directly from the circuit itself.\r\n\r\nTo-dos:\r\n\r\n- [x] Add tests\r\n- [x] Add release note\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6873","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6873\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6873\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6873\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6873","id":961556590,"node_id":"MDU6SXNzdWU5NjE1NTY1OTA=","number":6873,"title":"Implement Shor's algorithm for the DLP","user":{"login":"mhinkie","id":34032605,"node_id":"MDQ6VXNlcjM0MDMyNjA1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/34032605?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mhinkie","html_url":"https:\/\/github.com\/mhinkie","followers_url":"https:\/\/api.github.com\/users\/mhinkie\/followers","following_url":"https:\/\/api.github.com\/users\/mhinkie\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mhinkie\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mhinkie\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mhinkie\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mhinkie\/orgs","repos_url":"https:\/\/api.github.com\/users\/mhinkie\/repos","events_url":"https:\/\/api.github.com\/users\/mhinkie\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mhinkie\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-05T08:03:52Z","updated_at":"2021-08-05T08:05:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected behavior?\r\nProvide an implementation of Shor's algorithm for the discrete logarithm problem similar to the implementation of Shor's algorithm for prime factorization in [qiskit\/algorithms\/factorizers\/shor.py](https:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/main\/qiskit\/algorithms\/factorizers\/shor.py).\r\n\r\nI have already implemented the Algorithm based on: https:\/\/arxiv.org\/abs\/quant-ph\/9903071\r\n(see https:\/\/github.com\/mhinkie\/ShorDiscreteLog for the code)\r\n\r\nThere still are some details to discuss before implementation can begin:\r\n\r\n- I have implemented the modular exponentiation using three different approaches to be able to compare them. One of them is the circuit described in https:\/\/arxiv.org\/abs\/quant-ph\/0205095 (Beauregard), which is also used in the current implementation of Shor's algorithm for prime factorization. This version performs best in the simulator, because the number of used qubits is relatively low. Judging by the number of performed gate operations and the circuit depth however, on an actual quantum computer the gate based on this paper https:\/\/arxiv.org\/abs\/1801.01081 will perform best, even though it is slower on the simulator because of the number of qubits needed. **Which version of the modular exponentiation do you prefer?**\r\n- **If you prefer Beauregard's gate, should I restructure the code s.t. the modular exponentiation gate is in its own file?** This way the gate can be referenced in both the algorithm for prime factorization and the algorithm for the DLP and no duplicate code is introduced.\r\n- **Are there any specific requirements regarding the interface?** My plan is to provide, in addition to the constructor, a `construct_circuit` and a `solve` function and to return the result as an `AlgorithmResult` similar to `shor.py`.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6872","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6872\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6872\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6872\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6872","id":961529280,"node_id":"MDU6SXNzdWU5NjE1MjkyODA=","number":6872,"title":"Infinite job submissions when submitted jobs' status is error\/cancelled\/unknown status","user":{"login":"shahakL","id":36965774,"node_id":"MDQ6VXNlcjM2OTY1Nzc0","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/36965774?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/shahakL","html_url":"https:\/\/github.com\/shahakL","followers_url":"https:\/\/api.github.com\/users\/shahakL\/followers","following_url":"https:\/\/api.github.com\/users\/shahakL\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/shahakL\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/shahakL\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/shahakL\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/shahakL\/orgs","repos_url":"https:\/\/api.github.com\/users\/shahakL\/repos","events_url":"https:\/\/api.github.com\/users\/shahakL\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/shahakL\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-05T07:27:33Z","updated_at":"2021-08-05T07:36:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: lastest\r\n- **Python version**:\r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nThe problem is in the run_qobj() function in qiskit\/utils\/run_circuits.py.\r\nWhen a submitted job to a non-simulator backend is in a JobStatus.ERROR or JobStatus.CANCELLED status, the job is submitted again. This happens infinitely many times if the job is continually canceled or in an error state.\r\n`                \r\nif job_status == JobStatus.CANCELLED:\r\n                    logger.warning(\"FAILURE: Job id: %s is cancelled. Re-submit the Qobj.\", job_id)\r\n                elif job_status == JobStatus.ERROR:\r\n                    logger.warning(\r\n                        \"FAILURE: Job id: %s encounters the error. \"\r\n                        \"Error is : %s. Re-submit the Qobj.\",\r\n                        job_id,\r\n                        job.error_message(),\r\n                    )\r\n                else:\r\n                    logging.warning(\r\n                        \"FAILURE: Job id: %s. Unknown status: %s. \" \"Re-submit the Qobj.\",\r\n                        job_id,\r\n                        job_status,\r\n                    )\r\n                job, job_id = _safe_submit_qobj(\r\n                    qobj, backend, backend_options, noise_config, skip_qobj_validation\r\n                )\r\n`\r\n\r\n\r\nThis is especially dangerous when a the job was submitted successfully, but reading the status was wrong (due to a bug in the job class or at the backend side), possibly causing infinite job submissions each costing the user money.\r\n\r\n### Steps to reproduce the problem\r\nExecute a job that always returns the status JobStatus.CANCELLED.\r\n\r\n### What is the expected behavior?\r\nThe job submission should stop after a finite amount of retries.\r\n\r\n### Suggested solutions\r\nDo not use `while True` loops in the code. Instead use a finite, preferably small, amount of retries.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6871","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6871\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6871\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6871\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6871","id":961513211,"node_id":"MDU6SXNzdWU5NjE1MTMyMTE=","number":6871,"title":"Job metaclass is missing an error_message() function, used in job submitting","user":{"login":"shahakL","id":36965774,"node_id":"MDQ6VXNlcjM2OTY1Nzc0","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/36965774?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/shahakL","html_url":"https:\/\/github.com\/shahakL","followers_url":"https:\/\/api.github.com\/users\/shahakL\/followers","following_url":"https:\/\/api.github.com\/users\/shahakL\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/shahakL\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/shahakL\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/shahakL\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/shahakL\/orgs","repos_url":"https:\/\/api.github.com\/users\/shahakL\/repos","events_url":"https:\/\/api.github.com\/users\/shahakL\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/shahakL\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-05T07:05:35Z","updated_at":"2021-08-05T07:05:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: latest\r\n- **Python version**: \r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nWhen submitting jobs and querying for their status (in run_qobj() in qiskit\/ustils\/run_circuits.py), a call is made to job.error_message() whenever the job's status is an error:\r\n`                elif job_status == JobStatus.ERROR:\r\n                    logger.warning(\r\n                        \"FAILURE: Job id: %s encounters the error. \"\r\n                        \"Error is : %s. Re-submit the Qobj.\",\r\n                        job_id,\r\n                        job.error_message(),\r\n                    )\r\n`\r\n\r\nHowever this function is not part of the Job or JobV1 metaclasses, therefore not a requirement to any job-classes inheriting from JobV1, causing their execution to fail ungracefully.\r\n\r\n### Steps to reproduce the problem\r\nExecute a job that returns the status JobStatus.ERROR.\r\n\r\n### What is the expected behavior?\r\nThe execution should fail gracefully, with the warning printed to the user.\r\n\r\n### Suggested solutions\r\nAdd the error_message function as an abstract method to the JobV1 class.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6870","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6870\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6870\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6870\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6870","id":961239716,"node_id":"MDExOlB1bGxSZXF1ZXN0NzA0MTkzNDE1","number":6870,"title":"[WIP] Support Dict[str, OperatorBase] for aux_operators (fix #6772)","user":{"login":"CisterMoke","id":17428338,"node_id":"MDQ6VXNlcjE3NDI4MzM4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/17428338?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/CisterMoke","html_url":"https:\/\/github.com\/CisterMoke","followers_url":"https:\/\/api.github.com\/users\/CisterMoke\/followers","following_url":"https:\/\/api.github.com\/users\/CisterMoke\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/CisterMoke\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/CisterMoke\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/CisterMoke\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/CisterMoke\/orgs","repos_url":"https:\/\/api.github.com\/users\/CisterMoke\/repos","events_url":"https:\/\/api.github.com\/users\/CisterMoke\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/CisterMoke\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-04T23:59:23Z","updated_at":"2021-08-04T23:59:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6870","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6870","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6870.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6870.patch"},"body":"\r\n\r\n### Summary\r\nA fix for https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772\r\nThe `aux_operators` argument defined in the `MinimumEigenSolver` and `EigenSolver` interfaces are now of type `Dict[str, Optional[OperatorBase]]` instead of `List[Optional[OperatorBase]]`\r\n\r\n\r\n### Details and comments\r\nI still need to look into the suggestion by @mrossinek to [add support for nested dictionaries.](https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772#issuecomment-892427077)\r\n\r\nThe `VQE` solver makes use of a `ListOp` to evaluate the `aux_operators` ([line 422](https:\/\/github.com\/Qiskit\/qiskit-terra\/compare\/main...CisterMoke:issue6772\/dict_support_for_aux_ops?expand=1#diff-e058a38497350f6198cbb401e70fe7687e0aa0b7b3316f07ff751bc46fb4f6f9R422)). Since there is no `DictOp` I decided to pass a list of `aux_operators.values()` instead and assumed that the order does not matter in this case.\r\n\r\nThe eigenvalues obtained for the `aux_operators` are now also stored as a dictionary inside a NumPy array. However, [line 233](https:\/\/github.com\/Qiskit\/qiskit-terra\/compare\/main...CisterMoke:issue6772\/dict_support_for_aux_ops?expand=1#diff-b081126e94a6bc7828738e7092c65159f12ad82752450e4f787895edc787fb54R233) of the `NumPyEigensolver` mentions that conversion to a NumPy array breaks even though [line 436](https:\/\/github.com\/Qiskit\/qiskit-terra\/compare\/main...CisterMoke:issue6772\/dict_support_for_aux_ops?expand=1#diff-e058a38497350f6198cbb401e70fe7687e0aa0b7b3316f07ff751bc46fb4f6f9R436) in `VQE` mentions that it can be done by setting `dtype=object`. Should the `NumPyEigensolver` be updated accordingly?\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6869","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6869\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6869\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6869\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6869","id":961159953,"node_id":"MDExOlB1bGxSZXF1ZXN0NzA0MTE4MTkx","number":6869,"title":"Tame 1Q simplification warning (backport #6868)","user":{"login":"mergify[bot]","id":37929162,"node_id":"MDM6Qm90Mzc5MjkxNjI=","avatar_url":"https:\/\/avatars.githubusercontent.com\/in\/10562?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D","html_url":"https:\/\/github.com\/apps\/mergify","followers_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/followers","following_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/orgs","repos_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/repos","events_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mergify%5Bbot%5D\/received_events","type":"Bot","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-04T22:37:42Z","updated_at":"2021-08-04T22:37:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6869","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6869","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6869.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6869.patch"},"body":"This is an automatic backport of pull request #6868 done by [Mergify](https:\/\/mergify.io).\n\n\n---\n\n\n<details>\n<summary>Mergify commands and options<\/summary>\n\n<br \/>\n\nMore conditions and actions can be found in the [documentation](https:\/\/docs.mergify.io\/).\n\nYou can also trigger Mergify actions by commenting on this pull request:\n\n- `@Mergifyio refresh` will re-evaluate the rules\n- `@Mergifyio rebase` will rebase this PR on its base branch\n- `@Mergifyio update` will merge the base branch into this PR\n- `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch\n\nAdditionally, on Mergify [dashboard](https:\/\/dashboard.mergify.io\/) you can:\n\n- look at your merge queues\n- generate the Mergify configuration with the config editor.\n\nFinally, you can contact us on https:\/\/mergify.io\/\n<\/details>\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6867","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6867\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6867\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6867\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6867","id":960546951,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAzNTU5MjMw","number":6867,"title":"Migrate measure mitigation from ignis for QuantumInstance","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-04T14:30:31Z","updated_at":"2021-08-05T12:03:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6867","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6867","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6867.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6867.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis commit migrates the measurement mitigation code from qiskit-ignis\r\ninto qiskit-terra for use with the QuantumInstance class. The\r\nQuantumInstance class's usage of the measurement mitigation from ignis\r\nis the one thing blocking us from deprecating qiskit-ignis completely.\r\nBy embedding the code the quantum instance depends on inside\r\nqiskit.utils users of QuantumInstance (and therefore qiskit.algorithms)\r\ncan construct and use measurement mitigation in it's current form. The\r\nuse of this migrated module is only supported for use with the\r\nQuantumInstance class and is explicitly documented as internal\/private\r\nexcept for how it gets used by the QuantumInstance.\r\n\r\nThere is ongoing work to create a standardized mitigation API in #6485\r\nand #6748, this does not preclude that work, but we should adapt this as\r\npart of those efforts to use the standardized interface. Ideally this\r\nwould have been made a private interface and not exposed it as user facing\r\n(in deference to the standardization effort), but unfortunately the\r\nQuantumInstance expects classes of these classes as it's public interface\r\nfor selecting a mitigation technique which means users need to be able to\r\nuse the classes. However, as only the classes are public interfaces we\r\ncan adapt this as we come up with a standardized mitigation interface\r\nand rewrite the internals of this and how the QuantumInstance leverages\r\nmitigators to use the new interface.\r\n\r\n### Details and comments\r\n\r\nA good follow-up here would be to adapt the mitigator selection kwarg to\r\ndeprecate the use of classes and then we can make things explicitly\r\nprivate in the migrated code and wait for #6495 and #6748 to be ready\r\nfor our user facing API. I opted to not include that in this PR to\r\nminimize changes to just what we migrated from ignis and update usage of\r\nold ignis classes to rely on the migrated version.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6866","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6866\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6866\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6866\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6866","id":960494784,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAzNTEyMzY1","number":6866,"title":"Replace ``Optimizer.optimize`` by ``Optimizer.minimize``","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":1561342365,"node_id":"MDU6TGFiZWwxNTYxMzQyMzY1","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20API%20Change","name":"Changelog: API Change","color":"da2add","default":false,"description":"Include in the Changed section of the changelog"},{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-04T13:56:50Z","updated_at":"2021-08-05T07:34:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6866","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6866","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6866.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6866.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes #6382. \r\n\r\n### Details and comments\r\n\r\nDeprecate `Optimizer.optimize` in favor of `Optimizer.minimize` to\r\n* use a signature closer to SciPy's `minimize` and move towards using plain callables in variational algorithms\r\n* remove `num_vars` from the required arguments\r\n* all our optimizers minimize, reflect that in the name\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6865","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6865\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6865\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6865\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6865","id":960323209,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAzMzU2NTA5","number":6865,"title":"Optimise documentation build","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-08-04T11:52:50Z","updated_at":"2021-08-04T18:17:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6865","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6865","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6865.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6865.patch"},"body":"\r\n\r\n### Summary\r\n\r\n- Clear cruft out of Sphinx' conf.py\r\n- Rewrite default autosummary templates to skip inherited members in circuit library, and put all attributes on the same page as the class\r\n- Fix headings and toc entries in opflow and algorithms.\r\n\r\n\r\n### Details and comments\r\n\r\n#### Clear cruft out of Sphinx' conf.py\r\n    \r\nRemove redundant options and comments from conf.py in order to make it clearer\r\nwhat is actually being used.\r\n\r\nThe last use of QISKIT_DOCS (to forcibly import some deprecated visualisation\r\nfunctions) was removed in c4104aa.\r\n\r\nAlmost all our use of autodoc is via autosummary, where we have used template\r\nfiles to overwrite the defaults from autodoc, so setting autodoc options in\r\nconf.py had very little effect, and was quite misleading.  Also,\r\n\r\n    \"inherited-members\": None\r\n\r\nactually _set_ `:inherited-members:` on all `autoclass` directives, rather than\r\nremoved it, which was presumably the original intent.\r\n\r\nUnnecessary comments exhorting people the read the Sphinx documentation are\r\nremoved, and only a short sentence describing the intent remains.  We hope that\r\nif you don't understand Sphinx' configuration, the documentation is the first\r\nplace you'd look without a comment telling you so.  Those comments were\r\ngenerated by sphinx-quickstart, not by us, anyway.  Removing them makes it\r\neasier to read the file.\r\n\r\n#### Rewrite default autosummary templates\r\n    \r\nThis documents all class attributes on the same page as the classes themselves.\r\nThis removes a huge amount of Sphinx stubs, all of which needed to be processed\r\nand rendered into HTML, and mostly only had one line of text on them anyway.\r\n    \r\nIt also adds a new template\r\n\r\n    class_no_inherited_members.rst\r\n\r\nthat may be used when we do not want to individually document all function\r\nmethods that were derived from a parent class.  This template is assigned to all\r\nclasses documented within qiskit.circuit.library and qiskit.opflow; the sheer\r\nnumber of subclasses in those meant that huge numbers of inherited methods were\r\nbeing redocumented.  This was making it much harder to see what was actually\r\nbeing redefined by those methods, and was affecting the build times.  It was\r\nparticularly slow for derivatives of QuantumCircuit, since there were several\r\ncalls to\r\n\r\n    .. jupyter-execute ::\r\n\r\ndirectives that were being repeated for every subclass.\r\n    \r\nThis removes the redundant `base.rst` template, which was just the\r\ndefault behaviour anyway.\r\n    \r\nThe build times should now have shrunk massively.  On my laptop (Macbook Pro\r\n2020 i7), a clean build on a single core now takes about 12 minutes (down from\r\n47), and this reduces to 4 minutes when using 4 processes.\r\n    \r\n#### Fix rst heading levels in opflow and algorithms\r\n    \r\nThis removes the unintended extra entries from the API documentation list for\r\nTerra of submodules of opflow and algorithms.  It also converts various\r\nsummaries in opflow and algorithms to use autosummary, rather than an awkward\r\ntoctree statement that necessitated extra stubs inside `docs\/apidocs`.\r\n    \r\nWe have to re-write some of the titles in submodules of opflow to work around\r\nbehaviour of Sphinx' autosummary; when it tries to generate the one-line summary\r\nof the objects in its table, it parses the docstring as RST, then attempts to\r\nsummarize the first paragraph.  If the first syntax element is _not_ a paragraph\r\n(e.g. if it is a section heading), then autosummary simply takes the first\r\nnon-blank line of the docstring.  This means that if a submodule begins with a\r\ntop-level RST header that looks like\r\n\r\n    =====\r\n    Title\r\n    =====\r\n\r\nthen the `=====` will be taken literally, which will cause the rest of the RST\r\ndocument to fail to parse.\r\n    \r\nTo work around it, we just lower all the heading levels, so that the highest\r\nlevel heading in submodules is denoted by\r\n\r\n    Title\r\n    =====\r\n\r\nand subheadings are\r\n\r\n    Section Heading\r\n    +++++++++++++++\r\n\r\nand so on.\r\n\r\n---\r\n\r\nThis reduces the runtime of the documentation build on a single thread of my Macbook (2020 i7) from 47 minutes to 12 minutes.  It puts all the attributes of a class onto one page, and does not generate documentation for inherited members in `circuit.library` and `opflow`.  This follows on from discussion in the terra dev meeting yesterday.\r\n\r\nCurrently this will only affect the Terra builds, and not the metapackage builds.  This patch achieves what Qiskit\/qiskit#1249 intended to, so it effectively deprecates it, but we will still need a new PR to the metapackage which also makes sure to synchronise templates when pulling in API documentation.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6864","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6864\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6864\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6864\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6864","id":960083925,"node_id":"MDU6SXNzdWU5NjAwODM5MjU=","number":6864,"title":"Expectation value re-design","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"},{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":{"login":"chriseclectic","id":2235104,"node_id":"MDQ6VXNlcjIyMzUxMDQ=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2235104?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/chriseclectic","html_url":"https:\/\/github.com\/chriseclectic","followers_url":"https:\/\/api.github.com\/users\/chriseclectic\/followers","following_url":"https:\/\/api.github.com\/users\/chriseclectic\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/chriseclectic\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/chriseclectic\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/chriseclectic\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/chriseclectic\/orgs","repos_url":"https:\/\/api.github.com\/users\/chriseclectic\/repos","events_url":"https:\/\/api.github.com\/users\/chriseclectic\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/chriseclectic\/received_events","type":"User","site_admin":false},"assignees":[{"login":"chriseclectic","id":2235104,"node_id":"MDQ6VXNlcjIyMzUxMDQ=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2235104?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/chriseclectic","html_url":"https:\/\/github.com\/chriseclectic","followers_url":"https:\/\/api.github.com\/users\/chriseclectic\/followers","following_url":"https:\/\/api.github.com\/users\/chriseclectic\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/chriseclectic\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/chriseclectic\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/chriseclectic\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/chriseclectic\/orgs","repos_url":"https:\/\/api.github.com\/users\/chriseclectic\/repos","events_url":"https:\/\/api.github.com\/users\/chriseclectic\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/chriseclectic\/received_events","type":"User","site_admin":false},{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},{"login":"ajavadia","id":8622381,"node_id":"MDQ6VXNlcjg2MjIzODE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8622381?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ajavadia","html_url":"https:\/\/github.com\/ajavadia","followers_url":"https:\/\/api.github.com\/users\/ajavadia\/followers","following_url":"https:\/\/api.github.com\/users\/ajavadia\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ajavadia\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ajavadia\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ajavadia\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ajavadia\/orgs","repos_url":"https:\/\/api.github.com\/users\/ajavadia\/repos","events_url":"https:\/\/api.github.com\/users\/ajavadia\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ajavadia\/received_events","type":"User","site_admin":false},{"login":"levbishop","id":18673315,"node_id":"MDQ6VXNlcjE4NjczMzE1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18673315?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/levbishop","html_url":"https:\/\/github.com\/levbishop","followers_url":"https:\/\/api.github.com\/users\/levbishop\/followers","following_url":"https:\/\/api.github.com\/users\/levbishop\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/levbishop\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/levbishop\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/levbishop\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/levbishop\/orgs","repos_url":"https:\/\/api.github.com\/users\/levbishop\/repos","events_url":"https:\/\/api.github.com\/users\/levbishop\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/levbishop\/received_events","type":"User","site_admin":false},{"login":"eggerdj","id":38065505,"node_id":"MDQ6VXNlcjM4MDY1NTA1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/38065505?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/eggerdj","html_url":"https:\/\/github.com\/eggerdj","followers_url":"https:\/\/api.github.com\/users\/eggerdj\/followers","following_url":"https:\/\/api.github.com\/users\/eggerdj\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/eggerdj\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/eggerdj\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/eggerdj\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/eggerdj\/orgs","repos_url":"https:\/\/api.github.com\/users\/eggerdj\/repos","events_url":"https:\/\/api.github.com\/users\/eggerdj\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/eggerdj\/received_events","type":"User","site_admin":false},{"login":"stefan-woerner","id":41292468,"node_id":"MDQ6VXNlcjQxMjkyNDY4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/41292468?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/stefan-woerner","html_url":"https:\/\/github.com\/stefan-woerner","followers_url":"https:\/\/api.github.com\/users\/stefan-woerner\/followers","following_url":"https:\/\/api.github.com\/users\/stefan-woerner\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/stefan-woerner\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/stefan-woerner\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/stefan-woerner\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/stefan-woerner\/orgs","repos_url":"https:\/\/api.github.com\/users\/stefan-woerner\/repos","events_url":"https:\/\/api.github.com\/users\/stefan-woerner\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/stefan-woerner\/received_events","type":"User","site_admin":false}],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":1,"created_at":"2021-08-04T08:48:20Z","updated_at":"2021-08-05T10:18:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Related to #6451\r\n\r\n### Summary\r\n\r\nTaking expectation values for opflow operators on a backend\/simulator currently looks like\r\n```python\r\n# define the expectation value\r\nstate = StateFn(...) # can be a circuit-based state or defined via a statevector or dictionary\r\noperator = # some opflow operator, e.g. PauliSumOp\r\nexpectation = StateFn(operator, is_measurement=True) @ state\r\n\r\n# define how to evaluate\r\nexpectation_converter = # method to evaluate the expected value, e.g. PauliExpectation, CVaRExpectation, AerPauliExpectation, ...\r\ncircuit_sampler = CircuitSampler(backend)  # backend or simulator to execute the circuits\r\n\r\n# constructs opflow objects needed to evaluate the expectation value\r\n# e.g. creates circuits to measure in different Pauli bases\r\nconverted = expectation_converter.convert(expectation) \r\n\r\n# evaluate the circuits (optionally with parameters, if the state had free parameters so far)\r\nsampled = circuit_sampler.convert(converted, parameters)\r\n\r\n# get final result\r\nresult = sampled.eval()\r\n```\r\nThis workflow requires users to know about several classes before being able to calculate expectation values and constructs and copies potentially heavy opflow objects multiple times. We'd like to create a new expectation value class to (1) simplify and speed up the current flow and (2) create one universal interface for Qiskit (instead of having a quantum-info way and opflow way of doing it). \r\n\r\nThis must be (and currently is) synced with the development of expectation values in Qiskit Experiments.\r\n\r\nOn the high level, we'd like to calculate circuit-based expectation values as (this is just a sketch, naming etc. is not fixed)\r\n```python\r\nexp_val = ExpectationValue(operator, circuit, backend)  # ExpectationValue could be a subtype, like PauliExpectationValue\r\nresult = exp_val.compute(parameters)  # parameters are only included if the circuit is parameterized\r\n```\r\nThis would easily allow to cache transpiled circuits, it's easy to use and variational algorithms can easily be implemented.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6863","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6863\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6863\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6863\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6863","id":960024667,"node_id":"MDU6SXNzdWU5NjAwMjQ2Njc=","number":6863,"title":"Evolution gates","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"assignees":[{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false}],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-08-04T07:56:56Z","updated_at":"2021-08-04T07:56:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nImplement an evolution gate that can get synthesized into Pauli-evolution gates (or for a simulator backend just with direct matrix exponentiation) such that the compiler can perform optimizations on blocks of evolved Pauli operators before further decomposing into basis gates. \r\n\r\nHere's a preliminary design doc: https:\/\/gist.github.com\/Cryoris\/abc9753fd7dfb0cc3b3a83aa58a182e3\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6862","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6862\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6862\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6862\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6862","id":959547713,"node_id":"MDU6SXNzdWU5NTk1NDc3MTM=","number":6862,"title":"Deprecate `qiskit.test`","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-03T21:52:52Z","updated_at":"2021-08-03T21:52:52Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nAs a follow up to #6753 we should start to deprecate the `qiskit.test` namespace. Most of the code there is isolated to terra's unittests and is not something we should be exporting as a public interface in the package's namespace. Test code should live as close to the tests as possible the more abstracted away it is the harder it is to debug test failures or understand what a test is actually doing. As some downstream projects use the base test classes they should probably copy them locally because every project's testing needs are different.\r\n\r\nWe should investigate if there are any things in there we still want to keep and come up with a strategy for preserving them. The only example I can think of currently is `qiskit.test.mock` (https:\/\/github.com\/Qiskit\/qiskit-terra\/tree\/main\/qiskit\/test\/mock) which has all the fake backends and `ibmq_mock` (https:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/main\/qiskit\/test\/ibmq_mock.py ) which is used in hidden cells for jupyter executes in docstrings that use the ibmq provider. We can probably move the mock backends to `qiskit.provider` or make a new namespace for them. For `mock_ibmq` we can probably just put it in `utils` or `tools` (not sure what the distinction is there).","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6861","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6861\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6861\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6861\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6861","id":959396764,"node_id":"MDU6SXNzdWU5NTkzOTY3NjQ=","number":6861,"title":"Deprecate qiskit.extensions","user":{"login":"kdk","id":2241698,"node_id":"MDQ6VXNlcjIyNDE2OTg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2241698?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/kdk","html_url":"https:\/\/github.com\/kdk","followers_url":"https:\/\/api.github.com\/users\/kdk\/followers","following_url":"https:\/\/api.github.com\/users\/kdk\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/kdk\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/kdk\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/kdk\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/kdk\/orgs","repos_url":"https:\/\/api.github.com\/users\/kdk\/repos","events_url":"https:\/\/api.github.com\/users\/kdk\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/kdk\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"},{"id":3168479669,"node_id":"MDU6TGFiZWwzMTY4NDc5NjY5","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/synthesis","name":"synthesis","color":"8AB8AB","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-03T18:54:28Z","updated_at":"2021-08-03T18:54:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nFollowing #4699 and #4311 and others, the `qiskit.extensions` folder should be empty and can be deprecated and removed.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6860","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6860\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6860\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6860\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6860","id":958584827,"node_id":"MDU6SXNzdWU5NTg1ODQ4Mjc=","number":6860,"title":"Removing then adding a `QuantumRegister` adds the register but not the qubits","user":{"login":"rmlarose","id":32416820,"node_id":"MDQ6VXNlcjMyNDE2ODIw","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/32416820?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/rmlarose","html_url":"https:\/\/github.com\/rmlarose","followers_url":"https:\/\/api.github.com\/users\/rmlarose\/followers","following_url":"https:\/\/api.github.com\/users\/rmlarose\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/rmlarose\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/rmlarose\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/rmlarose\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/rmlarose\/orgs","repos_url":"https:\/\/api.github.com\/users\/rmlarose\/repos","events_url":"https:\/\/api.github.com\/users\/rmlarose\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/rmlarose\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-08-02T23:30:41Z","updated_at":"2021-08-04T16:23:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.1\r\n- **Python version**: 3.7.8\r\n- **Operating system**: Ubuntu 18.04\r\n\r\n### What is the current behavior?\r\n\r\nSee below.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```python\r\nimport qiskit\r\n\r\nqreg = qiskit.QuantumRegister(1)\r\ncircuit = qiskit.QuantumCircuit(qreg)\r\n\r\ncircuit._qubits = []\r\ncircuit.qregs = []\r\n\r\ncircuit.add_register(qreg)\r\n\r\nprint(circuit.qregs)\r\nprint(circuit.qubits)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n[QuantumRegister(1, 'q0')]\r\n[]\r\n```\r\n\r\n### What is the expected behavior?\r\n\r\n```\r\n[QuantumRegister(1, 'q0')]\r\n[Qubit(QuantumRegister(1, 'q0'), 0)]\r\n```\r\n\r\n\r\n### Suggested solutions\r\n\r\nI'm not sure, but if you add a different `QuantumRegister` this does update the qubits:\r\n\r\n```python\r\nimport qiskit\r\n\r\nqreg = qiskit.QuantumRegister(1)\r\ncircuit = qiskit.QuantumCircuit(qreg)\r\n\r\ncircuit._qubits = []\r\ncircuit.qregs = []\r\n\r\ncircuit.add_register(qreg, qiskit.QuantumRegister(1))\r\n\r\nprint(circuit.qregs)\r\nprint(circuit.qubits)\r\n```\r\n\r\n```\r\n[QuantumRegister(1, 'q0'), QuantumRegister(1, 'q1')]\r\n[Qubit(QuantumRegister(1, 'q1'), 0)]\r\n```","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6856","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6856\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6856\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6856\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6856","id":958297788,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAxNTk4NDI1","number":6856,"title":"Fix registerless bit naming collisions in QASM","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-02T16:14:00Z","updated_at":"2021-08-02T16:14:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6856","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6856","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6856.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6856.patch"},"body":"### Summary\r\n\r\nFix naming collisions of implicit registers in QuantumCircuit.qasm when\r\ndealing with registerless qubits and clbits.  Previously, registerless\r\nqubits and clbits were put into corresponding `qreg` and `creg` both\r\ncalled `regless`, despite the collision.  They will now have separate,\r\ndeterministically generated names, which will not clash with any\r\nuser-defined register names in the circuit.\r\n\r\nThe naming entropy is chosen to be this way to ensure that the output is\r\nentirely deterministic, and reproducible between different runs of\r\nPython and different systems; it's inconvenient for users using things\r\nlike Makefiles if our output is not fixed for a given input.\r\n\r\n\r\n\r\n\r\n### Details and comments\r\n\r\nFix #6779\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6855","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6855\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6855\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6855\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6855","id":958269386,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAxNTc0MDk4","number":6855,"title":"[WIP] Generalize `CXCancellation` optimization pass to generic gate-inverse pairs","user":{"login":"vadebayo49","id":87823717,"node_id":"MDQ6VXNlcjg3ODIzNzE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/87823717?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/vadebayo49","html_url":"https:\/\/github.com\/vadebayo49","followers_url":"https:\/\/api.github.com\/users\/vadebayo49\/followers","following_url":"https:\/\/api.github.com\/users\/vadebayo49\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/vadebayo49\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/vadebayo49\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/vadebayo49\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/vadebayo49\/orgs","repos_url":"https:\/\/api.github.com\/users\/vadebayo49\/repos","events_url":"https:\/\/api.github.com\/users\/vadebayo49\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/vadebayo49\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-08-02T15:39:41Z","updated_at":"2021-08-04T17:01:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6855","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6855","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6855.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6855.patch"},"body":"\r\n\r\n### Summary\r\nCloses #6576\r\nA generic gate-inverse cancellation pass can result in shorter circuit operations. This can lessen device noise and error by reducing the number of operations needed to generate the desired output.\r\n\r\n### Details and comments\r\nTo-do\r\n- [ ] test\r\n- [ ] release notes\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6850","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6850\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6850\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6850\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6850","id":958049668,"node_id":"MDU6SXNzdWU5NTgwNDk2Njg=","number":6850,"title":"`BlueprintCircuit` doesn't get copied properly","user":{"login":"ElePT","id":57907331,"node_id":"MDQ6VXNlcjU3OTA3MzMx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57907331?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ElePT","html_url":"https:\/\/github.com\/ElePT","followers_url":"https:\/\/api.github.com\/users\/ElePT\/followers","following_url":"https:\/\/api.github.com\/users\/ElePT\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ElePT\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ElePT\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ElePT\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ElePT\/orgs","repos_url":"https:\/\/api.github.com\/users\/ElePT\/repos","events_url":"https:\/\/api.github.com\/users\/ElePT\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ElePT\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-08-02T11:32:13Z","updated_at":"2021-08-03T00:46:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.0\r\n- **Python version**: 3.9.6\r\n- **Operating system**: macOS Big Sur 11.4\r\n\r\n### What is the current behavior?\r\nWhen trying to fix [this issue](https:\/\/github.com\/Qiskit\/qiskit-machine-learning\/issues\/180), I found that `RawFeatureVector` (a qiskit-machine-learning class which extends `BlueprintCircuit`) cannot be copied properly using `.copy()`.  This affects other actions that involve copying the circuit, such as parameter binding (which by the way, does not support in-place execution, I am not sure if this is the intended behavior) `raw_feat_vector = raw_feat_vector.bind_parameters(bounds)`.\r\n\r\n### Steps to reproduce the problem\r\n\r\nThe following code shows how `num_qubits` on the copied map is 0, when it should be 2.\r\n```\r\nfrom qiskit_machine_learning.circuit.library import RawFeatureVector\r\nfeature_dim = 4  # dimension of each data point\r\nfeature_map = RawFeatureVector(feature_dimension=feature_dim)\r\nprint(feature_map.draw())\r\nprint(feature_map.num_qubits)\r\ncopy_map = feature_map.copy()\r\nprint(copy_map.draw())\r\nprint(copy_map.num_qubits)\r\n```\r\n\r\n### What is the expected behavior?\r\nAn identical copy of the original circuit.\r\n\r\n### Suggested solutions\r\nI believe this issue happens because `BlueprintCircuit` does not have a dedicated copy method. The `QuantumCircuit.copy()` method does not include a building step, which is fine for normal `QuantumCircuit`s, but for  `BlueprintCircuit`, this leaves the copy operation incomplete. \r\n\r\nOn \"blueprintcircuit.py\" line 59, we can see the build method, which requires `self._data==None`:\r\n```\r\n@abstractmethod\r\ndef _build(self) -> None:\r\n    \"\"\"Build the circuit.\"\"\"\r\n    # do not build the circuit if _data is already populated\r\n    if self._data is not None:\r\n        return\r\n\r\n    self._data = []\r\n\r\n    # check whether the configuration is valid\r\n    self._check_configuration()\r\n```\r\n\r\nAnd on the definition of `QuantumCircuit.copy()` (\"quantumcircuit.py\" line 1923), we can see that the copy method populates the `_data` attribute, so this also blocks potential future calls to the `_build` method (if that was ever an option). \r\n\r\n```\r\ncpy._data = [\r\n    (instr_copies[id(inst)], qargs.copy(), cargs.copy())\r\n    for inst, qargs, cargs in self._data\r\n]\r\n```\r\nI think that overriding the `copy()` method for `BlueprintCircuit` and adding a specific build step  should not be too complicated, and could fix this issue.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6849","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6849\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6849\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6849\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6849","id":957915229,"node_id":"MDU6SXNzdWU5NTc5MTUyMjk=","number":6849,"title":"Introduce package structure to unit tests","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-02T08:51:35Z","updated_at":"2021-08-02T08:51:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nTerra has unit tests that have a mostly flat structure. It prevents from running a bunch of file tests (and only them) at once if they belong to a package not represented in tests hierarchy. The enhancement is to mirror the structure of packages from the source code in unit tests.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6847","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6847\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6847\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6847\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6847","id":957044153,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAwNTQ3OTQ2","number":6847,"title":"Change float to complex for return from ParameterExpression gradient","user":{"login":"enavarro51","id":16268251,"node_id":"MDQ6VXNlcjE2MjY4MjUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/16268251?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/enavarro51","html_url":"https:\/\/github.com\/enavarro51","followers_url":"https:\/\/api.github.com\/users\/enavarro51\/followers","following_url":"https:\/\/api.github.com\/users\/enavarro51\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/enavarro51\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/enavarro51\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/enavarro51\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/enavarro51\/orgs","repos_url":"https:\/\/api.github.com\/users\/enavarro51\/repos","events_url":"https:\/\/api.github.com\/users\/enavarro51\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/enavarro51\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-30T20:34:57Z","updated_at":"2021-08-04T12:24:44Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6847","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6847","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6847.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6847.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes #6813\r\n\r\n### Details and comments\r\n\r\nThis fixes an error caused by the ParameterExpression gradient returning a float when there is an imaginary in the expression.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6841","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6841\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6841\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6841\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6841","id":956619471,"node_id":"MDU6SXNzdWU5NTY2MTk0NzE=","number":6841,"title":"Blueprintcircuits do not check argument validity upon construction","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-30T10:28:05Z","updated_at":"2021-07-30T13:30:46Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: latest\r\n- **Python version**:\r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nThis should error but does not:\r\n\r\n```python\r\nfrom qiskit.circuit.library import RealAmplitudes\r\nqc = RealAmplitudes(5,5,5,5)\r\n```\r\n\r\nonly later if I do something, e.g.:\r\n\r\n```\r\nqc.h(0)\r\n```\r\n\r\ndoes it complain.  Curiously after raising a `ValueError` the original `qc` is now an empty circuit (related to #6840 ?).\r\n\r\n```python\r\nq_0: \r\n     \r\nq_1: \r\n     \r\nq_2: \r\n     \r\nq_3: \r\n     \r\nq_4: \r\n     \r\n```\r\n\r\n### Steps to reproduce the problem\r\n\r\n\r\n\r\n### What is the expected behavior?\r\n\r\n\r\n\r\n### Suggested solutions\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6840","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6840\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6840\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6840\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6840","id":956608441,"node_id":"MDU6SXNzdWU5NTY2MDg0NDE=","number":6840,"title":"`BlueprintCircuit` does not respect modifications when being rebuilt","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-30T10:13:53Z","updated_at":"2021-07-30T13:34:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: any\r\n- **Operating system**: any\r\n\r\n### What is the current behavior?\r\n\r\nDerived classes of `BlueprintCircuit` will let the user modify the circuit without comment, for example by adding gates or registers, but anything that triggers a rebuild of the circuit will behave unpredicatbly, often overriding all modifications.\r\n\r\nThis issue is a follow on from a previous discussion: https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6828#discussion_r679360956.\r\n\r\n\r\n### Steps to reproduce the problem\r\n\r\nExample taken from @Cryoris' comment:\r\n\r\n```python\r\n>>> from qiskit.circuit.library import RealAmplitudes\r\n>>> circuit = RealAmplitudes(1, reps=1)\r\n>>> circuit.h(0)\r\n<qiskit.circuit.instructionset.InstructionSet object at 0x7fb3e95039d0>\r\n>>> circuit.draw()\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2510\r\nq_0: \u2524 RealAmplitudes(\u03b8[0],\u03b8[1]) \u251c\u2524 H \u251c\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\r\n>>> circuit.num_qubits = 3\r\n>>> circuit.draw()\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\nq_0: \u25240                                               \u251c\r\n     \u2502                                                \u2502\r\nq_1: \u25241 RealAmplitudes(\u03b8[0],\u03b8[1],\u03b8[2],\u03b8[3],\u03b8[4],\u03b8[5]) \u251c\r\n     \u2502                                                \u2502\r\nq_2: \u25242                                               \u251c\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nThe Hadamard has gone missing.\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nWe shouldn't be able to get ourselves into a situation where our modifications will be overwritten without warning.\r\n\r\n\r\n### Suggested solutions\r\n\r\nPossibilities:\r\n- `BlueprintCircuit` (or derived classes) reject modifications outside their expected set.\r\n- On modification, return a concrete `QuantumCircuit` instance without the `_build()` functions, and emit a suitable warning.  Ensure there's a method we can call first to turn it into a concrete class, so the warning is avoidable if that's something the user wants to do.\r\n- Attempt to do some crazy trickery to maintain the spirit of the instructions.  This could be something like keeping track of a \"modification queue\", and re-applying it on rebuild.  This would be the most difficult, and probably not a good idea at all - it basically assumes that `_build()` will never change the structure of the circuit, which runs somewhat counter to the purpose of that method at all.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6839","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6839\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6839\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6839\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6839","id":956602244,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAwMTcwMDIz","number":6839,"title":"[WIP] add termination callback to SPSA","user":{"login":"peendebak","id":17724047,"node_id":"MDQ6VXNlcjE3NzI0MDQ3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/17724047?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/peendebak","html_url":"https:\/\/github.com\/peendebak","followers_url":"https:\/\/api.github.com\/users\/peendebak\/followers","following_url":"https:\/\/api.github.com\/users\/peendebak\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/peendebak\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/peendebak\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/peendebak\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/peendebak\/orgs","repos_url":"https:\/\/api.github.com\/users\/peendebak\/repos","events_url":"https:\/\/api.github.com\/users\/peendebak\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/peendebak\/received_events","type":"User","site_admin":false},"labels":[{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-07-30T10:05:48Z","updated_at":"2021-08-05T12:01:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6839","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6839","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6839.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6839.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThe `SPSA` optimizer is suitable for noisy optimization if evaluation of the cost function is expensive. The current implementation terminates after the maximum number of iterations, even if the optimizer already converged to a local optimum.\r\n\r\nThis PR adds a callback `termination_callback` that can be implemented by the user to abort the optimization.\r\n\r\nAn example:\r\n```\r\nfrom qiskit.algorithms.optimizers import SPSA\r\nimport numpy as np\r\n\r\ndef objective(x, a=2):\r\n    objective.n=objective.n+1\r\n    return (x[0]-a)**2 + 4*(x[1])**2 + .01*np.random.rand()\r\n\r\nclass AverageDecreaseTermination:\r\n    \r\n    def __init__(self, N : int, tolerance :  float = 0):\r\n        \"\"\" Callback to terminate optmization when the average decrease over the last N data points is smaller than the specified tolerance \"\"\" \r\n        self.N = N\r\n        self.tolerance = tolerance\r\n        self.values = []\r\n    \r\n    def __call__(self, parameters, value) -> bool:\r\n        \"\"\" \r\n        Returns:\r\n            True if the optimization loop should be aborted \r\n        \"\"\"\r\n        self.values.append(value)\r\n        \r\n        if len(self.values)>self.N:\r\n            last_values = self.values[-self.N:]\r\n            pp=np.polyfit(range(self.N), last_values, 1)\r\n            slope=pp[0] \/ self.N \r\n            \r\n            #print(f'AverageDecreaseTermination: slope {slope}')\r\n            if slope>self.tolerance:\r\n                return True\r\n        return False\r\n    \r\n# SPSA optimization       \r\nobjective.n=0\r\noptimizer = SPSA()\r\npoint, value, iterations = optimizer.optimize(2, objective, initial_point = (.75,0))\r\nprint(f'point {point}, value {value}, iterations {iterations}, objective evaluations {objective.n}')\r\n\r\n\r\n# SPSA optimization with early abort\r\nobjective.n=0\r\ntermination_callback = AverageDecreaseTermination(8)\r\noptimizer = SPSA(termination_callback=termination_callback)\r\npoint, value, iterations = optimizer.optimize(2, objective, initial_point = (1.5,0))\r\nprint(f'point {point}, value {value}, iterations {iterations}, objective evaluations {objective.n}')\r\n```\r\n\r\n### Details and comments\r\n\r\nFor noisy optimization a simple termination criterium such as a `tolerance` on decrease of the objective function is not suitable. For this reason a callback is specified so that the user can choose which termination criterium to use.\r\n\r\nTo keep the number of objective evaluations as low as possible, the internal evaluations of the loss function have been used to provide an estimate of the objective value.\r\n \r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6838","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6838\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6838\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6838\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6838","id":956531379,"node_id":"MDU6SXNzdWU5NTY1MzEzNzk=","number":6838,"title":"Migrate Variational Time Evolution PoC to the new design of Quantum Time Evolution.","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-30T08:33:34Z","updated_at":"2021-07-30T16:21:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The goal of this issue is to use the proof of concept code for Variational Time Evolution authored by @Zoufalc and migrate it to the new Variational Time Evolution framework.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6832","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6832\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6832\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6832\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6832","id":955886367,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk5NTcwNDUw","number":6832,"title":"Add GatesInBasis analysis pass","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-29T14:12:01Z","updated_at":"2021-08-03T19:32:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6832","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6832","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6832.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6832.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis commit adds a new analysis pass, GatesInBasis, which is used to\r\ncheck if all the gates in the circuit are currently in the basis set or\r\nnot. The intent for this pass is to use this to conditionally trigger\r\nthe execution of basis translation (normally the BasisTranslator) in the\r\nmain optimization loop of the preset pass managers, however this is\r\nblocked on #6830. So for now this just adds the pass so we can use it in\r\nthe future.\r\n\r\n### Details and comments","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6831","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6831\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6831\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6831\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6831","id":955867753,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk5NTU0NTMz","number":6831,"title":"Add type hints to gates and QuantumCircuit","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-29T13:52:52Z","updated_at":"2021-08-02T09:35:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6831","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6831","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6831.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6831.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis is pretty much all documentation changes, except that it also moves the definition of `QuantumCircuit.measure` into `quantumcircuit.py` rather than monkey-patching it from `measure.py`.  This makes it consistent with other instruction definitions, and made it easier to access the `QubitSpecifier` and `ClbitSpecifier` type aliases.\r\n\r\n#### Add type hints to QuantumCircuit\r\n\r\nThis adds full type hints to all public function entry points in\r\nQuantumCircuit.  This will not cause quantumcircuit.py to pass a mypy\r\ncheck yet; there are various idioms used within the file which are not\r\nstatically type-safe (nor, in some cases, dynamically type safe in the\r\nsense that we sometimes rely on mismatched types to throw exceptions).\r\nThese include anything which takes the `inplace` argument, since\r\n`inplace=True` versions do not return, which influences the out types to\r\n    Optional[\"QuantumCircuit\"]\r\nThis then means that methods using these functions (e.g.\r\n`QuantumCircuit.__add__`) become unsafe; even though they use the\r\ndefault `inplace=False`, subclasses could override this while still\r\nmaintaining type safety, and so the operation is not safe.\r\n\r\nThis patch makes no attempt to modify the behaviour of these\r\nnon-type-safe functions, only to classify what the current types are.\r\n\r\n#### Add type hints and label to all standard gate classes\r\n\r\nThis completes the standard-library gate documentation overhaul tracked\r\nby #3705, and mostly done in #4017, by adding type hints to the\r\ninitializers.\r\n\r\nIt also adds the missing `label` option to the iSWAP, R, RXX, RYY, RZX\r\nand RZZ gates, to bring them up to parity with the other gates, tracked\r\nin #6780.\r\n\r\n#### Add parameters to QuantumCircuit gate docstrings\r\n\r\nThis only adds short documentation to the docstrings of the gate methods\r\n(for example `QuantumCircuit.x`) about the parameters and the return\r\nvalues.  It does not currently import the matrix representations into\r\nthe docstrings themselves, because the gate classes include those.  The\r\nexpectation is that you would see the docstring when running\r\ninteractively, and even in Jupyter, this typically does not include\r\ndisplaying maths.  The matrix form is more useful when looking at the\r\nonline Sphinx documentation, where the cross-reference gate link will\r\nwork more easily.\r\n\r\n\r\n\r\n\r\n### Details and comments\r\n\r\nFix #3705 \r\nFix #6780\r\n\r\nI didn't pull the actual matrix definitions into the QuantumCircuit docstrings, because I think they'll add a lot of unreadable noise to the points where you'd actually see them most commonly - in the Jupyter\/IDE popups for help and completions.  These are text-based, and so don't really show maths in the most part.  The only places you expect to see the maths are in the Spinx websites, where the links that are already in the docstring will work anyway.\r\n\r\nThere is a slight nuisance at the moment in that neither `sphinx.ext.napoleon` nor `sphinx_autodoc_typehints` quite handle cross-referencing the typehints in the docstrings properly, but this is something we could fix externally.\r\n\r\nThere are a few parts in `QuantumCircuit` where we're not doing things fully type-safely, and a couple of places where we do it in such a way that mypy can't statically analysise it.  I haven't attempted to fix any of this, since that can be done elsewhere.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6830","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6830\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6830\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6830\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6830","id":955768538,"node_id":"MDU6SXNzdWU5NTU3Njg1Mzg=","number":6830,"title":"Nested flow control for Passmanagers","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-29T12:03:13Z","updated_at":"2021-07-30T18:49:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nSkimming through the pass manager code and reading the documentation (which is quite lacking) for building pass managers I do not see an option to nest flow control. The `FlowController` class is only attached to a set of passes which makes it impossible to apply an additional flow controller on a subset of those passes. For example the use case I have in mind is to have a condition in a do while loop, for example something like:\r\n\r\n```python\r\nwhile not fixed_point:\r\n    pass_a()\r\n    pass_b()\r\n    check_pass()\r\n    if not check_pass_result:\r\n        pass_d()\r\n    pass_e()\r\npass_f()\r\n```\r\n\r\nwhich at least I couldn't find a way to represent in the current pass manager structure. It would be very useful as we make the pass manager more sophisticated to have nested flow control like this. If I just missed it we should improve the documentation around this (which honestly we need regardless).","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6829","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6829\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6829\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6829\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6829","id":955565573,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk5Mjk3NTQ2","number":6829,"title":"enable inverse of classically conditioned gate","user":{"login":"ewinston","id":25756217,"node_id":"MDQ6VXNlcjI1NzU2MjE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25756217?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ewinston","html_url":"https:\/\/github.com\/ewinston","followers_url":"https:\/\/api.github.com\/users\/ewinston\/followers","following_url":"https:\/\/api.github.com\/users\/ewinston\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ewinston\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ewinston\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ewinston\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ewinston\/orgs","repos_url":"https:\/\/api.github.com\/users\/ewinston\/repos","events_url":"https:\/\/api.github.com\/users\/ewinston\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ewinston\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-07-29T07:55:02Z","updated_at":"2021-08-02T14:25:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6829","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6829","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6829.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6829.patch"},"body":"\r\n\r\n### Summary\r\nThis PR enables the preservation of the classical condition for the inverse of a classically conditioned gate. \r\nAlso added is the ability to initialize the classical condition during instruction instantiation which should help with progress toward issue #2439.\r\n  \r\nFixes #6810 \r\n\r\n\r\n### Details and comments\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6828","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6828\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6828\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6828\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6828","id":955219749,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk5MDAyMjU0","number":6828,"title":"Fix QAOA parameter handling","user":{"login":"Cryoris","id":5978796,"node_id":"MDQ6VXNlcjU5Nzg3OTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5978796?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Cryoris","html_url":"https:\/\/github.com\/Cryoris","followers_url":"https:\/\/api.github.com\/users\/Cryoris\/followers","following_url":"https:\/\/api.github.com\/users\/Cryoris\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Cryoris\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Cryoris\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Cryoris\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Cryoris\/orgs","repos_url":"https:\/\/api.github.com\/users\/Cryoris\/repos","events_url":"https:\/\/api.github.com\/users\/Cryoris\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Cryoris\/received_events","type":"User","site_admin":false},"labels":[{"id":1561344279,"node_id":"MDU6TGFiZWwxNTYxMzQ0Mjc5","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20Bugfix","name":"Changelog: Bugfix","color":"bc2a20","default":false,"description":"Include in the Fixed section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-07-28T20:44:28Z","updated_at":"2021-08-05T07:24:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6828","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6828","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6828.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6828.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFix #6424, #6425 and potentially also Qiskit\/qiskit-optimization#210.\r\n\r\n### Details and comments\r\n\r\nRevert to parameter handling of the state prior to Terra 0.18.0:\r\n* sort the parameters to first show cost operator parameters, then mixer operator parameters\r\n* add parameter bounds for the mixer operator parameters\r\n* if the mixer is a parameterized circuit, replace the parameters in each repetition\r\n\r\nThis PR also simplifies the `EvolvedOperatorAnsatz` by relying on the `NLocal` circuit to do the reparameterization.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6827","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6827\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6827\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6827\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6827","id":954936098,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk4NzU3NjQ3","number":6827,"title":"Track swap mapping permutations in Stochastic mapper","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-28T14:41:07Z","updated_at":"2021-07-29T12:49:21Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6827","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6827","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6827.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6827.patch"},"body":"\r\n\r\n### Summary\r\nBeing able to determine the final qubit permutation after swap mapping has been a much needed routine for a couple of years now.  It is trivial to implement and I have done so here for the Stochastic swap mapper.\r\n\r\nLeft to do before removing WIP:\r\n\r\n- [x] Add tests.\r\n- [x] Changelog\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6826","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6826\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6826\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6826\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6826","id":954832752,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk4NjY3NDQw","number":6826,"title":"Switch PauliTable to PauliList in SparsePauliOp","user":{"login":"ikkoham","id":6814928,"node_id":"MDQ6VXNlcjY4MTQ5Mjg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6814928?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ikkoham","html_url":"https:\/\/github.com\/ikkoham","followers_url":"https:\/\/api.github.com\/users\/ikkoham\/followers","following_url":"https:\/\/api.github.com\/users\/ikkoham\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ikkoham\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ikkoham\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ikkoham\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ikkoham\/orgs","repos_url":"https:\/\/api.github.com\/users\/ikkoham\/repos","events_url":"https:\/\/api.github.com\/users\/ikkoham\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ikkoham\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-28T13:03:07Z","updated_at":"2021-08-05T13:06:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6826","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6826","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6826.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6826.patch"},"body":"\r\n\r\n### Summary\r\n\r\nWe used to use `PauliTable` as the internal data in `SparsePauliOp`, but this PR makes it to use `PauliList`.\r\n`SparsePauliOp.table` setter and getter are deprecated.\r\n\r\nThis PR fixes #6815.\r\n```python\r\nSparsePauliOp(Pauli('iZ'))\r\n```\r\nis\r\n```\r\nSparsePauliOp(['Z'],\r\n              coeffs=[0.+1.j])\r\n```\r\n\r\n### Details and comments\r\n\r\nTODO: \r\n- [ ] Add release note\r\n- [ ] Add test for initialization by PauliList","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6825","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6825\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6825\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6825\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6825","id":954494265,"node_id":"MDU6SXNzdWU5NTQ0OTQyNjU=","number":6825,"title":"Redefine backend usecase","user":{"login":"nkanazawa1989","id":39517270,"node_id":"MDQ6VXNlcjM5NTE3Mjcw","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/39517270?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nkanazawa1989","html_url":"https:\/\/github.com\/nkanazawa1989","followers_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/followers","following_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/orgs","repos_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/repos","events_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-28T05:40:00Z","updated_at":"2021-08-03T02:05:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nThis proposes a change of the policy for the backend handling, namely, allowing directly overriding the backend defaults. Note that technically it is already possible since backend is mutable, but the transpiler is not designed to do that.\r\n\r\nThis doesn't request to change any public API. Just requesting to approve the use case of overriding a backend with qiskit-experiment.\r\n\r\n# Background\r\n\r\nSo far the backend has been considered to be a non-rewritable object, since only provider can change the hardware configuration. This is why the transpiler has the API\r\n\r\n```python\r\ncirc = transpile(circ, backend, **options_to_override)\r\n```\r\n\r\nso that options default to the backend values, but they can be overridden while protecting the backend object.\r\n\r\nWith introduction of qiskit-experiment, user will get extended capability of experiment. This will provide a library of experiments to calibrate a quantum gate and one will be able to use their custom instruction without hack. This means Qiskit can also override a part of backend definitions and the backend is no longer non-rewritable object.\r\n\r\n# Example\r\n\r\nRun single qubit gate calibration to create `my_gate` for Q0. Given this experiment consists of `[amp_cal, freq_cal]` for simplicity. The parameter is managed by `Calibration` class. Then, use `my_gate` for an optimization experiment provided by `SomeOptimization` class that may be provided by other qiskit library. This class has own run method to control the classical optimization loop and job execution.\r\n\r\nBelow examples are pseudo codes.\r\n\r\n### Conventional\r\n\r\n```\r\nInitialize backend\r\nInitialize Calibration(backend) as cal\r\nInitialize SomeOptimization as opt\r\n\r\nfor experiment in [amp_cal, freq_cal] do\r\n   Perform experiment.run(backend, cal) and store result\r\n   Update cal with result\r\n\r\n# create execution and transpile options\r\nbasis_gates = backend.configuration().basis_gates\r\nbasis_gates += [\"my_gate\"]\r\n\r\nGet qubit_freqs from cal\r\nGet inst_map from cal   # this is gate-schedule mapping\r\n\r\n# create execution options\r\noptions = {\r\n    \"transpile_options\": {\r\n        \"basis_gates\": basis_gates,\r\n        \"inst_map\": inst_map\r\n    },\r\n    \"run_options \": {\r\n        \"schedule_los\": qubit_freqs\r\n    }\r\n}\r\n\r\n# run optimization\r\nresult = opt.run(configured_backend, **options)\r\n```\r\n\r\nAs you can see, the backend is protected throughout the experiment but instead we need to manage many objects.\r\n- `basis_gates`\r\n- `qubit_freqs`\r\n- `my_gate` schedule (`inst_map`)\r\n\r\nAnd we need to grantee the `SomeOptimization` instance can manage these options. This frustrate us to integrate calibration into some application circuits.\r\n\r\n### Re-writable backend\r\n\r\n```\r\nInitialize backend\r\nInitialize Calibration(backend) as cal\r\nInitialize SomeOptimization as opt\r\n\r\nfor experiment in [amp_cal, freq_cal] do\r\n   Perform experiment.run(backend, cal) and store result\r\n   Update cal with result\r\n\r\n# renew backend\r\nconfigured_backend = cal.export()\r\n\r\n# run optimization\r\nresult = opt.run(configured_backend, **options)\r\n```\r\n\r\nIf the backend is re-writable, we can seamlessly write calibration and the application-level experiment across qiskit libraries. Note that here I assume the runner method takes backend, but actual algorithm classes may have different implementations, i.e. `QuantumInstance`. In this case, we can pass the backend to it.\r\n\r\nUsually these runner methods call the transpiler with the backend behind the scene. If the backend contains all necessary information to override the instruction set and the transpiler can handle that, we can easily inject custom instruction into applications without modifying the application side. Backend update can be delegated to the calibration instance, i.e. qiskit-experiment.\r\n\r\nBy allowing this usecase, user can also override backend without qiskit-experiment. This means we need some validations for non-rewritable settings such as number of qubits, coupling-map, etc... Perhaps, replacing `backend.configuration()` and `backend.properties()` with a dataclass with the `frozen=True` option can solve this issue.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6824","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6824\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6824\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6824\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6824","id":954308345,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk4MjI0MTc3","number":6824,"title":"Support non-float global phase in QPY","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-27T22:19:24Z","updated_at":"2021-08-05T13:40:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6824","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6824","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6824.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6824.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis commit adds support for non-float global phase types in qpy.\r\nPreviously, the QPY format only supported global phase parameters as\r\nfloats, however the QuantumCircuit object supports additional types,\r\nlike int, parameter expressions, etc. To support this in QPY a format\r\nrevision is needed as this was not expressible in QPYv1. This commit\r\nadds a new format QPY v2 which makes this change to the circuit HEADER\r\nstruct so we can represent different types for global phase. This will\r\nbe released with 0.19.0, so any additional format changes we make in\r\n0.19.0 will be also part of QPY v2.\r\n\r\n### Details and comments\r\n\r\nTODO:\r\n\r\n- [x] Add release note\r\n- [x] Add backwards compat tests for qiskit >=0.19.0 with new global phase types","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6823","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6823\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6823\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6823\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6823","id":954215495,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk4MTQ1OTEz","number":6823,"title":"Deprecate the CouplingMap.subgraph() method","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":1561340583,"node_id":"MDU6TGFiZWwxNTYxMzQwNTgz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20Deprecation","name":"Changelog: Deprecation","color":"b60205","default":false,"description":"Include in Deprecated section of changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-27T19:51:30Z","updated_at":"2021-07-28T14:47:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6823","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6823","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6823.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6823.patch"},"body":"\r\n\r\n\r\n\r\n### Summary\r\n\r\nThe `CouplingMap.subgraph()` method has overlapping functionality with the\r\n`reduce()` method as both return a new `CouplingMap` object with a subset of\r\nnodes from the original. In practice the only difference between the 2 is\r\nthat `subgraph()` doesn't retain the input list order for the output\r\ncoupling map while `reduce()` does. Since there is likely a use case for\r\nretaining that list order this commit deprecates the `subgraph()` method\r\nso we don't maintain duplicate methods.\r\n\r\nIt's worth noting that the `subgraph()` method is probably slightly faster\r\nas it just calls retworkx's subgraph. So if you don't care about node list order\r\nYou can still do use this method with the `CouplingMap` API by just doing\r\nsomething like:\r\n```python\r\nsubgraph = CouplingMap()\r\nsubgraph.graph = original_cmap.graph.subgraph(node_list)\r\n```\r\ninstead of:\r\n```python\r\nsubgraph = original_cmap.subgraph(node_list)\r\n```\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6822","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6822\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6822\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6822\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6822","id":954137560,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk4MDc4MDEx","number":6822,"title":"Fix measure with condition display in mpl and latex drawers","user":{"login":"enavarro51","id":16268251,"node_id":"MDQ6VXNlcjE2MjY4MjUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/16268251?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/enavarro51","html_url":"https:\/\/github.com\/enavarro51","followers_url":"https:\/\/api.github.com\/users\/enavarro51\/followers","following_url":"https:\/\/api.github.com\/users\/enavarro51\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/enavarro51\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/enavarro51\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/enavarro51\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/enavarro51\/orgs","repos_url":"https:\/\/api.github.com\/users\/enavarro51\/repos","events_url":"https:\/\/api.github.com\/users\/enavarro51\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/enavarro51\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-27T18:10:09Z","updated_at":"2021-08-04T13:46:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6822","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6822","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6822.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6822.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes #6804\r\n\r\n### Details and comments\r\n\r\nThis PR fixes a problem where a measure with condition will sometimes display incorrectly in the 'mpl' and 'latex' drawers. The corrected displays are below.\r\n\r\n```\r\nqr = QuantumRegister(2, \"qr\")\r\ncr1 = ClassicalRegister(2, \"cr1\")\r\ncr2 = ClassicalRegister(2, \"cr2\")\r\nqc = QuantumCircuit(qr, cr1, cr2)\r\nqc.h(0)\r\nqc.h(1)\r\nqc.measure(0, cr1[0])\r\nqc.measure(1, cr2[0]).c_if(cr1, 1)\r\nqc.draw('mpl')\r\n```\r\n![image](https:\/\/user-images.githubusercontent.com\/16268251\/127674536-455b20db-9309-4cef-a547-ad939855ca5b.png)\r\n![image](https:\/\/user-images.githubusercontent.com\/16268251\/127674626-b12c99fa-1344-4e53-9876-a1db46f129ca.png)\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6821","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6821\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6821\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6821\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6821","id":954116134,"node_id":"MDU6SXNzdWU5NTQxMTYxMzQ=","number":6821,"title":"Quantum instance job submission has infinite loop","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-27T17:42:09Z","updated_at":"2021-07-27T17:42:09Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: latest\r\n- **Python version**:\r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nSubmitting jobs via the `quantum_instance` has an infinite loop that does not exit unless the job was submitted correctly and a `job_id` can be grabbed: \r\n\r\nhttps:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/0c6890dc0ed55626e96ceb5c27234ed2116e76bb\/qiskit\/utils\/run_circuits.py#L149\r\n\r\nIf this does not happen, the code loops forever emitting warnings.\r\n\r\nReference: https:\/\/github.com\/Qiskit-Partners\/qiskit-aqt-provider\/issues\/46\r\n\r\n### Steps to reproduce the problem\r\n\r\n\r\n\r\n### What is the expected behavior?\r\nQiskit does not try infinitely many times to submit jobs.\r\n\r\n\r\n### Suggested solutions\r\nNo `while True:` loops.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6819","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6819\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6819\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6819\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6819","id":954026118,"node_id":"MDU6SXNzdWU5NTQwMjYxMTg=","number":6819,"title":"Greatly simplify variational algorithm workflows","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-27T15:52:13Z","updated_at":"2021-08-05T09:49:06Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\nThe workflow for variational algorithms is very monolithic and not very flexible.  Instead it should be possible for users to create variational workflows that are flexible, explicit in what they do, and require minimal knowledge of custom classes.  For example, the following works:\r\n\r\n```python\r\n\r\n# Problem\r\nH2_op = (0.39793742484318045 * I ^ Z) + \\\r\n        (-0.39793742484318045 * Z ^ I) + \\\r\n        (-0.01128010425623538 * Z ^ Z) + \\\r\n        (0.18093119978423156 * X ^ X)\r\n\r\n# Ansatz \r\nansatz = TwoLocal(H2_op.num_qubits, rotation_blocks='ry',\r\n                  entanglement_blocks='cx')  \r\n\r\n# Conversions that I have to do to get useful stuff and should be easy to use functions\r\nop_strings, coeffs = operator_str_and_coeff(H2_op)\r\nmeas_circs, masks = opstr_to_meas(op_strings, H2_op.num_qubits)\r\nfull_circs = [ansatz.compose(meas_circs[kk]).measure_all(inplace=False) \\\r\n              for kk in range(len(meas_circs))]\r\n\r\nnum_params = ansatz.num_parameters\r\nparams = 2*np.pi*np.random.random(opt_params.shape[0])\r\nbackend = Aer.get_backend('qasm_simulator')\r\n\r\ndef vqe_func(params, *args):\r\n    bound_circs = [circ.bind_parameters(params) for circ in full_circs]\r\n    # Vary your shots here if you want.\r\n    job = backend.run(bound_circs, shots=8192)\r\n    counts = job.result().get_counts()\r\n    # Do whatever error mitigation you want here.\r\n    energy = np.sum(coeffs*np.array([expval(counts[kk], masks[kk]) for kk in range(len(masks))]))\r\n    return energy\r\n\r\nimport scipy.optimize as opt\r\nres = opt.minimize(vqe_func, params, method = 'SLSQP')\r\n```\r\n\r\nNote that I have no need for a `quantum_instance`, no need to know what mitigation object might be passed, no need for wrapped optimizers, etc.  This makes things much much easier to understand, reuse, and extend upon.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6817","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6817\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6817\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6817\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6817","id":953988207,"node_id":"MDU6SXNzdWU5NTM5ODgyMDc=","number":6817,"title":"`CouplingMap.reduce()` overlaps `CouplingMap.subgraph()`","user":{"login":"kdk","id":2241698,"node_id":"MDQ6VXNlcjIyNDE2OTg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2241698?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/kdk","html_url":"https:\/\/github.com\/kdk","followers_url":"https:\/\/api.github.com\/users\/kdk\/followers","following_url":"https:\/\/api.github.com\/users\/kdk\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/kdk\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/kdk\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/kdk\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/kdk\/orgs","repos_url":"https:\/\/api.github.com\/users\/kdk\/repos","events_url":"https:\/\/api.github.com\/users\/kdk\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/kdk\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"assignees":[{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false}],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-07-27T15:11:53Z","updated_at":"2021-07-27T15:12:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I just noticed there's a `.reduce()` method which does basically the same thing (without this bug). Is there a reason to have both?\r\n\r\n_Originally posted by @ajavadia in https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6738#issuecomment-882654278_","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6816","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6816\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6816\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6816\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6816","id":953918729,"node_id":"MDU6SXNzdWU5NTM5MTg3Mjk=","number":6816,"title":"Cannot compose circuits with different numbers of measurements","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":872098967,"node_id":"MDU6TGFiZWw4NzIwOTg5Njc=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20documentation","name":"type: documentation","color":"9ddd5d","default":false,"description":"Something is not clear or error in description"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":2,"created_at":"2021-07-27T14:03:28Z","updated_at":"2021-07-27T15:06:53Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.17.4\r\n- **Python version**:\r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nCompose fails when combining circuits with no measurements together with those that do, e.g.\r\n\r\n```python\r\nansatz = TwoLocal(2, rotation_blocks='ry',\r\n                  entanglement_blocks='cx')  \r\n\r\nqc = QuantumCircuit(2)\r\nqc.measure_all()\r\n\r\nansatz.compose(qc)\r\n```\r\n\r\ngives:\r\n\r\nCircuitError: \"Trying to compose with another QuantumCircuit which has more 'in' edges.\"\r\n\r\nwhile `+` works, but is deprecated in favor of `compose`.\r\n\r\n\r\n\r\n### Steps to reproduce the problem\r\n\r\n\r\n\r\n### What is the expected behavior?\r\n\r\n\r\n\r\n### Suggested solutions\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6815","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6815\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6815\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6815\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6815","id":953852964,"node_id":"MDU6SXNzdWU5NTM4NTI5NjQ=","number":6815,"title":"SparsePauliOp causes bugs in e.g. commutators.","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-27T12:54:35Z","updated_at":"2021-07-30T10:56:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.8\r\n- **Operating system**: MacOS\r\n\r\n### What is the current behavior?\r\n\r\nThe `SparsePauliOp` does not handle coefficients correctly or is used against its specification in opflow. With the help of @Cryoris we noticed the following:\r\n\r\n```\r\n>>> SparsePauliOp(Pauli('iZ')) == SparsePauliOp(Pauli('-iZ'))\r\nTrue\r\n>>> SparsePauliOp(Pauli('iZ')) == SparsePauliOp(Pauli('Z'))\r\nTrue\r\n```\r\nwhich is probably the root of the problem with, e.g., the commutator below.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```\r\nX\r\nOut[189]: PauliOp(Pauli('X'), coeff=1.0)\r\nY\r\nOut[190]: PauliOp(Pauli('Y'), coeff=1.0)\r\nv = commutator(X,Y)\r\nv\r\nOut[192]: \r\nPauliSumOp(SparsePauliOp([[False, False]],\r\n              coeffs=[0.+0.j]), coeff=1.0)\r\nv.equals(2j*Z)\r\nOut[193]: False\r\n```\r\nThe same problem occurs by a direct calculation:\r\n\r\n```\r\nw = X@Y - Y@X\r\nw\r\nOut[205]:\r\nPauliSumOp(SparsePauliOp([[False,  True],\r\n               [False,  True]],\r\n              coeffs=[ 1.+0.j, -1.+0.j]), coeff=1.0)\r\nw.equals(2j*Z)\r\nOut[206]: False\r\n```\r\n\r\n### What is the expected behavior?\r\n\r\n```\r\n>>> SparsePauliOp(Pauli('iZ')) == SparsePauliOp(Pauli('-iZ'))\r\nFalse\r\n>>> SparsePauliOp(Pauli('iZ')) == SparsePauliOp(Pauli('Z'))\r\nFalse\r\n```\r\nOr handling it differently in opflow.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6813","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6813\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6813\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6813\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6813","id":953712782,"node_id":"MDU6SXNzdWU5NTM3MTI3ODI=","number":6813,"title":"ParameterExpression throws an error for gradients with complex coefficients.","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-27T09:59:48Z","updated_at":"2021-07-30T20:29:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.8\r\n- **Operating system**: MacOS\r\n\r\n### What is the current behavior?\r\n\r\nWhen having a `ParameterExpression` with an imaginary unit, taking a gradient w.r.t. a parameter existing in a `ParameterExpression` results in an error.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```\r\np = Parameter(\"theta\")\r\np2 = 1j*p\r\np2\r\nOut[27]: ParameterExpression(1.0*I*theta)\r\np2.gradient(p)\r\nTraceback (most recent call last):\r\n  File \"\/qiskit-terra\/venv\/lib\/python3.8\/site-packages\/IPython\/core\/interactiveshell.py\", line 3437, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-28-058190e5d73e>\", line 1, in <module>\r\n    p2.gradient(p)\r\n  File \"\/qiskit-terra\/qiskit\/circuit\/parameterexpression.py\", line 303, in gradient\r\n    return float(expr_grad)\r\n  File \"symengine_wrapper.pyx\", line 1133, in symengine.lib.symengine_wrapper.Basic.__float__\r\n  File \"symengine_wrapper.pyx\", line 958, in symengine.lib.symengine_wrapper.Basic.n\r\n  File \"symengine_wrapper.pyx\", line 4194, in symengine.lib.symengine_wrapper.evalf\r\nRuntimeError: Not Implemented\r\n```\r\n\r\n### What is the expected behavior?\r\n\r\nCalculating a gradient with a complex coefficient.\r\n\r\n### Suggested solutions\r\nPerhaps\r\n```\r\n  File \"\/qiskit-terra\/qiskit\/circuit\/parameterexpression.py\", line 303, in gradient\r\n    return float(expr_grad)\r\n```\r\nshould be changed to\r\n```\r\n  File \"\/qiskit-terra\/qiskit\/circuit\/parameterexpression.py\", line 303, in gradient\r\n    return complex(expr_grad)\r\n```\r\n?","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6812","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6812\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6812\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6812\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6812","id":953707302,"node_id":"MDU6SXNzdWU5NTM3MDczMDI=","number":6812,"title":"Parameters not cleaned up in ParameterExpression","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-27T09:53:13Z","updated_at":"2021-07-28T06:18:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.8\r\n- **Operating system**: MacOS\r\n\r\n### What is the current behavior?\r\n\r\nArithmetic of `ParameterExpression` does not clean up the content of `.parameters` if the ParameterExpression is not parametrized anymore. Might be confusing and lead to an accumulation of irrelevant parameters in longer computations.\r\n\r\n### Steps to reproduce the problem\r\n```\r\na\r\nOut[47]: ParameterExpression(1.0*x)\r\nd\r\nOut[48]: ParameterExpression(5.0*x)\r\nz = d\/a\r\nz\r\nOut[50]: ParameterExpression(5.00000000000000)\r\nz.parameters\r\nOut[51]: {Parameter(x)}\r\n```\r\n\r\n```\r\nt\r\nOut[79]: ParameterExpression(2*x)\r\nu\r\nOut[80]: ParameterExpression(2*x)\r\ny = t-u\r\ny\r\nOut[82]: ParameterExpression(0)\r\ny.parameters\r\nOut[83]: {Parameter(x)}\r\n```\r\n\r\n\r\n### What is the expected behavior?\r\n\r\n```\r\na\r\nOut[47]: ParameterExpression(1.0*x)\r\nd\r\nOut[48]: ParameterExpression(5.0*x)\r\nz = d\/a\r\nz\r\nOut[50]: ParameterExpression(5.00000000000000)\r\nz.parameters\r\nOut[51]: set()\r\n```\r\n\r\n```\r\nt\r\nOut[79]: ParameterExpression(2*x)\r\nu\r\nOut[80]: ParameterExpression(2*x)\r\ny = t-u\r\ny\r\nOut[82]: ParameterExpression(0)\r\ny.parameters\r\nOut[83]: set()\r\n```","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6810","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6810\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6810\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6810\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6810","id":953311858,"node_id":"MDU6SXNzdWU5NTMzMTE4NTg=","number":6810,"title":"inverse of conditional gate is not conditional","user":{"login":"aeddins-ibm","id":60495383,"node_id":"MDQ6VXNlcjYwNDk1Mzgz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/60495383?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/aeddins-ibm","html_url":"https:\/\/github.com\/aeddins-ibm","followers_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/followers","following_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/orgs","repos_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/repos","events_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/aeddins-ibm\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"ewinston","id":25756217,"node_id":"MDQ6VXNlcjI1NzU2MjE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25756217?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ewinston","html_url":"https:\/\/github.com\/ewinston","followers_url":"https:\/\/api.github.com\/users\/ewinston\/followers","following_url":"https:\/\/api.github.com\/users\/ewinston\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ewinston\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ewinston\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ewinston\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ewinston\/orgs","repos_url":"https:\/\/api.github.com\/users\/ewinston\/repos","events_url":"https:\/\/api.github.com\/users\/ewinston\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ewinston\/received_events","type":"User","site_admin":false},"assignees":[{"login":"ewinston","id":25756217,"node_id":"MDQ6VXNlcjI1NzU2MjE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25756217?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ewinston","html_url":"https:\/\/github.com\/ewinston","followers_url":"https:\/\/api.github.com\/users\/ewinston\/followers","following_url":"https:\/\/api.github.com\/users\/ewinston\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ewinston\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ewinston\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ewinston\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ewinston\/orgs","repos_url":"https:\/\/api.github.com\/users\/ewinston\/repos","events_url":"https:\/\/api.github.com\/users\/ewinston\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ewinston\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-07-26T21:43:08Z","updated_at":"2021-07-28T16:01:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.9.5\r\n- **Operating system**: mac\r\n\r\n### What is the current behavior?\r\n\r\nCalling the `inverse` method of a conditional X gate returns an unconditional X gate.\r\n\r\n### Steps to reproduce the problem\r\n<img width=\"373\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/60495383\/127061829-e0ae0c7d-b5f3-4847-bb5a-3c3d1a130b6d.png\">\r\n\r\n### What is the expected behavior?\r\nI'd expect the inverse of a conditional gate to have the same condition.\r\n\r\nThat way, for instance, `x.c_if(bit, 1)` immediately followed by its inverse operation would produce the identity, as one would expect for an inverse.\r\n\r\n### Suggested solutions\r\nAssuming it's the desired behavior, could have `inverse` copy the condition from the original gate to the inverse gate before returning it.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6809","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6809\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6809\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6809\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6809","id":953185489,"node_id":"MDU6SXNzdWU5NTMxODU0ODk=","number":6809,"title":"Given an IBM Quantum experience job id, how do you get the logical to physical layout?","user":{"login":"vtomole","id":8405160,"node_id":"MDQ6VXNlcjg0MDUxNjA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8405160?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/vtomole","html_url":"https:\/\/github.com\/vtomole","followers_url":"https:\/\/api.github.com\/users\/vtomole\/followers","following_url":"https:\/\/api.github.com\/users\/vtomole\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/vtomole\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/vtomole\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/vtomole\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/vtomole\/orgs","repos_url":"https:\/\/api.github.com\/users\/vtomole\/repos","events_url":"https:\/\/api.github.com\/users\/vtomole\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/vtomole\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-26T18:47:12Z","updated_at":"2021-07-29T14:31:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"This question is a copy of https:\/\/quantumcomputing.stackexchange.com\/questions\/17391\/qiskit-logical-to-physical-qubit-mapping. \r\n\r\nI have an `IBMQJob` object that I call `circuit = IBMQjob.circuits()[0]` on. The problem is that `circuit._layout` returns `None`.\r\n\r\n### What is the expected behavior?\r\nI should be able to call `circuit._layout.get_virtual_bits()` to get back a dictionary of the mapping of logical --> physical qubits, like `{'q0': 0, 'q1': 9, 'q2': 13, 'q3': 14}`.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6808","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6808\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6808\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6808\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6808","id":953088234,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk3MTg1NDAx","number":6808,"title":"Add fake backends for new IBM Quantum systems","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-07-26T16:40:21Z","updated_at":"2021-07-26T16:40:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6808","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6808","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6808.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6808.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis commit adds new fake backend classes for new IBM Quantum systems:\r\nBrooklyn, Jakarta, Lagos, and Manila. Just as with the other fake\r\nbackends these new classes contain snapshots of calibration data\r\n(i.e. backend.defaults()) and error data (i.e.\r\nbackend.properties()) taken from the real system, and can be used for\r\nlocal testing, compilation and simulation.\r\n\r\nLegacy backends are not added for these new fake backends (like the\r\nother fake backends have) as the legacy backend interface is deprecated\r\nand will be removed in a future release so there is no need to expose\r\nthat for the new backends (it was only added for compatibility testing\r\non the old fake backends).\r\n\r\n### Details and comments","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6804","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6804\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6804\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6804\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6804","id":953012628,"node_id":"MDU6SXNzdWU5NTMwMTI2Mjg=","number":6804,"title":"Problem in drawing circuit for conditional measurement using multiple classical registers","user":{"login":"AbeerVaishnav13","id":30632765,"node_id":"MDQ6VXNlcjMwNjMyNzY1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/30632765?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/AbeerVaishnav13","html_url":"https:\/\/github.com\/AbeerVaishnav13","followers_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/followers","following_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/orgs","repos_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/repos","events_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/AbeerVaishnav13\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-26T15:14:43Z","updated_at":"2021-07-27T16:15:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Information\r\nThe `qc.draw()` function does not draw the quantum circuit properly if we change the order of classical registers while initializing the `QuantumCircuit()` instance if there is a measurement in the circuit that is conditioned on the output of some other classical register.\r\n\r\n- **Qiskit Terra version**:\r\n```\r\n{'qiskit-terra': '0.17.4', 'qiskit-aer': '0.8.2', 'qiskit-ignis': '0.6.0', 'qiskit-ibmq-provider': '0.14.0', 'qiskit-aqua': '0.9.2', 'qiskit': '0.27.0', 'qiskit-nature': '0.1.3', 'qiskit-finance': None, 'qiskit-optimization': None, 'qiskit-machine-learning': None}\r\n```\r\n- **Python version**: 3.8.6\r\n- **Operating system**: MacOS\r\n\r\n### What is the current behavior (and how to reproduce the problem)?\r\n![Screenshot 2021-07-26 at 1 48 35 PM](https:\/\/user-images.githubusercontent.com\/30632765\/126957435-23b69b2f-bd81-4efb-a2b0-ea86c57f8732.png)\r\n\r\nNotice that in the above code, we initialize the quantum circuit as:\r\n```py\r\nqc = QuantumCircuit(q_a, q_b, c_a, c_b)\r\n```\r\n\r\nHowever, if we exchange the classical registers while initializing, like so:\r\n```py\r\nqc = QuantumCircuit(q_a, q_b, c_b, c_a)\r\n```\r\nwe get this, which is the correct circuit...\r\n![Screenshot 2021-07-26 at 1 48 55 PM](https:\/\/user-images.githubusercontent.com\/30632765\/126957717-dde3ea6a-e7ed-40ff-8f64-a47316a5231d.png)\r\n\r\n\r\n### What is the expected behavior?\r\nThe circuit in the first image should have the arrows going to the classical register `c_b` and the dots going to `c_a`, but here both of them go to `c_a`. ","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6803","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6803\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6803\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6803\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6803","id":953007921,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk3MTE2ODY1","number":6803,"title":"Only execute TimeUnitConversion as needed in preset passmanagers","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"},{"id":1561342365,"node_id":"MDU6TGFiZWwxNTYxMzQyMzY1","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20API%20Change","name":"Changelog: API Change","color":"da2add","default":false,"description":"Include in the Changed section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-07-26T15:10:20Z","updated_at":"2021-07-26T15:32:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6803","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6803","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6803.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6803.patch"},"body":"\r\n\r\n\r\n\r\n### Summary\r\n\r\nThis commit makes a change to the preset pass managers to only run the\r\n`TimeUnitConversion` pass in the preset passmanagers in situations where\r\nit is really needed. For circuits with a high number of gates this pass\r\ncan become a bottleneck. Instead of always running the pass this commit\r\nchanges the logic to only run the time unit conversion pass when a\r\nscheduling_method is set or if there are instructions durations set and\r\nthe circuit contains delays. To facilitate the latter case a new\r\nanalysis pass, `ContainsInstruction`, is added which will simply set a\r\nboolean in the property set if the dag contains a specified instruction\r\nname.\r\n\r\n### Details and comments\r\n\r\nFixes #6726","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6802","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6802\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6802\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6802\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6802","id":952958553,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk3MDc1MjY3","number":6802,"title":"Make numeric casts of ParameterExpression more flexible","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-26T14:20:05Z","updated_at":"2021-07-28T11:57:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6802","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6802","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6802.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6802.patch"},"body":"\r\n### Summary\r\n\r\n\r\nPreviously, ParameterExpression would refuse numeric conversions if it\r\ncontained unbound parameters, even if the underlying symbolic expression\r\nhad a known, fixed value.  This patch passes the entire responsibility\r\nfor determining if a numeric conversion is possible to Sympy\/Symengine,\r\nmeaning that expressions such as\r\n\r\n    >>> x = Parameter('x')\r\n    >>> float(x - x + 2)\r\n    2.0\r\n\r\nare now possible.\r\n\r\n\r\n\r\n\r\n\r\n### Details and comments\r\n\r\nFollows on from comments in this chain: https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6792#discussion_r675671287.\r\n\r\nAn alternative approach is to avoid the try\/except by querying if `_symbol_expr.expr_free_symbols` is empty, and raise if not.  I'm not 100% sure this is the only thing that can cause a numeric conversion in Sympy to fail though, so I left it on the \"safe\" side for now.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6800","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6800\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6800\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6800\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6800","id":952352062,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk2NTYxNDc4","number":6800,"title":"Allow quantumcircuit construction with zero classical registers (2)","user":{"login":"eendebakpt","id":883786,"node_id":"MDQ6VXNlcjg4Mzc4Ng==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/883786?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/eendebakpt","html_url":"https:\/\/github.com\/eendebakpt","followers_url":"https:\/\/api.github.com\/users\/eendebakpt\/followers","following_url":"https:\/\/api.github.com\/users\/eendebakpt\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/eendebakpt\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/eendebakpt\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/eendebakpt\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/eendebakpt\/orgs","repos_url":"https:\/\/api.github.com\/users\/eendebakpt\/repos","events_url":"https:\/\/api.github.com\/users\/eendebakpt\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/eendebakpt\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-25T20:42:06Z","updated_at":"2021-08-03T17:30:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6800","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6800","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6800.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6800.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis PR allows construction of circuits with zero registers (either quantum or classical). The construction of these circuits is convenient with algorithmically constructing circuits with varying numbers of registers.\r\n\r\nThis is a variation on #6506. For circuits with zero qubits no quantum registers are created.\r\n\r\n```\r\nfrom qiskit.circuit import QuantumCircuit\r\nfor q in range(0,2):\r\n    for c in range(0,2):\r\n        circ = QuantumCircuit(q,c)\r\n        print(f'QuantumCircuit({q},{c}): {circ.qregs} {circ.cregs}') \r\n\r\ncirc = QuantumCircuit(0)\r\nprint(f'QuantumCircuit(0): {circ.qregs} {circ.cregs}') \r\n\r\ncirc = QuantumCircuit(0)\r\nQuantumCircuit(0,0): [] []\r\nQuantumCircuit(0,1): [] [ClassicalRegister(1, 'c')]\r\nQuantumCircuit(1,0): [QuantumRegister(1, 'q')] []\r\nQuantumCircuit(1,1): [QuantumRegister(1, 'q')] [ClassicalRegister(1, 'c')]\r\nQuantumCircuit(0): [] []\r\n```\r\n\r\n### Details and comments\r\n\r\nVariation is based on comments from #6506\r\n\r\n@kdk ","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6799","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6799\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6799\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6799\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6799","id":952140271,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk2NDAwMDY0","number":6799,"title":"Fix issue 6667 by updating transpiler","user":{"login":"Kovi11Day","id":11020824,"node_id":"MDQ6VXNlcjExMDIwODI0","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/11020824?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Kovi11Day","html_url":"https:\/\/github.com\/Kovi11Day","followers_url":"https:\/\/api.github.com\/users\/Kovi11Day\/followers","following_url":"https:\/\/api.github.com\/users\/Kovi11Day\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Kovi11Day\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Kovi11Day\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Kovi11Day\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Kovi11Day\/orgs","repos_url":"https:\/\/api.github.com\/users\/Kovi11Day\/repos","events_url":"https:\/\/api.github.com\/users\/Kovi11Day\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Kovi11Day\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-24T20:07:45Z","updated_at":"2021-08-05T04:10:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6799","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6799","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6799.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6799.patch"},"body":"\r\n\r\n\r\n### Summary\r\nFixes #6667\r\n\r\nWhen the `transpile()` function is provided with the `instruction_durations` argument and no `scheduling_method` argument is specified, the behaviour before update is to ignore the `instruction_durations` argument and not apply any scheduling pass.\r\n\r\nAfter the update, the behaviour is to apply scheduling pass with the default scheduling method: `as_late_as_possible`.\r\n\r\n\r\n### Details and comments\r\nAdd condition in `qiskit.compiler.transpiler`: if `scheduling_method` is not provided and `instruction_durations` argument specified, set `scheduling_method=as_late_as_possible`.\r\nNote that the `as_late_as_possible` scheduling method was chosen as it is the one applied by default by the scheduler when no method is specified. This scheduling method improves the outcome fidelity over the `as_soon_as_possible` scheduling method.\r\n\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6798","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6798\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6798\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6798\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6798","id":952049147,"node_id":"MDU6SXNzdWU5NTIwNDkxNDc=","number":6798,"title":"IBMQ issue with getting connected to server every time of iteration if untouched for a few min ","user":{"login":"SarthakCh","id":87897988,"node_id":"MDQ6VXNlcjg3ODk3OTg4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/87897988?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/SarthakCh","html_url":"https:\/\/github.com\/SarthakCh","followers_url":"https:\/\/api.github.com\/users\/SarthakCh\/followers","following_url":"https:\/\/api.github.com\/users\/SarthakCh\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/SarthakCh\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/SarthakCh\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/SarthakCh\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/SarthakCh\/orgs","repos_url":"https:\/\/api.github.com\/users\/SarthakCh\/repos","events_url":"https:\/\/api.github.com\/users\/SarthakCh\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/SarthakCh\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-24T10:39:53Z","updated_at":"2021-07-24T10:49:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**:\r\n- **Python version**:\r\n- **Operating system**:\r\n\r\n### What is the current behavior?\r\nwhen IBMQ is closed for a longer time and reopens it lags and sometimes dose not even open the page to code. Have to wait and close all threads to IBMQ and then restart the process again so would like to see it fixed\r\nSome times refreshing the space also dose not work and it just shows white screen and it mostly happens on challenge days badly.\r\n\r\n### Steps to reproduce the problem\r\n\r\neven sometimes it works in normal server work on program works just refreshing it but 80% it dose not work\r\n\r\n### What is the expected behavior?\r\n\r\nIf gets server time out for no activity after few min it shall get connected immediately after refreshing or clicking the pop up window stating \"got disconnected\".\r\n\r\n### Suggested solutions\r\n\r\nIt is a server end problem and really needs to be solved from cloud access.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6793","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6793\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6793\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6793\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6793","id":951692059,"node_id":"MDU6SXNzdWU5NTE2OTIwNTk=","number":6793,"title":"Warn against usage of VQE with certain combinations of options","user":{"login":"eendebakpt","id":883786,"node_id":"MDQ6VXNlcjg4Mzc4Ng==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/883786?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/eendebakpt","html_url":"https:\/\/github.com\/eendebakpt","followers_url":"https:\/\/api.github.com\/users\/eendebakpt\/followers","following_url":"https:\/\/api.github.com\/users\/eendebakpt\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/eendebakpt\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/eendebakpt\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/eendebakpt\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/eendebakpt\/orgs","repos_url":"https:\/\/api.github.com\/users\/eendebakpt\/repos","events_url":"https:\/\/api.github.com\/users\/eendebakpt\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/eendebakpt\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"},{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-23T15:44:32Z","updated_at":"2021-07-23T19:47:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nOn [Advanced VQE usage](https:\/\/qiskit.org\/documentation\/tutorials\/algorithms\/04_vqe_advanced.html) several examples of VQE usage are shown. For example VQE can be used with the aer simulator as\r\n\r\n```\r\nquantum_instance = QuantumInstance(backend=Aer.get_backend('aer_simulator'))\r\nvqe_solver = VQE(quantum_instance=quantum_instance, include_custom=True)\r\n```\r\n\r\nThe following code executes without warnings or errors, but does give incorrect answers\r\n```\r\nquantum_instance = QuantumInstance(backend=Aer.get_backend('aer_simulator'))\r\nvqe_solver = VQE(quantum_instance=quantum_instance)\r\n```\r\nIf would be good to warn the user (or generate an error) if such combinations are used.\r\nIn the example above the default construction `VQE(quantum_instance=quantum_instance)` fails with one of the default qiskit simulators, so this is something one can expect of users to try.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6791","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6791\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6791\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6791\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6791","id":951134801,"node_id":"MDU6SXNzdWU5NTExMzQ4MDE=","number":6791,"title":"qasm_simulator no results from a circuit for histogram","user":{"login":"jgermain48","id":49736215,"node_id":"MDQ6VXNlcjQ5NzM2MjE1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/49736215?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jgermain48","html_url":"https:\/\/github.com\/jgermain48","followers_url":"https:\/\/api.github.com\/users\/jgermain48\/followers","following_url":"https:\/\/api.github.com\/users\/jgermain48\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jgermain48\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jgermain48\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jgermain48\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jgermain48\/orgs","repos_url":"https:\/\/api.github.com\/users\/jgermain48\/repos","events_url":"https:\/\/api.github.com\/users\/jgermain48\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jgermain48\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-22T23:33:05Z","updated_at":"2021-07-22T23:39:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.0\r\n- **Python version**: 3.8.8\r\n- **Operating system**: macOS Big Sur version 11.4 (20F71)\r\n\r\n### What is the current behavior?\r\n\r\nSimulation fails to produce results.  Simulation worked on my circuit yesterday...but today it fails.  I don't think I've made any changes.  Will run on real hardware fine.\r\n\r\nErrors produced: \r\n\r\n\/Users\/juliegermain\/opt\/anaconda3\/envs\/QuantumResearch\/bin\/python \"\/Users\/juliegermain\/Library\/Application Support\/JetBrains\/PyCharmCE2020.3\/scratches\/QuantumResearch\/scratch_5.py\"\r\n[]\r\nSimulation failed and returned the following error message:\r\nERROR: Failed to load qobj: Unable to cast Python instance to C++ type (compile in debug mode for details)\r\nTraceback (most recent call last):\r\n  File \"\/Users\/juliegermain\/Library\/Application Support\/JetBrains\/PyCharmCE2020.3\/scratches\/QuantumResearch\/scratch_5.py\", line 45, in <module>\r\n    hist = plot_histogram(result.get_counts())\r\n  File \"\/Users\/juliegermain\/opt\/anaconda3\/envs\/QuantumResearch\/lib\/python3.8\/site-packages\/qiskit\/visualization\/counts_visualization.py\", line 219, in plot_histogram\r\n    all_vals = np.concatenate(all_pvalues).ravel()\r\n  File \"<__array_function__ internals>\", line 5, in concatenate\r\nValueError: need at least one array to concatenate\r\n\r\nProcess finished with exit code 1\r\n\r\n### Steps to reproduce the problem\r\n\r\nHere is a scaled back version of the circuit that shows the issue: \r\n\r\nfrom qiskit.tools.visualization import plot_histogram\r\nfrom qiskit import *\r\nfrom qiskit.extensions import Initialize\r\nimport matplotlib.pyplot as plt\r\n\r\ndef draw_circuit(qc):\r\n    qc.draw(output='mpl')\r\n    plt.show()\r\n\r\nsim_on = 1\r\n\r\nqd0 = QuantumRegister(1,'qd0')\r\nqa0 = QuantumRegister(1,'qa0')\r\nqa1 = QuantumRegister(1,'qa1')\r\nqd1 = QuantumRegister(1,'qd1')\r\nqd2 = QuantumRegister(1,'qd2')\r\ncrr = ClassicalRegister(1)\r\nshor_qc = QuantumCircuit(qd0,qd1,qd2,qa0,qa1,crr)\r\n\r\ninitial_value = 1\r\n\r\n# end-to-end circuit initialization method\r\nif initial_value == 1:\r\n    initial_data = '1'\r\nelif initial_value == 0:\r\n    initial_data = '0'\r\n\r\ninit_gate = Initialize(initial_data)\r\ninit_gate.label = \"init\"\r\ninverse_init_gate = init_gate.gates_to_uncompute()\r\nshor_qc.append(init_gate,qd0)\r\n\r\nshor_qc.barrier()\r\n\r\nshor_qc.measure(qd0,crr)\r\n\r\ndraw_circuit(shor_qc)\r\n\r\nif sim_on == 1:\r\n    # simulator = Aer.get_backend('aer_simulator')\r\n    simulator = Aer.get_backend('qasm_simulator')\r\n    result = execute(shor_qc, backend=simulator).result()\r\n    count = result.get_counts()\r\n    print(count)\r\n    hist = plot_histogram(result.get_counts())\r\n    plt.show()\r\n\r\n### What is the expected behavior?\r\n\r\nproduce a histogram with results.  Note: I can run on real hardware and it works fine.  Circuit is created and drawn.  I had been running yesterday on qasm_simulator.  I tried running on aer_simulator as a test...and issue still present.\r\n\r\n### Suggested solutions\r\n\r\nNo idea.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6788","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6788\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6788\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6788\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6788","id":950814485,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk1MzAzOTk3","number":6788,"title":"add translate method to quantum circuits","user":{"login":"ewinston","id":25756217,"node_id":"MDQ6VXNlcjI1NzU2MjE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25756217?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ewinston","html_url":"https:\/\/github.com\/ewinston","followers_url":"https:\/\/api.github.com\/users\/ewinston\/followers","following_url":"https:\/\/api.github.com\/users\/ewinston\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ewinston\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ewinston\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ewinston\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ewinston\/orgs","repos_url":"https:\/\/api.github.com\/users\/ewinston\/repos","events_url":"https:\/\/api.github.com\/users\/ewinston\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ewinston\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-22T15:54:21Z","updated_at":"2021-08-03T18:53:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6788","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6788","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6788.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6788.patch"},"body":"\r\n\r\n### Summary\r\nresolves issue #6787 \r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6787","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6787\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6787\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6787\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6787","id":950762240,"node_id":"MDU6SXNzdWU5NTA3NjIyNDA=","number":6787,"title":"add basis translator as convenience method to QuantumCircuit","user":{"login":"ewinston","id":25756217,"node_id":"MDQ6VXNlcjI1NzU2MjE3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25756217?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ewinston","html_url":"https:\/\/github.com\/ewinston","followers_url":"https:\/\/api.github.com\/users\/ewinston\/followers","following_url":"https:\/\/api.github.com\/users\/ewinston\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ewinston\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ewinston\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ewinston\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ewinston\/orgs","repos_url":"https:\/\/api.github.com\/users\/ewinston\/repos","events_url":"https:\/\/api.github.com\/users\/ewinston\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ewinston\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-22T14:59:34Z","updated_at":"2021-07-22T15:49:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\nCurrently the `decompose` method of QuantumCircuit objects utilizes the Decompose transpiler pass to expand gates one level down according to their internally defined decomposition rules. Often, however, one would like to conveniently rewrite their circuit in terms of a specific set of gates. To do this we could add e.g. a `translate` method to QuantumCircuit which does this;\r\n\r\n```python\r\nqc = QuantumCircuit(2)\r\nqc.ryy(0.5, 0, 1)\r\n\r\nprint(qc)\r\nprint(qc.translate()\r\nprint(qc.translate(['rz', 'sx', 'cx'])\r\n```\r\nresults in,\r\n```\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\nq_0: \u25240          \u251c\r\n     \u2502  Ryy(0.5) \u2502\r\nq_1: \u25241          \u251c\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nglobal phase: 6.0332\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\nq_0: \u2524 U(\u03c0\/2,-\u03c0\/2,\u03c0\/2) \u251c\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2524 U(-\u03c0\/2,-\u03c0\/2,\u03c0\/2) \u251c\r\n     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u250c\u2500\u2534\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2534\u2500\u2510\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\nq_1: \u2524 U(\u03c0\/2,-\u03c0\/2,\u03c0\/2) \u251c\u2524 X \u251c\u2524 U(0,0,0.5) \u251c\u2524 X \u251c\u2524 U(-\u03c0\/2,-\u03c0\/2,\u03c0\/2) \u251c\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\nq_0: \u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(3\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(5\u03c0\/2) \u251c\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(5\u03c0\/2) \u251c\r\n     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u250c\u2500\u2534\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2534\u2500\u2510\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\nq_1: \u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(3\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(5\u03c0\/2) \u251c\u2524 X \u251c\u2524 Rz(0.5) \u251c\u2524 X \u251c\u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(5\u03c0\/2) \u251c\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6785","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6785\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6785\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6785\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6785","id":950336446,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk0ODk5NDUz","number":6785,"title":"[WIP] Added to_gate methods to PrimitiveOp subclasses (#5711)","user":{"login":"ocareyde","id":82133612,"node_id":"MDQ6VXNlcjgyMTMzNjEy","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/82133612?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ocareyde","html_url":"https:\/\/github.com\/ocareyde","followers_url":"https:\/\/api.github.com\/users\/ocareyde\/followers","following_url":"https:\/\/api.github.com\/users\/ocareyde\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ocareyde\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ocareyde\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ocareyde\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ocareyde\/orgs","repos_url":"https:\/\/api.github.com\/users\/ocareyde\/repos","events_url":"https:\/\/api.github.com\/users\/ocareyde\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ocareyde\/received_events","type":"User","site_admin":false},"labels":[{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-22T06:18:23Z","updated_at":"2021-07-31T23:13:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6785","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6785","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6785.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6785.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes #5711\r\n\r\n### Details and comments\r\n\r\nAdded `to_gate` methods to `CircuitOp`, `MatrixOp`, `PauliOp`, and `PauliSumOp`. I did this by mimicking the functionality of the `to_instruction` methods. This involved transforming the operator to a `QuantumCircuit` class which has the `to_gate` method defined.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6784","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6784\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6784\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6784\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6784","id":949978589,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk0NTk0NjMz","number":6784,"title":"EchoRZXWeylDecomposition Transpiler Pass","user":{"login":"catornow","id":79633854,"node_id":"MDQ6VXNlcjc5NjMzODU0","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/79633854?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/catornow","html_url":"https:\/\/github.com\/catornow","followers_url":"https:\/\/api.github.com\/users\/catornow\/followers","following_url":"https:\/\/api.github.com\/users\/catornow\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/catornow\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/catornow\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/catornow\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/catornow\/orgs","repos_url":"https:\/\/api.github.com\/users\/catornow\/repos","events_url":"https:\/\/api.github.com\/users\/catornow\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/catornow\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"levbishop","id":18673315,"node_id":"MDQ6VXNlcjE4NjczMzE1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18673315?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/levbishop","html_url":"https:\/\/github.com\/levbishop","followers_url":"https:\/\/api.github.com\/users\/levbishop\/followers","following_url":"https:\/\/api.github.com\/users\/levbishop\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/levbishop\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/levbishop\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/levbishop\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/levbishop\/orgs","repos_url":"https:\/\/api.github.com\/users\/levbishop\/repos","events_url":"https:\/\/api.github.com\/users\/levbishop\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/levbishop\/received_events","type":"User","site_admin":false},"assignees":[{"login":"levbishop","id":18673315,"node_id":"MDQ6VXNlcjE4NjczMzE1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18673315?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/levbishop","html_url":"https:\/\/github.com\/levbishop","followers_url":"https:\/\/api.github.com\/users\/levbishop\/followers","following_url":"https:\/\/api.github.com\/users\/levbishop\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/levbishop\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/levbishop\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/levbishop\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/levbishop\/orgs","repos_url":"https:\/\/api.github.com\/users\/levbishop\/repos","events_url":"https:\/\/api.github.com\/users\/levbishop\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/levbishop\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-07-21T18:18:16Z","updated_at":"2021-08-03T14:24:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6784","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6784","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6784.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6784.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis PR implements a new transpiler pass ```EchoRZXWeylDecomposition``` that, in combination with other transpiler passes, allows users to transpile circuits to RZX gate-based and pulse-efficient circuits. The circuits typically have shorter pulse schedule durations and higher fidelities in comparison to the standard digital CNOT-based transpired circuits (see Reference https:\/\/arxiv.org\/pdf\/2105.01063.pdf).\r\nFirst, all consecutive two-qubit operations in a circuit need to be consolidated. The new transpiler pass ```EchoRZXWeylDecomposition``` then leverages Cartan's decomposition of arbitrary two-qubit gates and decomposes the two-qubit gates in terms of echoed RZX gates. Lastly, calibrations can be added to the RZX gates by leveraging the ```RZXCalibrationBuilderNoEcho```, see PR #6300. Most importantly, no additional calibration is needed.\r\n\r\n\r\n\r\n### Details and comments\r\n\r\nThe output of this self-contained code should illustrate the transpilation of a randomly chosen circuit to an RZX gate-based, pulse-efficient circuit.\r\n\r\n```\r\nfrom qiskit import QuantumCircuit, transpile, schedule, IBMQ\r\nfrom qiskit.transpiler import PassManager\r\n\r\nimport numpy as np\r\n\r\nIBMQ.load_account()\r\nprovider = IBMQ.get_provider(...)\r\n\r\nbackend = provider.get_backend('ibm_lagos')\r\n\r\n\r\nfrom qiskit.circuit.library.standard_gates.equivalence_library import StandardEquivalenceLibrary as std_eqlib\r\n\r\n# Transpiler passes\r\nfrom qiskit.transpiler.passes import Collect2qBlocks\r\nfrom qiskit.transpiler.passes import ConsolidateBlocks\r\nfrom qiskit.transpiler.passes import Optimize1qGatesDecomposition\r\nfrom qiskit.transpiler.passes.basis import BasisTranslator, UnrollCustomDefinitions\r\nfrom qiskit.transpiler.passes.scheduling.calibration_creators import RZXCalibrationBuilderNoEcho\r\n\r\n# New transpiler pass\r\nfrom qiskit.transpiler.passes.optimization.echo_rzx_weyl_decomposition import EchoRZXWeylDecomposition\r\n\r\n\r\n# Random circuit\r\n\r\ndelta = 8 * np.pi \/ 5\r\nepsilon = np.pi \/ 2\r\neta = -5.1\r\ntheta = 0.02\r\n\r\nqc = QuantumCircuit(3)\r\nqc.ryy(theta, 0, 1)\r\nqc.s(0)\r\nqc.rz(eta, 1)\r\nqc.rzz(epsilon, 0, 1)\r\nqc.swap(0, 1)\r\nqc.cx(1, 0)\r\nqc.rzz(delta, 1, 2)\r\nqc.swap(1, 2)\r\nqc.h(2)\r\n\r\nprint('Original circuit:')\r\nprint(qc)\r\n\r\nqct = transpile(qc, backend)\r\n\r\nprint('Transpiled circuit:')\r\nprint(qct)\r\n\r\n\r\n# Instruction schedule map\r\ninst_map = backend.defaults().instruction_schedule_map\r\n\r\nrzx_basis = ['rzx', 'rz', 'x', 'sx']\r\n\r\n# Build a pass manager that contains all needed transpiler passes\r\npm = PassManager(\r\n        [\r\n            # Consolidate consecutive two-qubit operations\r\n            Collect2qBlocks(),\r\n            ConsolidateBlocks(basis_gates=['rz', 'sx', 'x', 'rxx']),\r\n            # Rewrite circuit in terms of Cartan-decomposed echoed RZX gates\r\n            EchoRZXWeylDecomposition(inst_map=inst_map),\r\n            # Calibrations for RZX gates\r\n            RZXCalibrationBuilderNoEcho(inst_map=inst_map),\r\n            # Rewrite in rzx basis\r\n            UnrollCustomDefinitions(std_eqlib, rzx_basis),\r\n            BasisTranslator(std_eqlib, rzx_basis),\r\n            Optimize1qGatesDecomposition(rzx_basis)\r\n        ]\r\n    )\r\n    \r\n# Run the pass manager    \r\nqc_pulse_efficient = pm.run(qct)\r\n\r\nprint('Pulse-efficient, RZX-based circuit:')\r\nprint(qc_pulse_efficient)\r\n\r\n# Compare the schedule durations\r\nprint('Duration of standard CNOT-based circuit:')\r\nprint(schedule(qct, backend).duration)\r\nprint('Duration of pulse-efficient circuit:')\r\nprint(schedule(qc_pulse_efficient, backend).duration)\r\n```\r\n\r\nOutput (I removed the ancilla qubits for better readability): \r\n\r\n```\r\nOriginal circuit:\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2510                 \u250c\u2500\u2500\u2500\u2510                   \r\nq_0: \u25240           \u251c\u2500\u2500\u2500\u2524 S \u251c\u2500\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500X\u2500\u2524 X \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n     \u2502  Ryy(0.02) \u2502\u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2510 \u2502ZZ(\u03c0\/2)  \u2502 \u2514\u2500\u252c\u2500\u2518                   \r\nq_1: \u25241           \u251c\u2524 Rz(-5.1) \u251c\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500X\u2500\u2500\u2500\u25a0\u2500\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500X\u2500\u2500\u2500\u2500\u2500\u2500\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502ZZ(8\u03c0\/5)  \u2502 \u250c\u2500\u2500\u2500\u2510\r\nq_2: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500X\u2500\u2524 H \u251c\r\n                                                               \u2514\u2500\u2500\u2500\u2518\r\nTranspiled circuit:\r\nglobal phase: \u03c0\/2\r\n               \u250c\u2500\u2500\u2500\u2500\u2510                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u00bb\r\n      q_0 -> 0 \u2524 \u221aX \u251c\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2524 Rz(-\u03c0) \u251c\u2524 \u221aX \u251c\u2500\u2500\u2524 Rz(-\u03c0\/2) \u251c\u2500\u2500\u2500\u25a0\u2500\u2500\u00bb\r\n               \u251c\u2500\u2500\u2500\u2500\u2524\u250c\u2500\u2534\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2534\u2500\u2510\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u250c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2510\u250c\u2500\u2534\u2500\u2510\u00bb\r\n      q_1 -> 1 \u2524 \u221aX \u251c\u2524 X \u251c\u2524 Rz(0.02) \u251c\u2524 X \u251c\u2524 Rz(-\u03c0) \u251c\u2524 \u221aX \u251c\u2524 Rz(-1.9584) \u251c\u2524 X \u251c\u00bb\r\n               \u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u00bb\r\n      q_2 -> 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\r\n                                                                               \u00bb\r\n\u00ab                          \u250c\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2510                           \u00bb\r\n\u00ab      q_0 -> 0 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 X \u251c\u2500\u2500\u25a0\u2500\u2500\u2524 X \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\u00ab               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2514\u2500\u252c\u2500\u2518\u250c\u2500\u2534\u2500\u2510\u2514\u2500\u252c\u2500\u2518                 \u250c\u2500\u2500\u2500\u2510     \u00bb\r\n\u00ab      q_1 -> 1 \u2524 Rz(\u03c0\/2) \u251c\u2500\u2500\u25a0\u2500\u2500\u2524 X \u251c\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u25a0\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 X \u251c\u2500\u2500\u25a0\u2500\u2500\u00bb\r\n\u00ab               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2518     \u250c\u2500\u2534\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2514\u2500\u252c\u2500\u2518\u250c\u2500\u2534\u2500\u2510\u00bb\r\n\u00ab      q_2 -> 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 X \u251c\u2524 Rz(8\u03c0\/5) \u251c\u2500\u2500\u25a0\u2500\u2500\u2524 X \u251c\u00bb\r\n\u00ab                                         \u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2518\u00bb\r\n\r\n\u00ab                                           \r\n\u00ab      q_0 -> 0 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\u00ab                                           \r\n\u00ab      q_1 -> 1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\u00ab               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u00ab      q_2 -> 2 \u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\r\n\u00ab               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\u00ab                                           \r\nPulse-efficient, RZX-based circuit:\r\nglobal phase: 3\u03c0\/4\r\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u00bb\r\nq_0: \u2500\u2500\u2524 Rz(-\u03c0\/2) \u251c\u2500\u2500\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u25240           \u251c\u2524 X \u251c\u25240          \u251c\u00bb\r\n      \u250c\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2510 \u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502  Rzx(-\u03c0\/4) \u2502\u2514\u2500\u2500\u2500\u2518\u2502  Rzx(\u03c0\/4) \u2502\u00bb\r\nq_1: \u2500\u2524 Rz(2.7541) \u251c\u2500\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u25241           \u251c\u2500\u2500\u2500\u2500\u2500\u25241          \u251c\u00bb\r\n     \u250c\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2510\u251c\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u00bb\r\nq_2: \u2524 Rz(-0.54615) \u251c\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                \u00bb\r\n\r\n                                                                      \u00bb\r\n\u00ab        \u250c\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u00bb\r\n\u00abq_0: \u2500\u2500\u2500\u2524 \u221aX \u251c\u2500\u2500\u2500\u25240               \u251c\u2524 X \u251c\u25240              \u251c\u2524 X \u251c\u2500\u2500\u2500\u2524 Rz(\u03c0\/2) \u251c\u2500\u2500\u00bb\r\n\u00ab     \u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2510\u2502  Rzx(-0.78162) \u2502\u2514\u2500\u2500\u2500\u2518\u2502  Rzx(0.78162) \u2502\u251c\u2500\u2500\u2500\u2534\u2510\u250c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2510\u00bb\r\n\u00abq_1: \u2524 Rz(-\u03c0\/2) \u251c\u25241               \u251c\u2500\u2500\u2500\u2500\u2500\u25241              \u251c\u2524 \u221aX \u251c\u2524 Rz(-3.1231) \u251c\u00bb\r\n\u00ab     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u00bb\r\n\u00abq_2: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\r\n\u00abq_0: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\u00ab     \u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u00bb\r\n\u00abq_1: \u2524 \u221aX \u251c\u2524 Rz(0.54615) \u251c\u25241           \u251c\u2500\u2500\u2500\u2500\u2500\u25241          \u251c\u2524 Rz(-\u03c0\/2) \u251c\u00bb\r\n\u00ab     \u2514\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502  Rzx(-\u03c0\/4) \u2502\u250c\u2500\u2500\u2500\u2510\u2502  Rzx(\u03c0\/4) \u2502\u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2518\u00bb\r\n\u00abq_2: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25240           \u251c\u2524 X \u251c\u25240          \u251c\u2500\u2500\u2500\u2524 \u221aX \u251c\u2500\u2500\u2500\u00bb\r\n\u00ab                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2518   \u00bb\r\n\r\n\u00abq_0: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\u00ab     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u00bb\r\n\u00abq_1: \u25241           \u251c\u2500\u2500\u2500\u2500\u2500\u25241          \u251c\u2500\u2524 Rz(-\u03c0) \u251c\u2524 \u221aX \u251c\u2524 Rz(\u03c0\/2) \u251c\u00bb\r\n\u00ab     \u2502  Rzx(-\u03c0\/4) \u2502\u250c\u2500\u2500\u2500\u2510\u2502  Rzx(\u03c0\/4) \u2502\u250c\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u251c\u2500\u2500\u2500\u2500\u2524\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u00bb\r\n\u00abq_2: \u25240           \u251c\u2524 X \u251c\u25240          \u251c\u2524 Rz(\u03c0\/2) \u251c\u2524 \u221aX \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u00bb\r\n\u00ab     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518           \u00bb\r\n                       \r\n\u00abq_0: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\u00ab     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2510\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u00abq_1: \u25241           \u251c\u2500\u2500\u2500\u2500\u2500\u25241            \u251c\u2500\u2500\u2524 Rz(\u03c0\/2) \u251c\u2500\u2500\u2524 \u221aX \u251c\u2524 Rz(0.54615) \u251c\r\n\u00ab     \u2502  Rzx(\u03c0\/20) \u2502\u250c\u2500\u2500\u2500\u2510\u2502  Rzx(-\u03c0\/20) \u2502\u250c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2510\u251c\u2500\u2500\u2500\u2500\u2524\u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518\r\n\u00abq_2: \u25240           \u251c\u2524 X \u251c\u25240            \u251c\u2524 Rz(-2.5954) \u251c\u2524 \u221aX \u251c\u2500\u2500\u2524 Rz(-\u03c0\/2) \u251c\u2500\r\n\u00ab     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \r\n                                                                        \r\nDuration of standard CNOT-based circuit:\r\n13312\r\nDuration of pulse-efficient circuit:\r\n6528\r\n```\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6781","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6781\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6781\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6781\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6781","id":949735243,"node_id":"MDU6SXNzdWU5NDk3MzUyNDM=","number":6781,"title":"Add option for user supplied measurement error correction in QuantumInstance","user":{"login":"eendebakpt","id":883786,"node_id":"MDQ6VXNlcjg4Mzc4Ng==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/883786?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/eendebakpt","html_url":"https:\/\/github.com\/eendebakpt","followers_url":"https:\/\/api.github.com\/users\/eendebakpt\/followers","following_url":"https:\/\/api.github.com\/users\/eendebakpt\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/eendebakpt\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/eendebakpt\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/eendebakpt\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/eendebakpt\/orgs","repos_url":"https:\/\/api.github.com\/users\/eendebakpt\/repos","events_url":"https:\/\/api.github.com\/users\/eendebakpt\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/eendebakpt\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-21T13:56:10Z","updated_at":"2021-07-21T13:56:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nThe `QuantumInstance` class can be supplied with a `measurement_error_mitigation_cls` (for example a `CompleteMeasFitter`). When executing the `QuantumInstance` then automatically a measurement error calibration will be performed and applied to any measurement result. This does require execution of the measurement error calibrations each time a `QuantumInstance` is used.\r\n\r\nIt should be possible to pass a user-defined measurement error migitation object (e.g. a pre-defined `CompleteMeasFitter`) to the `QuantumInstance`.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6780","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6780\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6780\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6780\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6780","id":949721624,"node_id":"MDU6SXNzdWU5NDk3MjE2MjQ=","number":6780,"title":"Inconsistency in whether gates accept labels","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"assignees":[{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-07-21T13:42:35Z","updated_at":"2021-07-21T15:49:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.19.dev\r\n- **Python version**: all\r\n- **Operating system**: all\r\n\r\n### What is the current behavior?\r\n\r\nNot all defined `Gate` classes accept a label in their initialiser (e.g. `RXXGate`), and `QubitCircuit` is quite inconsistent on whether instruction methods accept a label: maybe about half (e.g. `QubitCircuit.x`) do, and about half (e.g. `QubitCircuit.h`) don't.\r\n\r\n\r\n### Steps to reproduce the problem\r\n\r\n```python\r\n>>> qc = QuantumCircuit(1)\r\n>>> qc.x(0, label=\"my_x\")\r\n<qiskit.circuit.instructionset.InstructionSet object at 0x7f9d60df81c0>\r\n>>> qc.h(0, label=\"my_h\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: h() got an unexpected keyword argument 'label'\r\n```\r\n\r\n```python\r\n>>> from qiskit.circuit.library import HGate, RZZGate\r\n>>> HGate(label=\"my_h\")\r\n<qiskit.circuit.library.standard_gates.h.HGate object at 0x7f9d90e77040>\r\n>>> RZZGate(0, label=\"my_rzz\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: __init__() got an unexpected keyword argument 'label'\r\n```\r\n\r\n### What is the expected behavior?\r\n\r\nConsistency.\r\n\r\n### Suggested solutions\r\n\r\nAdd the label kwarg everywhere.\r\n\r\n*edit*: this is a partial duplicate of #5098.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6779","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6779\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6779\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6779\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6779","id":949619578,"node_id":"MDU6SXNzdWU5NDk2MTk1Nzg=","number":6779,"title":"QASM output of registerless Clbits and Qubits can shadow an existing name","user":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false},"assignees":[{"login":"jakelishman","id":5968590,"node_id":"MDQ6VXNlcjU5Njg1OTA=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5968590?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jakelishman","html_url":"https:\/\/github.com\/jakelishman","followers_url":"https:\/\/api.github.com\/users\/jakelishman\/followers","following_url":"https:\/\/api.github.com\/users\/jakelishman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jakelishman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jakelishman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jakelishman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jakelishman\/orgs","repos_url":"https:\/\/api.github.com\/users\/jakelishman\/repos","events_url":"https:\/\/api.github.com\/users\/jakelishman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jakelishman\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-07-21T11:41:24Z","updated_at":"2021-07-21T13:43:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.19.dev\r\n- **Python version**: all\r\n- **Operating system**: all\r\n\r\n### What is the current behavior?\r\n\r\nUnbound clbits and qubits are output in QASM into registers invariably called `regless`.  This is a valid identifier for other registers, and the same name is emitted whether or not clashes exist, presumably because `QuantumCircuit` usually keeps names unique when the registers are added to the circuit, so there usually can't be a clash.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```python\r\n>>> from qiskit.circuit import QuantumCircuit, ClassicalRegister, Clbit, Qubit\r\n>>> cr = ClassicalRegister(2, name='regless')\r\n>>> cb = Clbit()\r\n>>> qb = Qubit()\r\n>>> qc = QuantumCircuit(cr, [cb], [qb])\r\n>>> print(qc.qasm())\r\nOPENQASM 2.0;\r\ninclude \"qelib1.inc\";\r\ncreg regless[2];\r\nqreg regless[1];\r\ncreg regless[1];\r\n```\r\n\r\nA similar failure occurs with a `QuantumRegister(..., name=\"regless\")`.\r\n\r\n### What is the expected behavior?\r\n\r\nThe automatically generated `qreg regless[1]` and `creg regless[1]` should have unique names.\r\n\r\n### Suggested solutions\r\n\r\nAs far as I know there are no universally reserved names, but we can just generate a name like `_[cq]regless_<entropy>`, which should be good enough - by `<entropy>` I mostly just mean noise to prevent users from accidentally shadowing the name.  `QuantumCircuit.qasm()` should (I've got to assume!) be deterministic, so the entropy could just be a string like `_qiskitprivate`, or if we really want to make sure users can't create a clash then\r\n```python\r\nentropy = hash(tuple(register.name for registers in self.qregs + self.cregs))\r\n```\r\nThat seems like overkill to me, though.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6772\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6772","id":948588603,"node_id":"MDU6SXNzdWU5NDg1ODg2MDM=","number":6772,"title":"Support `Dict[str, OperatorBase]` for `aux_operators`","user":{"login":"mrossinek","id":21973473,"node_id":"MDQ6VXNlcjIxOTczNDcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/21973473?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mrossinek","html_url":"https:\/\/github.com\/mrossinek","followers_url":"https:\/\/api.github.com\/users\/mrossinek\/followers","following_url":"https:\/\/api.github.com\/users\/mrossinek\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mrossinek\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mrossinek\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mrossinek\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mrossinek\/orgs","repos_url":"https:\/\/api.github.com\/users\/mrossinek\/repos","events_url":"https:\/\/api.github.com\/users\/mrossinek\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mrossinek\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"},{"id":705273342,"node_id":"MDU6TGFiZWw3MDUyNzMzNDI=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-20T12:06:38Z","updated_at":"2021-08-04T07:20:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nWe should add support for `Dict[str, Optional[OperatorBase]]` structures to be passed as `aux_operators` into our algorithms.\r\n\r\n#### Motivation\r\n\r\nCurrently, both the `MinimumEigensolver` ([here](https:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/main\/qiskit\/algorithms\/minimum_eigen_solvers\/minimum_eigen_solver.py#L33)) and the `Eigensolver` ([here](https:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/main\/qiskit\/algorithms\/eigen_solvers\/eigen_solver.py#L33)) interfaces only allow lists of operators to be passed to the `aux_operators` argument:\r\n```python\r\n    @abstractmethod\r\n    def compute_eigenvalues(\r\n        self, operator: OperatorBase, aux_operators: Optional[List[Optional[OperatorBase]]] = None\r\n    ) -> \"EigensolverResult\":\r\n```\r\n\r\nThis causes very bad code quality in the application modules because we need to keep track of the order of the auxiliary operators, resulting in objectively bad code similar to [this](https:\/\/github.com\/Qiskit\/qiskit-nature\/blob\/main\/qiskit_nature\/problems\/second_quantization\/electronic\/result_interpreter.py#L106-L120):\r\n```python\r\n    for aux_op_eigenvalues in aux_operator_eigenvalues:\r\n        if aux_op_eigenvalues is None:\r\n            continue\r\n\r\n        if aux_op_eigenvalues[0] is not None:\r\n            result.num_particles.append(aux_op_eigenvalues[0][0].real)\r\n\r\n        if aux_op_eigenvalues[1] is not None:\r\n            result.total_angular_momentum.append(aux_op_eigenvalues[1][0].real)\r\n\r\n        if aux_op_eigenvalues[2] is not None:\r\n            result.magnetization.append(aux_op_eigenvalues[2][0].real)\r\n\r\n        if len(aux_op_eigenvalues) >= 6 and q_molecule_transformed.has_dipole_integrals:\r\n            _interpret_dipole_results(aux_op_eigenvalues, q_molecule_transformed, result)\r\n```\r\n\r\nFor (hopefully) obvious reasons, we would like to improve this situation.\r\n\r\nWith the upcoming introduction of so-called `Property` objects in Qiskit Nature (https:\/\/github.com\/Qiskit\/qiskit-nature\/pull\/220, https:\/\/github.com\/Qiskit\/qiskit-nature\/pull\/263), we can naturally move to a `Dict[str, Optional[OperatorBase]]` structure to be passed into the algorithms instead of the current `List` (https:\/\/github.com\/Qiskit\/qiskit-nature\/pull\/263#discussion_r664583546).\r\nThis will arguably result in much more stable code in the application modules (speaking for Nature but I assume other modules would also be able to make use of this enhancement).","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6769","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6769\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6769\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6769\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6769","id":947901986,"node_id":"MDU6SXNzdWU5NDc5MDE5ODY=","number":6769,"title":"Seeing issue like previously closed on #6018","user":{"login":"jgermain48","id":49736215,"node_id":"MDQ6VXNlcjQ5NzM2MjE1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/49736215?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/jgermain48","html_url":"https:\/\/github.com\/jgermain48","followers_url":"https:\/\/api.github.com\/users\/jgermain48\/followers","following_url":"https:\/\/api.github.com\/users\/jgermain48\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/jgermain48\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/jgermain48\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/jgermain48\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/jgermain48\/orgs","repos_url":"https:\/\/api.github.com\/users\/jgermain48\/repos","events_url":"https:\/\/api.github.com\/users\/jgermain48\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/jgermain48\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-19T18:11:20Z","updated_at":"2021-07-21T08:31:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Information\r\n\r\n- **Qiskit Terra version**: 0.17.3\r\n- **Python version**: 3.8.8\r\n- **Operating system**: macOS Big Sur version 11.4 (20F71)\r\n\r\n### What is the current behavior?\r\n\r\nI think I'm seeing an issue associated with this (closed issue #6018)\r\n\r\nI can't call the indexed classical register (ie r[0]) as shown as an option in your examples above...I have to make separate registers for each (ie r0).\r\n\r\nWhen I try to use indexes to get to the classical register, I get errors like this....\r\n\r\nTraceback (most recent call last):\r\nFile \"\/Users\/juliegermain\/Library\/Application Support\/JetBrains\/PyCharmCE2020.3\/scratches\/QuantumResearch\/scratch_1.py\", line 14, in \r\nqc.x(q[0]).c_if(r[0], 1)\r\nFile \"\/Users\/juliegermain\/opt\/anaconda3\/envs\/QuantumResearch\/lib\/python3.8\/site-packages\/qiskit\/circuit\/instructionset.py\", line 59, in c_if\r\ngate.c_if(classical, val)\r\nFile \"\/Users\/juliegermain\/opt\/anaconda3\/envs\/QuantumResearch\/lib\/python3.8\/site-packages\/qiskit\/circuit\/instruction.py\", line 346, in c_if\r\nraise CircuitError(\"c_if must be used with a classical register\")\r\nqiskit.circuit.exceptions.CircuitError: 'c_if must be used with a classical register'\r\n\r\n\r\n### Steps to reproduce the problem\r\n\r\n########### Here is a small example of what works:\r\n\r\nfrom qiskit import *\r\n\r\nq0 = QuantumRegister(1)\r\nq1 = QuantumRegister(1)\r\nq2 = QuantumRegister(1)\r\nr0 = ClassicalRegister(1)\r\nr1 = ClassicalRegister(1)\r\nr2 = ClassicalRegister(1)\r\n\r\nqc = QuantumCircuit(q0,q1,q2,r0,r1,r2)\r\n\r\nqr = [q0,q1,q2]\r\n\r\nfor i in qr:\r\nqc.reset(i)\r\n\r\nqc.measure(q0,r0)\r\nqc.x(q0).c_if(r0, 1)\r\n\r\n############# versus this that gets the error:\r\n\r\nfrom qiskit import *\r\n\r\nq = QuantumRegister(3)\r\nr = ClassicalRegister(3)\r\n\r\nqc = QuantumCircuit(q,r)\r\n\r\nfor i in range (0,3):\r\nqc.reset(i)\r\n\r\nqc.measure(q[0],r[0])\r\nqc.x(q[0]).c_if(r[0], 1)\r\n\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nShould be able to call either way\r\n\r\n### Suggested solutions\r\n\r\nI'm a newbie...pretty sure you don't want me to solve it.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6768","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6768\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6768\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6768\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6768","id":947792538,"node_id":"MDU6SXNzdWU5NDc3OTI1Mzg=","number":6768,"title":"Add Quantum Random Access Code(QRAC) feature map","user":{"login":"LDongWang","id":16934185,"node_id":"MDQ6VXNlcjE2OTM0MTg1","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/16934185?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/LDongWang","html_url":"https:\/\/github.com\/LDongWang","followers_url":"https:\/\/api.github.com\/users\/LDongWang\/followers","following_url":"https:\/\/api.github.com\/users\/LDongWang\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/LDongWang\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/LDongWang\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/LDongWang\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/LDongWang\/orgs","repos_url":"https:\/\/api.github.com\/users\/LDongWang\/repos","events_url":"https:\/\/api.github.com\/users\/LDongWang\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/LDongWang\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"},{"id":2689758713,"node_id":"MDU6TGFiZWwyNjg5NzU4NzEz","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20algorithms","name":"mod: algorithms","color":"5716e0","default":false,"description":"Related to the Algorithms module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-19T15:50:11Z","updated_at":"2021-07-22T23:23:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nImplement `n`*(3,1,0.79) Quantum Random Access Code(QRAC) introduced by Chuang, as a new kind of feature map, which can encode `3n` bit feature string within `n` qubits, with the possibility 0.79.\r\n\r\nReference: https:\/\/arxiv.org\/abs\/quant-ph\/0604061\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6766","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6766\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6766\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6766\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6766","id":947736074,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkyNjc3NTM3","number":6766,"title":"Remove deprecated classes and methods in quantum_info","user":{"login":"ikkoham","id":6814928,"node_id":"MDQ6VXNlcjY4MTQ5Mjg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6814928?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ikkoham","html_url":"https:\/\/github.com\/ikkoham","followers_url":"https:\/\/api.github.com\/users\/ikkoham\/followers","following_url":"https:\/\/api.github.com\/users\/ikkoham\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ikkoham\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ikkoham\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ikkoham\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ikkoham\/orgs","repos_url":"https:\/\/api.github.com\/users\/ikkoham\/repos","events_url":"https:\/\/api.github.com\/users\/ikkoham\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ikkoham\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-19T14:52:25Z","updated_at":"2021-08-03T01:35:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6766","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6766","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6766.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6766.patch"},"body":"\r\n\r\n### Summary\r\n\r\nRemove\r\n- deprecated `operators.Pauli`, `pauli_group`\r\n- deprecated methods in `Pauli`\r\n- deprecated magic methods in `GroupMixin`\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6764","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6764\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6764\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6764\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6764","id":947361881,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkyMzU0MTU1","number":6764,"title":"[WIP] Allow to normalize statevector in ``Initialize``","user":{"login":"daniel-fry","id":82879369,"node_id":"MDQ6VXNlcjgyODc5MzY5","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/82879369?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/daniel-fry","html_url":"https:\/\/github.com\/daniel-fry","followers_url":"https:\/\/api.github.com\/users\/daniel-fry\/followers","following_url":"https:\/\/api.github.com\/users\/daniel-fry\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/daniel-fry\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/daniel-fry\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/daniel-fry\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/daniel-fry\/orgs","repos_url":"https:\/\/api.github.com\/users\/daniel-fry\/repos","events_url":"https:\/\/api.github.com\/users\/daniel-fry\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/daniel-fry\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-19T07:38:31Z","updated_at":"2021-07-19T14:22:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6764","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6764","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6764.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6764.patch"},"body":"\r\n\r\n### Summary\r\n\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6763","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6763\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6763\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6763\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6763","id":947108776,"node_id":"MDU6SXNzdWU5NDcxMDg3NzY=","number":6763,"title":"Make Gate Methods in the QuantumCircuit class return self for chain operations","user":{"login":"RvveSplit","id":69169214,"node_id":"MDQ6VXNlcjY5MTY5MjE0","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/69169214?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/RvveSplit","html_url":"https:\/\/github.com\/RvveSplit","followers_url":"https:\/\/api.github.com\/users\/RvveSplit\/followers","following_url":"https:\/\/api.github.com\/users\/RvveSplit\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/RvveSplit\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/RvveSplit\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/RvveSplit\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/RvveSplit\/orgs","repos_url":"https:\/\/api.github.com\/users\/RvveSplit\/repos","events_url":"https:\/\/api.github.com\/users\/RvveSplit\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/RvveSplit\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-18T20:08:46Z","updated_at":"2021-07-19T17:32:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\nMake Gate Methods in the QuantumCircuit class return self for chain operations. Sorry if that isn't very clear; Here's an example: The cx, x, and h gates should return self (the QuantumCircuit instance they are a member of) so that this is possible: `qc = QuantumCircuit(3,3).x(0).x(1).h(0).cx(0,1).x(2).cx(1,2)` This functionality can also be seen in python's built in classes, such as the string class, allowing for chain operations such as `print(\"string\".upper()[::-1].capitalize())`.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6762","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6762\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6762\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6762\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6762","id":947076866,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkyMTE4OTU2","number":6762,"title":"Bug\/fix reverse bits with isolated qubits","user":{"login":"apcarrik","id":8772103,"node_id":"MDQ6VXNlcjg3NzIxMDM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8772103?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/apcarrik","html_url":"https:\/\/github.com\/apcarrik","followers_url":"https:\/\/api.github.com\/users\/apcarrik\/followers","following_url":"https:\/\/api.github.com\/users\/apcarrik\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/apcarrik\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/apcarrik\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/apcarrik\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/apcarrik\/orgs","repos_url":"https:\/\/api.github.com\/users\/apcarrik\/repos","events_url":"https:\/\/api.github.com\/users\/apcarrik\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/apcarrik\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-18T17:00:26Z","updated_at":"2021-07-27T16:16:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6762","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6762","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6762.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6762.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes Issue #6731.\r\n\r\nThis fix allows the `reverse_bits()` method of the `QuantumCircuit` class to work with `QuantumCircuits` with only isolated `Qubits` (not in a `QuantumRegister`).\r\n\r\n### Details and comments\r\n\r\nAdded test to ensure functionality works as expected.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6761","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6761\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6761\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6761\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6761","id":946897357,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkxOTg3MDI0","number":6761,"title":"[WIP] Support for classical conditioning of gates on a list of classical bits","user":{"login":"TharrmashasthaPV","id":51048173,"node_id":"MDQ6VXNlcjUxMDQ4MTcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51048173?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/TharrmashasthaPV","html_url":"https:\/\/github.com\/TharrmashasthaPV","followers_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/followers","following_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/orgs","repos_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/repos","events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-17T20:58:08Z","updated_at":"2021-07-17T20:58:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6761","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6761","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6761.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6761.patch"},"body":"\r\n\r\n### Summary\r\n\r\nThis PR now supports classical conditioning of gates on a list of classical bits.\r\n\r\n### Details and comments\r\n\r\nThis PR is a generalization of classical condition on single classical bit introduced in #6018 . This PR allows a user to classically condition gates on a list of classical bits. The classical bits in the list could belong to one or multiple classical registers. Tests have not been added yet. Comments are welcome!\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6760","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6760\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6760\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6760\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6760","id":946806686,"node_id":"MDU6SXNzdWU5NDY4MDY2ODY=","number":6760,"title":"Use Isometry to implement Initialize instruction","user":{"login":"EgrettaThula","id":61508651,"node_id":"MDQ6VXNlcjYxNTA4NjUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/61508651?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/EgrettaThula","html_url":"https:\/\/github.com\/EgrettaThula","followers_url":"https:\/\/api.github.com\/users\/EgrettaThula\/followers","following_url":"https:\/\/api.github.com\/users\/EgrettaThula\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/EgrettaThula\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/EgrettaThula\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/EgrettaThula\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/EgrettaThula\/orgs","repos_url":"https:\/\/api.github.com\/users\/EgrettaThula\/repos","events_url":"https:\/\/api.github.com\/users\/EgrettaThula\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/EgrettaThula\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-17T11:37:12Z","updated_at":"2021-07-19T14:46:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\nAs per documentation, `Isometry` instruction can be used for **state preparation**.\r\nOn the other hand, `Initialize` instruction does its work by first resetting the qubits to `|0\u27e9` followed by an **state preparing** unitary.\r\nThat means `circ.initialize` is equivalent to `circ.reset` + `circ.iso`.\r\n\r\nHowever, I noticed that using `Isometry` almost always results in a circuit with much less number of CNOTs.\r\n```python\r\nn = 4\r\npsi = random_statevector(2 ** n)\r\n\r\n# Using initialize\r\nqr1 = QuantumRegister(n)\r\nqc1 = QuantumCircuit(qr1)\r\nqc1.initialize(psi, qr1)\r\ntr_qc1 = transpile(qc1, basis_gates = ['u', 'cx'], optimization_level = 3)\r\nprint('Initialize:', tr_qc1.count_ops())\r\n\r\n# Using reset + iso\r\nqr2 = QuantumRegister(n)\r\nqc2 = QuantumCircuit(qr2)\r\nqc2.reset(qr2)\r\nqc2.iso(psi, qr2, [])\r\ntr_qc2 = transpile(qc2, basis_gates = ['u', 'cx'], optimization_level = 3)\r\nprint('Isometry:', tr_qc2.count_ops())\r\n```\r\n\r\nThe result is something like that:\r\n```\r\nInitialize: OrderedDict([('u', 26), ('cx', 22)])\r\nIsometry: OrderedDict([('u', 15), ('cx', 11)])\r\n```\r\n\r\nSo, I suggest to use `Isometry` to implement `Initialize` instruction. This should lead to a better end result with less code to maintain.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6759","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6759\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6759\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6759\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6759","id":946468182,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkxNjM3MDM0","number":6759,"title":"Add pulse gate pass","user":{"login":"nkanazawa1989","id":39517270,"node_id":"MDQ6VXNlcjM5NTE3Mjcw","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/39517270?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nkanazawa1989","html_url":"https:\/\/github.com\/nkanazawa1989","followers_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/followers","following_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/orgs","repos_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/repos","events_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nkanazawa1989\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-16T17:17:31Z","updated_at":"2021-08-03T18:00:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6759","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6759","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6759.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6759.patch"},"body":"\r\n\r\n### Summary\r\nThis PR improves handling of pulse gates.\r\n\r\nCurrent work flow\r\n\r\n```python\r\n\r\n# write custom gate\r\nwith pulse.build(name=\"my_gate\") as x_gate:\r\n    ...\r\n\r\ncirc1 = QuantmCircuit(1)\r\ncirc1.x(0)\r\ncirc1.delay(10, 0)\r\ncirc1.measure_all()\r\n\r\ncirc2 = QuantmCircuit(1)\r\ncirc2.x(0)\r\ncirc2.delay(15, 0)\r\ncirc2.measure_all()\r\n\r\n# we need to repeat this line for all circs\r\ncirc1.add_calibration(gate=\"x\", qubits=(0,), schedule=x_gate)\r\ncirc2.add_calibration(gate=\"x\", qubits=(0,), schedule=x_gate)\r\n\r\ncircs = transpile([circ1 + circ2], backend)\r\nbackend.run(circs)\r\n```\r\n\r\nWith new pass\r\n\r\n```python\r\nwith pulse.build(name=\"my_gate\") as x_gate:\r\n    ...\r\n\r\nbackend.defaults().instruction_schedule_map.add(instruction=\"x\", qubits=(0,), schedule=x_gate)\r\n\r\ncirc1 = QuantmCircuit(1)\r\ncirc1.x(0)\r\ncirc1.delay(10, 0)\r\ncirc1.measure_all()\r\n\r\ncirc2 = QuantmCircuit(1)\r\ncirc2.x(0)\r\ncirc2.delay(15, 0)\r\ncirc2.measure_all()\r\n\r\n# instmap is automatically extracted from backend and x gate schedule is overridden\r\ncircs = transpile([circ1 + circ2], backend)\r\nbackend.run(circs)\r\n```\r\n\r\nThis may benefit the calibration framework in Qiskit Experiment.\r\n\r\n### Details and comments\r\n\r\nThe simple trick enabling this workflow is the schedule metadata \"publisher\" (name TBD, welcome suggestions). Note that schedules in the instmap that are provided by the backend are always registered by `PulseDefaults` constructor. This PR adds the publisher metadata of backend to the schedule registered by this. \r\n\r\nhttps:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/9b48476cbaf5c4742f67e1ff6ce2546ba5fad01f\/qiskit\/providers\/models\/pulsedefaults.py#L204-L208\r\n\r\nIf `InstructionScheduleMap.add` is called by users, this will implicitly adds metadata of client (since we assume such schedule doesn't have metadata). This enables the pass to distinguish user-defined calibration from the backend provided calibrations. Thanks to this logic, we can selectively add user defined calibrations to the circuit.\r\n\r\nTODO\r\n- [ ] Finalize the mechanism to distinguish backend\/user-defined cals\r\n- [ ] Write unittest\r\n- [x] Write reno","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6754","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6754\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6754\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6754\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6754","id":945683155,"node_id":"MDU6SXNzdWU5NDU2ODMxNTU=","number":6754,"title":"Mock Backend options do not get passed to the simulators","user":{"login":"awstasiuk","id":30573951,"node_id":"MDQ6VXNlcjMwNTczOTUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/30573951?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/awstasiuk","html_url":"https:\/\/github.com\/awstasiuk","followers_url":"https:\/\/api.github.com\/users\/awstasiuk\/followers","following_url":"https:\/\/api.github.com\/users\/awstasiuk\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/awstasiuk\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/awstasiuk\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/awstasiuk\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/awstasiuk\/orgs","repos_url":"https:\/\/api.github.com\/users\/awstasiuk\/repos","events_url":"https:\/\/api.github.com\/users\/awstasiuk\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/awstasiuk\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-15T19:20:13Z","updated_at":"2021-07-15T20:46:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.0\r\n- **Python version**: 3.9.5\r\n- **Operating system**: Windows 10\r\n\r\n### What is the current behavior?\r\nMock backends, such as `FakeMelbourne` can have their options set via `set_options`, but the instantiated simulator only sees these options if they are passed via kwarg through the `run` method\r\n\r\n### Steps to reproduce the problem\r\nInstantiate a mock backend, set options to change number of shots to 100. Running a circuit will then result in the default number of shots (1024).\r\n\r\n### What is the expected behavior?\r\nI would hope (and expect) setting the options on a backend would result in the instantiated simulator sharing the same options.\r\n\r\n### Suggested solutions\r\nMake simulator backends generated by mock backends share the same options (in particular number of shots) as the backend which instantiates them\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6752","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6752\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6752\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6752\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6752","id":945196678,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkwNTYwMzg4","number":6752,"title":"Fix issue6684 branch","user":{"login":"Rajan117","id":77441871,"node_id":"MDQ6VXNlcjc3NDQxODcx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/77441871?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Rajan117","html_url":"https:\/\/github.com\/Rajan117","followers_url":"https:\/\/api.github.com\/users\/Rajan117\/followers","following_url":"https:\/\/api.github.com\/users\/Rajan117\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Rajan117\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Rajan117\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Rajan117\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Rajan117\/orgs","repos_url":"https:\/\/api.github.com\/users\/Rajan117\/repos","events_url":"https:\/\/api.github.com\/users\/Rajan117\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Rajan117\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-15T09:42:19Z","updated_at":"2021-07-20T10:27:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6752","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6752","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6752.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6752.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixed issue #6684\r\n\r\n### Details and comments\r\n\r\nChanged the return from dict_list[0] for the case when dict_list is of size 1 to be sorted by the value of the key.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6751","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6751\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6751\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6751\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6751","id":945066026,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkwNDUxMDE2","number":6751,"title":"Extend the functionality of plot_gate_map() to work without a backend (without breaking interface)","user":{"login":"haggaila","id":55192441,"node_id":"MDQ6VXNlcjU1MTkyNDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/55192441?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/haggaila","html_url":"https:\/\/github.com\/haggaila","followers_url":"https:\/\/api.github.com\/users\/haggaila\/followers","following_url":"https:\/\/api.github.com\/users\/haggaila\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/haggaila\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/haggaila\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/haggaila\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/haggaila\/orgs","repos_url":"https:\/\/api.github.com\/users\/haggaila\/repos","events_url":"https:\/\/api.github.com\/users\/haggaila\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/haggaila\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-15T07:00:49Z","updated_at":"2021-08-02T12:02:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6751","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6751","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6751.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6751.patch"},"body":"\r\n\r\n### Summary\r\nThe function `plot_gate_map()` currently requires a `backend` argument, and plots a hard-coded device map based on the number of qubits in the backend. Without breaking its interface, I moved most of its code into a second top-level function `plot_gate_map_data()` that takes instead of a backend three arguments - the number of qubits, `mpl_data` that describes the qubit coordinates on a planar grid, and `cmap` that gives the coupling map (these were all local variables of `plot_gate_map()` used in the implementation). `plot_gate_map()` now invokes `plot_gate_map_data()` with arguments appropriate for the backend, and in addition users can now call `plot_gate_map_data()` directly to plot device coupling maps in an arbitrary way, a very useful feature for simulations of qubit dynamics, such as when using qiskit-dynamics.\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6750","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6750\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6750\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6750\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6750","id":944853966,"node_id":"MDU6SXNzdWU5NDQ4NTM5NjY=","number":6750,"title":"Fix typos and adopt a single convention for writing fractions and using parentheses in the documentation for standard gates","user":{"login":"tnemoz","id":36485441,"node_id":"MDQ6VXNlcjM2NDg1NDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/36485441?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/tnemoz","html_url":"https:\/\/github.com\/tnemoz","followers_url":"https:\/\/api.github.com\/users\/tnemoz\/followers","following_url":"https:\/\/api.github.com\/users\/tnemoz\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/tnemoz\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/tnemoz\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/tnemoz\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/tnemoz\/orgs","repos_url":"https:\/\/api.github.com\/users\/tnemoz\/repos","events_url":"https:\/\/api.github.com\/users\/tnemoz\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/tnemoz\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-14T22:53:30Z","updated_at":"2021-07-15T18:20:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\nMake the LaTeX\/Markdown consistent throughout the documentation and fix some typos.\r\n\r\n### Details\r\nWhen browsing the documentation for the standard gates, several typos\/improvements can be done on the LaTeX\/Markdown description of several gates. Furthermore, several conventions are used throughout the docs. For instance, in the [SXGate documentation](https:\/\/qiskit.org\/documentation\/stubs\/qiskit.circuit.library.SXGate.html), one can read:\r\n![Screenshot_20210715_001902](https:\/\/user-images.githubusercontent.com\/36485441\/125700373-179e30d7-1dce-40c1-b527-0ba55f0bccc8.png)\r\nIn this case:\r\n\r\n- The `\\pi` misses a backslash, rendering as <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=pi\"> instead of <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=\\pi\">;\r\n- The fraction <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=\\pi\/2\"> is not written the same way in the [RXXGate documentation](https:\/\/qiskit.org\/documentation\/stubs\/qiskit.circuit.library.RXXGate.html#qiskit.circuit.library.RXXGate), where it is written with a `\\frac`, rendering as <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=\\frac\\pi2\">.\r\n\r\nAnother example, also located in the RXXGate documentation is the following:\r\n![Screenshot_20210715_002639](https:\/\/user-images.githubusercontent.com\/36485441\/125700962-579e250e-1136-4be8-96fb-ced96edffc81.png)\r\nIn this case:\r\n\r\n- The `\\exp` misses a backslash, rendering as <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=exp\"> instead of <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=\\exp\">\r\n- The `\\cos` and `\\sin` are supposed to use `\\left` and `\\right` before their parentheses, which is also true for the `R_XX` on the last line\r\n- The `\\cos` and `\\sin` are not written the same way as in the [CRXGate documentation](https:\/\/qiskit.org\/documentation\/stubs\/qiskit.circuit.library.CRXGate.html#qiskit.circuit.library.CRXGate), where no parentheses are around the <img src=\"https:\/\/render.githubusercontent.com\/render\/math?math=\\frac\\theta2\">\r\n\r\n### Proposal\r\nA single convention should be used throughout the documentation. Since they are the most common as far as I know, I propose that the fraction are written with `\\frac` and that `\\cos` and `\\sin` should be used with parentheses.\r\n\r\n### Examples\r\n\r\n#### [iSwapGate](https:\/\/qiskit.org\/documentation\/stubs\/qiskit.circuit.library.iSwapGate.html#qiskit.circuit.library.iSwapGate)\r\n##### Problems\r\n- The `\\exp` misses a backslash\r\n- Fractions are written with `\/`\r\n- The parentheses should be used with `\\left` and `\\right`\r\n##### Proposed fix\r\nChange\r\n```python\r\niSWAP = R_{XX+YY}(-\\frac{\\pi}{2})\r\n  = exp(i \\frac{\\pi}{4} (X{\\otimes}X+Y{\\otimes}Y)) =\r\n```\r\nto\r\n```python\r\niSWAP = R_{XX+YY}\\left(-\\frac{\\pi}{2}\\right)\r\n  = \\exp\\left(i \\frac{\\pi}{4} (X{\\otimes}X+Y{\\otimes}Y)\\right) =\r\n```\r\n#### [RXGate](https:\/\/qiskit.org\/documentation\/stubs\/qiskit.circuit.library.RXGate.html#qiskit.circuit.library.RXGate)\r\n##### Problems\r\n- The `\\exp` misses a backslash\r\n- The parentheses should be used with `\\left` and `\\right`\r\n##### Proposed fix\r\nChange\r\n```python\r\nRX(\\theta) = exp(-i \\th X) =\r\n```\r\nto\r\n```python\r\nRX(\\theta) = \\exp\\left(-i \\th X\\right) =\r\n```\r\nand \r\n```python\r\n\\cos{\\th}   & -i\\sin{\\th} \\\\\r\n-i\\sin{\\th} & \\cos{\\th}\r\n```\r\nto\r\n```python\r\n\\cos\\left(\\th\\right)   & -i\\sin\\left(\\th\\right) \\\\\r\n-i\\sin\\left(\\th\\right) & \\cos\\left(\\th\\right)\r\n```\r\n\r\nAll in all, 17 files would be impacted by these changes (I can provide a complete list if these changes were to be accepted or directly make a PR).\r\n\r\nA final remark is that the circuit in the CHGate documentation is somewhat broken:\r\n![Screenshot_20210715_005057](https:\/\/user-images.githubusercontent.com\/36485441\/125702820-3b0a0498-852e-45fc-afc2-dd3f2317add3.png)\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6749","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6749\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6749\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6749\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6749","id":944749905,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkwMTg0MzIz","number":6749,"title":"Get saved statevectors","user":{"login":"wagnersj","id":13222607,"node_id":"MDQ6VXNlcjEzMjIyNjA3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/13222607?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/wagnersj","html_url":"https:\/\/github.com\/wagnersj","followers_url":"https:\/\/api.github.com\/users\/wagnersj\/followers","following_url":"https:\/\/api.github.com\/users\/wagnersj\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/wagnersj\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/wagnersj\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/wagnersj\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/wagnersj\/orgs","repos_url":"https:\/\/api.github.com\/users\/wagnersj\/repos","events_url":"https:\/\/api.github.com\/users\/wagnersj\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/wagnersj\/received_events","type":"User","site_admin":false},"labels":[{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-14T19:57:36Z","updated_at":"2021-07-20T14:26:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6749","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6749","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6749.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6749.patch"},"body":"\r\n\r\n### Summary\r\n\r\nChanged `get_statevector()` in `qiskit.result.Result` to allow retrieval of a labelled statevector saved at a midpoint in a quantum circuit by `save_statevector()` in `qiskit.circuit.QuantumCircuit`.\r\n\r\nAddresses #6706.\r\n\r\n\r\n### Details and comments\r\n\r\nA new optional argument, `label`, in `get_statevector()` allows users to get saved statevectors with the same label string used in calls to `save_statevector()`. This avoids the user from having to obtain the statevector from the raw data structure in a `Result` object.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6748","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6748\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6748\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6748\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6748","id":944497150,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg5OTcyMjMx","number":6748,"title":"[WIP] Add M3 measurement mitigation","user":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"labels":[{"id":798403988,"node_id":"MDU6TGFiZWw3OTg0MDM5ODg=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/on%20hold","name":"on hold","color":"fbca04","default":false,"description":"Can not fix yet"},{"id":1561341346,"node_id":"MDU6TGFiZWwxNTYxMzQxMzQ2","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20New%20Feature","name":"Changelog: New Feature","color":"f6c4fc","default":false,"description":"Include in the Added section of the changelog"}],"state":"open","locked":false,"assignee":{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false},"assignees":[{"login":"nonhermitian","id":1249193,"node_id":"MDQ6VXNlcjEyNDkxOTM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1249193?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nonhermitian","html_url":"https:\/\/github.com\/nonhermitian","followers_url":"https:\/\/api.github.com\/users\/nonhermitian\/followers","following_url":"https:\/\/api.github.com\/users\/nonhermitian\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nonhermitian\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nonhermitian\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nonhermitian\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nonhermitian\/orgs","repos_url":"https:\/\/api.github.com\/users\/nonhermitian\/repos","events_url":"https:\/\/api.github.com\/users\/nonhermitian\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nonhermitian\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-07-14T14:37:37Z","updated_at":"2021-08-03T10:24:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6748","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6748","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6748.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6748.patch"},"body":"\r\n\r\n### Summary\r\nAdds M3 measurement mitigation to Qiskit (currently just the uncorrelated case).\r\n\r\nThings to do:\r\n\r\n- [x] Add tests after converting from pytest.\r\n- [ ] Build on top of a generic mitigator base class.\r\n- [ ] Rename grabbing of cal data to something more generic.\r\n- [x] Update the Quasiprobs class to handle mitigation overhead.\r\n- [x] Remove internal Quasiprobs objects from code.\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6742","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6742\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6742\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6742\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6742","id":943956077,"node_id":"MDU6SXNzdWU5NDM5NTYwNzc=","number":6742,"title":"ImportError related to Tweedledum for Macosx-arm64","user":{"login":"JoelHBierman","id":72989650,"node_id":"MDQ6VXNlcjcyOTg5NjUw","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/72989650?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/JoelHBierman","html_url":"https:\/\/github.com\/JoelHBierman","followers_url":"https:\/\/api.github.com\/users\/JoelHBierman\/followers","following_url":"https:\/\/api.github.com\/users\/JoelHBierman\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/JoelHBierman\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/JoelHBierman\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/JoelHBierman\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/JoelHBierman\/orgs","repos_url":"https:\/\/api.github.com\/users\/JoelHBierman\/repos","events_url":"https:\/\/api.github.com\/users\/JoelHBierman\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/JoelHBierman\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-14T01:44:19Z","updated_at":"2021-07-14T12:12:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.0\r\n- **Python version**: 3.9.5\r\n- **Operating system**: MacOS 11.4\r\n\r\n### What is the current behavior?\r\n\r\nInstalling Terra 0.18.0 via published wheel file `qiskit_terra-0.18.0-cp39-cp39-macosx_10_9_universal2.whl` or building from source results in the following ImportError:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"\/Users\/joelbierman\/Desktop\/Qiskit ARM64\/H2_Statevector_Convergence.py\", line 3, in <module>\r\n    from qiskit import Aer\r\n  File \"\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/qiskit\/__init__.py\", line 26, in <module>\r\n    from qiskit.circuit import ClassicalRegister\r\n  File \"\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/qiskit\/circuit\/__init__.py\", line 231, in <module>\r\n    from .classicalfunction.types import Int1, Int2\r\n  File \"\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/qiskit\/circuit\/classicalfunction\/__init__.py\", line 98, in <module>\r\n    from .classicalfunction import ClassicalFunction\r\n  File \"\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/qiskit\/circuit\/classicalfunction\/classicalfunction.py\", line 18, in <module>\r\n    from tweedledum.classical import simulate\r\n  File \"\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/tweedledum\/__init__.py\", line 5, in <module>\r\n    from ._tweedledum import *\r\nImportError: dlopen(\/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/tweedledum\/_tweedledum.cpython-39-darwin.so, 2): no suitable image found.  Did find:\r\n        \/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/tweedledum\/_tweedledum.cpython-39-darwin.so: mach-o, but wrong architecture\r\n        \/Users\/joelbierman\/opt\/anaconda3\/envs\/Qiskit_0280_ARM64\/lib\/python3.9\/site-packages\/tweedledum\/_tweedledum.cpython-39-darwin.so: mach-o, but wrong architecture\r\n```\r\n\r\n### Steps to reproduce the problem\r\n\r\nInstall Terra either via pip or build from source native to macosx-arm64 and run code with packages in Terra. \r\n\r\n### What is the expected behavior?\r\n\r\nNo ImportError.\r\n\r\n### Suggested solutions\r\n\r\nBuilding `Tweedledum` from source in a conda environment as described in https:\/\/github.com\/Qiskit\/qiskit-aer\/issues\/1286 with the `openmp` fix seems to resolve this issue. Given that this issue is similar to the ImportError issue with Aer, it seems that it's likely a version issue with either `Tweedledum` or `openmp`.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6740","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6740\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6740\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6740\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6740","id":943907787,"node_id":"MDU6SXNzdWU5NDM5MDc3ODc=","number":6740,"title":"Utilizing the symmetry of MCX\/Toffoli gates for optimization","user":{"login":"msciwoj1","id":23357449,"node_id":"MDQ6VXNlcjIzMzU3NDQ5","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/23357449?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/msciwoj1","html_url":"https:\/\/github.com\/msciwoj1","followers_url":"https:\/\/api.github.com\/users\/msciwoj1\/followers","following_url":"https:\/\/api.github.com\/users\/msciwoj1\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/msciwoj1\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/msciwoj1\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/msciwoj1\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/msciwoj1\/orgs","repos_url":"https:\/\/api.github.com\/users\/msciwoj1\/repos","events_url":"https:\/\/api.github.com\/users\/msciwoj1\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/msciwoj1\/received_events","type":"User","site_admin":false},"labels":[{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"},{"id":3168479669,"node_id":"MDU6TGFiZWwzMTY4NDc5NjY5","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/synthesis","name":"synthesis","color":"8AB8AB","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-13T23:44:18Z","updated_at":"2021-07-14T15:46:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the current behavior?\r\n\r\nI don't have much experience with Github, I hope this is the right place.\r\n\r\nA Toffoli gate, or a double-controlled NOT, or a CCXGate, is its own inverse. However, its standard decomposition into CX and single unitary gates in the Qiskit library is not itself symmetric. Qiskit recognizes that the CCX gate is its own inverse, that is, applying the` .inverse()` method to a circuit containing a single CCX returns back the same circuit. However, if two Toffoli gates are applied to the same qubits back-to-back, the simple transpiler pass with `optimization_level=3` or any lower will first decompose the gates, and then attempt to optimize the circuit and it will fail to recognize the circuit does nothing, i.e. implements an identity operation. \r\n\r\nIf we have a look at the decomposition of the Toffoli gate: \r\n![singletoffoli](https:\/\/user-images.githubusercontent.com\/23357449\/125536056-86e3f868-b57d-4154-af4c-db091197b652.png)\r\n\r\nWe can see that there are 2 CNOTs and 3 single qubit rotations at the end that do not involve the target qubit.\r\n\r\nIf we use the following code:\r\n```\r\nqc = QuantumCircuit(4) \r\nqc.ccx(0,1,2)\r\nqc.cx(2,3)\r\nqc.ccx(0,1,2)\r\n```\r\nThat generates the following circuit:\r\n![twotoffoli](https:\/\/user-images.githubusercontent.com\/23357449\/125536396-d0ed2247-900a-4661-9189-f86363c25939.png)\r\n\r\nWe can see by inspection that nothing is happening to the first two qubits between the two Toffolis and the third qubit only acts as a control. If the second Toffoli is decomposed into the **inverse** of its standard decomposition, the standard transpiler will cancel the 5 operations mentioned above and produce the following result:\r\n![twotoffoli_good](https:\/\/user-images.githubusercontent.com\/23357449\/125536827-c265b578-194a-4937-b215-85a068622db2.png)\r\nHowever, if that is not done, the transpiler won't understand the need to do it by itself and produce the following circuit:\r\n![twotoffoli_bad](https:\/\/user-images.githubusercontent.com\/23357449\/125536880-87a3110f-052d-423d-ab21-585c142d1516.png)\r\nThose two circuits are identical in their effect, but the first one uses 8 CNOTs and 8 T-gates, and the second one uses 12 CNOTs and 14 T-gates. Also, the second one requires the underlying layout to have a connection between qubits 1 and 2, while the first one does not. \r\n\r\nThis sort of building blocks appear mostly in context of the Grover-like algorithms, oracles, quantum adders, or construction of multiply controlled gates using ancilliary qubits, such as the one described in Nielsen & Chuang, fig. 4.10:\r\n![PtdeW](https:\/\/user-images.githubusercontent.com\/23357449\/125537281-9f18bea0-41d4-4bc1-95f2-d5209a5c9491.png)\r\n\r\nCurrently, this can be forced by creating the \"forward-computing\" circuit with a cascade of CCX gate, transpiling it, inverting it, and then appending the whole inverted circuit at the end. If the inverse is done first, the result will be different though. \r\n\r\nWhat is more, if we have a look at the current decomposition of a CCCX (an MCX gate with 3 controls) it looks like this:\r\n![cccx](https:\/\/user-images.githubusercontent.com\/23357449\/125537368-c65d7693-44f0-42e4-826a-b49b4acaac56.png)\r\n\r\nWe can see that the gates that do not interact with the target qubit (and only \"fix\" the control qubits) are applied **first** and in the implementation of the CCX gate they are applied **last**. This means that if I construct a similar circuit using one CCCX gate, something acting only on the target qubit, and then uncompute, or apply the CCCX again, the \"fixing\" gates will not cancel. However, to make them cancel I need to decompose the **first** gate into the inverse of the standard decomposition, and the second one into the standard decomposition. \r\n\r\nThis means that if I construct a large network of multiply controlled gates and then attempt to construct their inverse, transpiling\/unrolling first and then inverting will not do the job, as the CCX and CCCX gates are treated differently. \r\n\r\n### What is the expected behavior?\r\n\r\nI appreciate that making the circuit composer\/transpiler\/unroller understand that a sequence of 15 operations is a Toffoli gate and can be run backwards for the same effect is difficult. Therefore, I think there should be a pass that can be run **before** these 3 or more qubit gates are decomposed, that will recognize that using the inverse decomposition is advantageous and \"mark\" the gates in an appropriate manner, so that in the next pass they are unrolled in a different way. Alternatively, the transpiler might just be aware that different, symmetric and equivalent decompositions exist and just try all of them at a higher optimization level until something hopefully cancels. \r\n\r\nIf implementing this is also too difficult, maybe it will be worth adding some sort of label to the CCX gate that a user can utilize to force the decomposition into the inverse, but the CCX gate is still drawn as a single gate in the circuit. Of course this can be done by just defining a custom gate, but it's annoying.\r\n\r\nAt the very least, consistent decompositions of MCX gates that will keep the gates only interacting with the control qubits either on the right or the left of the circuit will go a long way, ","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6733","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6733\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6733\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6733\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6733","id":943321733,"node_id":"MDU6SXNzdWU5NDMzMjE3MzM=","number":6733,"title":"Migrate Trotterization to the new design of Quantum Time Evolution.","user":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"labels":[{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false},"assignees":[{"login":"dlasecki","id":26851041,"node_id":"MDQ6VXNlcjI2ODUxMDQx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26851041?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/dlasecki","html_url":"https:\/\/github.com\/dlasecki","followers_url":"https:\/\/api.github.com\/users\/dlasecki\/followers","following_url":"https:\/\/api.github.com\/users\/dlasecki\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/dlasecki\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/dlasecki\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/dlasecki\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/dlasecki\/orgs","repos_url":"https:\/\/api.github.com\/users\/dlasecki\/repos","events_url":"https:\/\/api.github.com\/users\/dlasecki\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/dlasecki\/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-07-13T12:47:33Z","updated_at":"2021-07-20T17:57:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The goal of this issue is to migrate existing Trotterization implementation to a new design for quantum time evolution which unifies evolution and gradient interfaces throughout all possible algorithms, e.g. Trotterization, variational quantum time evolution approaches etc.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6732","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6732\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6732\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6732\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6732","id":943318066,"node_id":"MDU6SXNzdWU5NDMzMTgwNjY=","number":6732,"title":"Drawing error in circuits with isolated qubits","user":{"login":"TharrmashasthaPV","id":51048173,"node_id":"MDQ6VXNlcjUxMDQ4MTcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51048173?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/TharrmashasthaPV","html_url":"https:\/\/github.com\/TharrmashasthaPV","followers_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/followers","following_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/orgs","repos_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/repos","events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2567365150,"node_id":"MDU6TGFiZWwyNTY3MzY1MTUw","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/optional-registers","name":"optional-registers","color":"8de8cf","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":3,"created_at":"2021-07-13T12:44:43Z","updated_at":"2021-07-26T14:08:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.7\r\n\r\n### What is the current behavior?\r\n\r\nWhen a `QuantumCircuit` is initialized as `QuantumCircuit([Qubit(), Qubit()])`, the `draw()` method has some errors\r\n\r\n- [ ] `qc.draw('text')` draws the qubit labels as `_0`, `_1`, ... without a name.\r\n- [ ] Latex and MPL drawers fail. (from #6574 )\r\n\r\n### Steps to reproduce the problem\r\n\r\n```python\r\nfrom qiskit import *\r\nfrom qiskit.circuit import Qubit\r\n\r\nqc = QuantumCircuit([Qubit(), Qubit(), Qubit()])\r\nqc.draw('text')\r\n```\r\nreturns\r\n```\r\n    \r\n_0: \r\n    \r\n_1: \r\n    \r\n_2: \r\n    \r\n```\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nIt would be better if the qubit labelling is done similar to that in the registerless circuits.\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6731","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6731\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6731\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6731\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6731","id":943312719,"node_id":"MDU6SXNzdWU5NDMzMTI3MTk=","number":6731,"title":"Error in reverse_bits()  method when used with circuits with isolated qubits","user":{"login":"TharrmashasthaPV","id":51048173,"node_id":"MDQ6VXNlcjUxMDQ4MTcz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51048173?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/TharrmashasthaPV","html_url":"https:\/\/github.com\/TharrmashasthaPV","followers_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/followers","following_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/orgs","repos_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/repos","events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/TharrmashasthaPV\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":705273342,"node_id":"MDU6TGFiZWw3MDUyNzMzNDI=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":933835146,"node_id":"MDU6TGFiZWw5MzM4MzUxNDY=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":2567365150,"node_id":"MDU6TGFiZWwyNTY3MzY1MTUw","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/optional-registers","name":"optional-registers","color":"8de8cf","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"apcarrik","id":8772103,"node_id":"MDQ6VXNlcjg3NzIxMDM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8772103?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/apcarrik","html_url":"https:\/\/github.com\/apcarrik","followers_url":"https:\/\/api.github.com\/users\/apcarrik\/followers","following_url":"https:\/\/api.github.com\/users\/apcarrik\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/apcarrik\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/apcarrik\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/apcarrik\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/apcarrik\/orgs","repos_url":"https:\/\/api.github.com\/users\/apcarrik\/repos","events_url":"https:\/\/api.github.com\/users\/apcarrik\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/apcarrik\/received_events","type":"User","site_admin":false},"assignees":[{"login":"apcarrik","id":8772103,"node_id":"MDQ6VXNlcjg3NzIxMDM=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8772103?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/apcarrik","html_url":"https:\/\/github.com\/apcarrik","followers_url":"https:\/\/api.github.com\/users\/apcarrik\/followers","following_url":"https:\/\/api.github.com\/users\/apcarrik\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/apcarrik\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/apcarrik\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/apcarrik\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/apcarrik\/orgs","repos_url":"https:\/\/api.github.com\/users\/apcarrik\/repos","events_url":"https:\/\/api.github.com\/users\/apcarrik\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/apcarrik\/received_events","type":"User","site_admin":false},{"login":"javabster","id":23662430,"node_id":"MDQ6VXNlcjIzNjYyNDMw","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/23662430?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/javabster","html_url":"https:\/\/github.com\/javabster","followers_url":"https:\/\/api.github.com\/users\/javabster\/followers","following_url":"https:\/\/api.github.com\/users\/javabster\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/javabster\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/javabster\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/javabster\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/javabster\/orgs","repos_url":"https:\/\/api.github.com\/users\/javabster\/repos","events_url":"https:\/\/api.github.com\/users\/javabster\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/javabster\/received_events","type":"User","site_admin":false}],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":5,"created_at":"2021-07-13T12:40:35Z","updated_at":"2021-07-18T03:23:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18\r\n- **Python version**: 3.7\r\n\r\n### What is the current behavior?\r\n\r\nThis follows #6574 . When a `QuantumCircuit` is initialized with isolates qubits there are some issues as follows\r\n\r\n- [ ] `qc.reverse_bits()` returns an empty `QuantumCircuit` object with no qubits or clbits when `qc` has no gates.\r\n- [ ] `qc.reverse_bits()` returns `list index out of range` error when `qc` has atleast 1 gate. (from #6574 )\r\n\r\n### Steps to reproduce the problem\r\n\r\n1.\r\n```python\r\nfrom qiskit import *\r\nfrom qiskit.circuit import Qubit\r\n\r\nqc = QuantumCircuit([Qubit(), Qubit()])\r\nqc_rev = qc.reverse_bits()\r\nprint(qc_rev.qubits)  # Returns []\r\n```\r\n\r\n2.\r\n```python\r\nfrom qiskit import *\r\nfrom qiskit.circuit import Qubit\r\n\r\nqc = QuantumCircuit([Qubit(), Qubit()])\r\nqc.h(0)\r\nqc_rev = qc.reverse_bits()  # Returns `list index out of range`\r\n```\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6728","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6728\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6728\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6728\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6728","id":942640521,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg4MzQzNjIz","number":6728,"title":"Fix Matplotlib renderer.M deprecation","user":{"login":"splch","id":25377399,"node_id":"MDQ6VXNlcjI1Mzc3Mzk5","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25377399?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/splch","html_url":"https:\/\/github.com\/splch","followers_url":"https:\/\/api.github.com\/users\/splch\/followers","following_url":"https:\/\/api.github.com\/users\/splch\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/splch\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/splch\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/splch\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/splch\/orgs","repos_url":"https:\/\/api.github.com\/users\/splch\/repos","events_url":"https:\/\/api.github.com\/users\/splch\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/splch\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-13T03:02:21Z","updated_at":"2021-07-20T15:13:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6728","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6728","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6728.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6728.patch"},"body":"\r\n\r\n### Summary\r\n\r\nWhen plotting a bloch sphere using Matplotlib version ```3.4.2```, the following deprecation warning is given:\r\n```\r\n\/opt\/conda\/lib\/python3.8\/site-packages\/qiskit\/visualization\/bloch.py:69: MatplotlibDeprecationWarning: \r\nThe M attribute was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use self.axes.M instead.\r\n  x_s, y_s, _ = proj3d.proj_transform(xs3d, ys3d, zs3d, renderer.M)\r\n```\r\n\r\nBy changing ```x_s, y_s, _ = proj3d.proj_transform(xs3d, ys3d, zs3d, renderer.M)``` to ```x_s, y_s, _ = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)```, the warning is fixed.\r\n\r\n\r\n\r\n### Details and comments\r\n\r\nVersion information:\r\n\r\nQiskit Software | Version\r\n-- | --\r\nQiskit | 0.27.0\r\nTerra | 0.17.4\r\nAer | 0.8.2\r\nIgnis | 0.6.0\r\nAqua | 0.9.2\r\nMatplotlib | 3.4.2","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6727","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6727\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6727\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6727\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6727","id":942537539,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg4MjU1MjA0","number":6727,"title":"Approximate Quantum Compiler","user":{"login":"adekusar-drl","id":62334182,"node_id":"MDQ6VXNlcjYyMzM0MTgy","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/62334182?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/adekusar-drl","html_url":"https:\/\/github.com\/adekusar-drl","followers_url":"https:\/\/api.github.com\/users\/adekusar-drl\/followers","following_url":"https:\/\/api.github.com\/users\/adekusar-drl\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/adekusar-drl\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/adekusar-drl\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/adekusar-drl\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/adekusar-drl\/orgs","repos_url":"https:\/\/api.github.com\/users\/adekusar-drl\/repos","events_url":"https:\/\/api.github.com\/users\/adekusar-drl\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/adekusar-drl\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-12T23:31:47Z","updated_at":"2021-08-04T12:59:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6727","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6727","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6727.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6727.patch"},"body":"\r\n\r\n### Summary\r\nThis is an implementation of Approximate Quantum Compiler from the paper \"Best Approximate Quantum Compiling Problems\", https:\/\/arxiv.org\/abs\/2106.05649. The implementation is a minimal version and does not include all features from the referenced paper.\r\n\r\n### Details and comments\r\nThe implementation includes:\r\n\r\n- An approximate quantum compiler as it is referenced in the paper.\r\n- An AQC based unitary synthesis plugin for transpiler that depends on the PR: https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6124\r\n\r\nAuthors:\r\n\r\n- Liam Madden, Liam.Madden2@ibm.com\r\n- Andrea Simonetto, Andrea.Simonetto@ibm.com\r\n- Albert Akhriev, albert_akhriev@ie.ibm.com","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6726","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6726\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6726\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6726\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6726","id":942475106,"node_id":"MDU6SXNzdWU5NDI0NzUxMDY=","number":6726,"title":"`TimeUnitConversion` runs even if not using `scheduling_method`, `Delay` or pulse gates","user":{"login":"kdk","id":2241698,"node_id":"MDQ6VXNlcjIyNDE2OTg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2241698?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/kdk","html_url":"https:\/\/github.com\/kdk","followers_url":"https:\/\/api.github.com\/users\/kdk\/followers","following_url":"https:\/\/api.github.com\/users\/kdk\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/kdk\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/kdk\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/kdk\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/kdk\/orgs","repos_url":"https:\/\/api.github.com\/users\/kdk\/repos","events_url":"https:\/\/api.github.com\/users\/kdk\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/kdk\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"},{"id":1462369957,"node_id":"MDU6TGFiZWwxNDYyMzY5OTU3","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/performance","name":"performance","color":"bc0d99","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"assignees":[{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false}],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":1,"created_at":"2021-07-12T21:43:55Z","updated_at":"2021-07-26T14:09:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nThe transpiler pass `TimeUnitConversion` is included in the preset pass managers and will unconditionally copy all `Instruction`s in a circuit, which can become expense for larger circuits, even if not running any subsequent passes which would make use of `Instruction.duration`.\r\n\r\nIt would be good to either exit early (without modifying the dag) if `InstructionDuration`s is empty, or skip the pass entirely when it is known the durations are not needed.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6725","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6725\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6725\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6725\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6725","id":942447925,"node_id":"MDU6SXNzdWU5NDI0NDc5MjU=","number":6725,"title":"`QuantumCircuit._check_dup_param_spec` becomes slow for many gates reusing few parameters","user":{"login":"kdk","id":2241698,"node_id":"MDQ6VXNlcjIyNDE2OTg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2241698?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/kdk","html_url":"https:\/\/github.com\/kdk","followers_url":"https:\/\/api.github.com\/users\/kdk\/followers","following_url":"https:\/\/api.github.com\/users\/kdk\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/kdk\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/kdk\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/kdk\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/kdk\/orgs","repos_url":"https:\/\/api.github.com\/users\/kdk\/repos","events_url":"https:\/\/api.github.com\/users\/kdk\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/kdk\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"},{"id":1462369957,"node_id":"MDU6TGFiZWwxNDYyMzY5OTU3","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/performance","name":"performance","color":"bc0d99","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-12T21:05:47Z","updated_at":"2021-07-12T21:05:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nWhen building a parameterized circuit where a large number of gates re-use a comparatively small number of parameters, `QuantumCircuit._check_dup_param_spec` becomes a performance bottleneck.\r\n\r\nFor example, `circuit_construction.ParameterizedCircuitConstructionBench.time_build_parameterized_circuit` takes 90s to build a 131k gate circuit with 8 distinct parameters, vs. <5s to build a 131k gate circuit with anything more than 128 parameters:\r\n\r\nhttps:\/\/qiskit.github.io\/qiskit\/#circuit_construction.ParameterizedCircuitConstructionBench.time_build_parameterized_circuit?x-axis=number%20of%20params\r\n\r\nSince the structure of the `ParameterTable` is dict mapping `Parameter` instances to lists of `Instruction`s, each call to `_check_dup_param_spec` must walk the entire `Instruction` list to look for a match. One option would be to convert the list to a dict, which could be efficiently checked for membership.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6724","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6724\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6724\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6724\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6724","id":942444987,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg4MTczNDAy","number":6724,"title":"Add transpiler directory for pulse transforms","user":{"login":"vkumar19","id":10217027,"node_id":"MDQ6VXNlcjEwMjE3MDI3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/10217027?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/vkumar19","html_url":"https:\/\/github.com\/vkumar19","followers_url":"https:\/\/api.github.com\/users\/vkumar19\/followers","following_url":"https:\/\/api.github.com\/users\/vkumar19\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/vkumar19\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/vkumar19\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/vkumar19\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/vkumar19\/orgs","repos_url":"https:\/\/api.github.com\/users\/vkumar19\/repos","events_url":"https:\/\/api.github.com\/users\/vkumar19\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/vkumar19\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-12T21:02:28Z","updated_at":"2021-07-14T18:21:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6724","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6724","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6724.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6724.patch"},"body":"\r\n\r\n### Summary\r\nMoved files from scheduling folder to the transformation folder\r\n\r\n\r\n### Details and comments\r\nIssue #6079\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6721","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6721\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6721\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6721\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6721","id":942255072,"node_id":"MDU6SXNzdWU5NDIyNTUwNzI=","number":6721,"title":"PauliTrotterEvolution does not recognize SummedOp of PauliSumOp as Paulis","user":{"login":"nbronn","id":8194964,"node_id":"MDQ6VXNlcjgxOTQ5NjQ=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8194964?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/nbronn","html_url":"https:\/\/github.com\/nbronn","followers_url":"https:\/\/api.github.com\/users\/nbronn\/followers","following_url":"https:\/\/api.github.com\/users\/nbronn\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/nbronn\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/nbronn\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/nbronn\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/nbronn\/orgs","repos_url":"https:\/\/api.github.com\/users\/nbronn\/repos","events_url":"https:\/\/api.github.com\/users\/nbronn\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/nbronn\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2689759614,"node_id":"MDU6TGFiZWwyNjg5NzU5NjE0","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/mod:%20opflow","name":"mod: opflow","color":"5716e0","default":false,"description":"Related to the Opflow module"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-12T16:57:24Z","updated_at":"2021-07-13T13:36:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.18.0.dev0+732e887\r\n- **Python version**: 3.9.4 \r\n- **Operating system**: Darwin\r\n\r\n### What is the current behavior?\r\n\r\nWhen converting an `EvolvedOp` operator from a Pauli Hamiltonian via `PauliTrotterEvolution`, the evolved Hamiltonian is not recognized as consisting only of Paulis in certain cases.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```\r\nfrom qiskit.circuit import Parameter\r\nfrom qiskit.opflow import I, X, Y, Z, PauliTrotterEvolution, Suzuki\r\n\r\nmu = Parameter('$\\\\mu$')\r\nnu = Parameter('$\\\\nu$')\r\n\r\nmy_ham1 = mu*((I^I) - (Z^I)) + nu*((I^I) - (I^Z))\r\n\r\ntt = Parameter('$t$')\r\nU_ham1 = (tt*my_ham1).exp_i()\r\n```\r\n\r\n```\r\nU_ham1\r\n```\r\nprints\r\n\r\n```\r\nEvolvedOp(SummedOp([PauliSumOp(SparsePauliOp([[False, False, False, False],\r\n               [False, False, False,  True]],\r\n              coeffs=[ 1.+0.j, -1.+0.j]), coeff=1.0*$\\mu$), PauliSumOp(SparsePauliOp([[False, False, False, False],\r\n               [False, False,  True, False]],\r\n              coeffs=[ 1.+0.j, -1.+0.j]), coeff=1.0*$\\nu$)], coeff=1.0*$t$, abelian=False), coeff=1.0)\r\n```\r\n\r\n```\r\ntrot_op1 = PauliTrotterEvolution(trotter_mode=Suzuki(order=2, reps=1)).convert(U_ham1)\r\n```\r\nprints\r\n```\r\nEvolved Hamiltonian is not composed of only Paulis, converting to Pauli representation, which can be expensive.\r\n```\r\n\r\n\r\n### What is the expected behavior?\r\n\r\n`PauliTrotterEvolution` should simplify the expression as in the following equivalent operator:\r\n\r\n```\r\nmy_ham2 = (mu+nu)*(I^I) - mu*(Z^I) - nu*(I^Z)\r\nU_ham2 = (tt*my_ham2).exp_i()\r\ntrot_op2 = PauliTrotterEvolution(trotter_mode=Suzuki(order=2, reps=1)).convert(U_ham2)\r\n```\r\ndoes not print a warning message.\r\n\r\n```\r\nU_ham2\r\n```\r\nprints\r\n```\r\nEvolvedOp(SummedOp([PauliOp(Pauli('II'), coeff=1.0*$\\mu$ + 1.0*$\\nu$), PauliOp(Pauli('ZI'), coeff=-1.0*$\\mu$), PauliOp(Pauli('IZ'), coeff=-1.0*$\\nu$)], coeff=1.0*$t$, abelian=False), coeff=1.0)\r\n```\r\n\r\n### Suggested solutions\r\n\r\nPerhaps parsing the summed operators to ensure Paulis are recognized so that more efficient `opflow` methods can be used.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6719","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6719\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6719\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6719\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6719","id":942074169,"node_id":"MDU6SXNzdWU5NDIwNzQxNjk=","number":6719,"title":"transpiler changes the state generated by circ.uc with up_to_diagonal=True.","user":{"login":"adjs","id":7927558,"node_id":"MDQ6VXNlcjc5Mjc1NTg=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/7927558?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/adjs","html_url":"https:\/\/github.com\/adjs","followers_url":"https:\/\/api.github.com\/users\/adjs\/followers","following_url":"https:\/\/api.github.com\/users\/adjs\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/adjs\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/adjs\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/adjs\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/adjs\/orgs","repos_url":"https:\/\/api.github.com\/users\/adjs\/repos","events_url":"https:\/\/api.github.com\/users\/adjs\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/adjs\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-12T13:37:58Z","updated_at":"2021-07-12T13:37:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.17.4\r\n- **Python version**: 3.7.8\r\n- **Operating system**: windows 10\r\n\r\n### What is the current behavior?\r\ntranspiler changes the state generated by `circ.uc` with `up_to_diagonal=True`.\r\n\r\n\r\n### Steps to reproduce the problem\r\n```python\r\nimport qiskit\r\nfrom scipy.stats import unitary_group\r\nfrom qiskit.providers.aer import StatevectorSimulator\r\nimport numpy as np\r\n\r\ncirc = qiskit.QuantumCircuit(3)\r\ngates = [unitary_group.rvs(2) for _ in range(4)]\r\ncirc.h(0)\r\ncirc.h(1)\r\ncirc.uc(gates, [0, 1], 2, up_to_diagonal=True)\r\n\r\njob = qiskit.execute(circ, StatevectorSimulator())\r\nvector = job.result().get_statevector()\r\nphase = np.angle(vector[0])\r\nprint('original circuit:')\r\nprint(np.e**(-phase*1j) * vector)\r\n\r\ncirc = qiskit.transpile(circ, basis_gates=['u','cx'])\r\n\r\njob = qiskit.execute(circ, StatevectorSimulator())\r\nvector = job.result().get_statevector()\r\nphase = np.angle(vector[0])\r\nprint()\r\nprint('transpiled circuit:')\r\nprint(np.e**(-phase*1j) * vector)\r\n```\r\n\r\n\r\n### What is the expected behavior?\r\ntranspiler should not change the output (at least up to a global phase)\r\n\r\n\r\n### Suggested solutions\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6718","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6718\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6718\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6718\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6718","id":942035064,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg3ODIwMjA0","number":6718,"title":"Implementing the bridge gate.","user":{"login":"Djakam","id":27036433,"node_id":"MDQ6VXNlcjI3MDM2NDMz","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/27036433?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/Djakam","html_url":"https:\/\/github.com\/Djakam","followers_url":"https:\/\/api.github.com\/users\/Djakam\/followers","following_url":"https:\/\/api.github.com\/users\/Djakam\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/Djakam\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/Djakam\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/Djakam\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/Djakam\/orgs","repos_url":"https:\/\/api.github.com\/users\/Djakam\/repos","events_url":"https:\/\/api.github.com\/users\/Djakam\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/Djakam\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-12T12:58:34Z","updated_at":"2021-08-05T00:35:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6718","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6718","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6718.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6718.patch"},"body":"Added a new gate which is the bridge gate, it is named brg\r\n\r\n\r\n\r\n### Summary\r\n\r\n\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6717","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6717\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6717\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6717\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6717","id":942017725,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg3ODA1NzE5","number":6717,"title":"Clarify `marginal_counts` documentation and fix default behavior (#6230)","user":{"login":"mattwright99","id":44040188,"node_id":"MDQ6VXNlcjQ0MDQwMTg4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/44040188?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mattwright99","html_url":"https:\/\/github.com\/mattwright99","followers_url":"https:\/\/api.github.com\/users\/mattwright99\/followers","following_url":"https:\/\/api.github.com\/users\/mattwright99\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mattwright99\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mattwright99\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mattwright99\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mattwright99\/orgs","repos_url":"https:\/\/api.github.com\/users\/mattwright99\/repos","events_url":"https:\/\/api.github.com\/users\/mattwright99\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mattwright99\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-12T12:37:37Z","updated_at":"2021-07-30T17:05:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6717","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6717","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6717.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6717.patch"},"body":"\r\n\r\n### Summary\r\n\r\nFixes #6230 \r\n\r\n### Details and comments\r\n\r\nThe original issue was to clarify documentation of the `marginal_counts` function (which was done) but I discovered another issue when calling the function with `indices=None` (the default). The issue arose from calling `len(indices)` and was fixed by checking if `indices` is `None` at the beginning and then returning the original result object because the function would have no affect.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6716","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6716\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6716\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6716\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6716","id":941892981,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg3Njk4NzI0","number":6716,"title":"Fix typo in error message","user":{"login":"QianJianhua1","id":87301318,"node_id":"MDQ6VXNlcjg3MzAxMzE4","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/87301318?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/QianJianhua1","html_url":"https:\/\/github.com\/QianJianhua1","followers_url":"https:\/\/api.github.com\/users\/QianJianhua1\/followers","following_url":"https:\/\/api.github.com\/users\/QianJianhua1\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/QianJianhua1\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/QianJianhua1\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/QianJianhua1\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/QianJianhua1\/orgs","repos_url":"https:\/\/api.github.com\/users\/QianJianhua1\/repos","events_url":"https:\/\/api.github.com\/users\/QianJianhua1\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/QianJianhua1\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-12T10:09:58Z","updated_at":"2021-07-23T08:25:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6716","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6716","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6716.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6716.patch"},"body":"Summary\r\nChanged the typo in qiskit\/circuit\/bit.py from 'Attmped' to 'Attempt'.\r\n\r\nDetails and comments\r\nChanged the typo in qiskit\/circuit\/bit.py from 'Attmped' to 'Attempt'.","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6715","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6715\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6715\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6715\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6715","id":940783576,"node_id":"MDU6SXNzdWU5NDA3ODM1NzY=","number":6715,"title":"Add back held release notes from 0.18.0","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-07-09T13:48:53Z","updated_at":"2021-07-09T13:48:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nAs part of the 0.18.0 release prep in #6652 a couple release notes were held back (and removed from the repo to avoid reno thinking they should be applied to the 0.18.0 release) as they weren't fully implemented yet. The 2 release notes in question are\r\n\r\n- `lo-freqs-circuit-c2ec161873eb4a68.yaml` which was added in #6167 and removed in https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6652\/commits\/3b4600a8a1f0e9d86afa8c9cd40a287fe6c91566 (after being rewritten)\r\n- Single bit classical conditions which was added in #6018\r\n\r\nThis issue is just for tracking to make sure we add the appropriate release notes back when we're ready to advertise the new functionality","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6709","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6709\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6709\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6709\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6709","id":939978836,"node_id":"MDU6SXNzdWU5Mzk5Nzg4MzY=","number":6709,"title":"Remove save_state instructions when transpiling to backend that does not support them","user":{"login":"wagnersj","id":13222607,"node_id":"MDQ6VXNlcjEzMjIyNjA3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/13222607?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/wagnersj","html_url":"https:\/\/github.com\/wagnersj","followers_url":"https:\/\/api.github.com\/users\/wagnersj\/followers","following_url":"https:\/\/api.github.com\/users\/wagnersj\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/wagnersj\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/wagnersj\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/wagnersj\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/wagnersj\/orgs","repos_url":"https:\/\/api.github.com\/users\/wagnersj\/repos","events_url":"https:\/\/api.github.com\/users\/wagnersj\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/wagnersj\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-08T15:28:15Z","updated_at":"2021-07-08T15:28:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nSummary: When transpiling a circuit with `save_state` instructions (such as those inserted into a circuit with the `save_statevector() function) to a backend that does not support it, remove\/ignore them.\r\n\r\nUsers can save the statevector at the midpoint of a circuit by calling the `save_statevector()` function, which is useful for probing the circuit during simulations. However, then transpiling the same circuit to run on a backend that does not support the `save_state` instruction, such as the real quantum computer backends, the transpiler will fail with the message like this:\r\n\r\n`Unable to map source basis {('measure', 1), ('save_state', 1), ('h', 1)} to target basis {'reset', 'rz', 'measure', 'barrier', 'delay', 'x', 'snapshot', 'id', 'sx', 'cx'}`\r\n\r\nThis is may be confusing the the user. Assuming that they interpret this error message correctly, their recourse is to regenerate the source circuit without the `save_state` instructions (e.g. by removing calls to `save_statevector()`) and transpiling again. This is cumbersome and perhaps error prone.\r\n\r\nAn improved approach would be for the transpiler to simply remove\/skip\/ignore `save_state` instructions when the target backend does not support them. The benefit of this is that it would allow the user to switch easily between statevector simulators and real quantum computer backends. ","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6707","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6707\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6707\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6707\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6707","id":939951813,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg2MDk1MTg4","number":6707,"title":"Fix PiecewiseChebyshev for constant functions","user":{"login":"anedumla","id":5624856,"node_id":"MDQ6VXNlcjU2MjQ4NTY=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5624856?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/anedumla","html_url":"https:\/\/github.com\/anedumla","followers_url":"https:\/\/api.github.com\/users\/anedumla\/followers","following_url":"https:\/\/api.github.com\/users\/anedumla\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/anedumla\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/anedumla\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/anedumla\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/anedumla\/orgs","repos_url":"https:\/\/api.github.com\/users\/anedumla\/repos","events_url":"https:\/\/api.github.com\/users\/anedumla\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/anedumla\/received_events","type":"User","site_admin":false},"labels":[{"id":1561344279,"node_id":"MDU6TGFiZWwxNTYxMzQ0Mjc5","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20Bugfix","name":"Changelog: Bugfix","color":"bc2a20","default":false,"description":"Include in the Fixed section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-08T15:00:40Z","updated_at":"2021-07-12T14:27:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6707","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6707","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6707.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6707.patch"},"body":"\r\n\r\n### Summary\r\nThere was an issue raised in [this](https:\/\/quantumcomputing.stackexchange.com\/questions\/16899\/question-on-qiskit-circuit-library-piecewisechebyshev-qiskit-circuit-library) Stackexchange question in which the code was not replicating the expected result when given as the input function to be approximated a constant function.\r\n\r\n\r\n### Details and comments\r\nThe error came from trying to approximate such function with `numpy.polynomial.chebyshev.interpolate`. The issue has been fixed, an error message detailing how to declare constant functions added and the documentation updated with a statement on how to declare constant functions.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6706","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6706\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6706\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6706\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6706","id":939845015,"node_id":"MDU6SXNzdWU5Mzk4NDUwMTU=","number":6706,"title":"Getting saved statevectors","user":{"login":"wagnersj","id":13222607,"node_id":"MDQ6VXNlcjEzMjIyNjA3","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/13222607?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/wagnersj","html_url":"https:\/\/github.com\/wagnersj","followers_url":"https:\/\/api.github.com\/users\/wagnersj\/followers","following_url":"https:\/\/api.github.com\/users\/wagnersj\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/wagnersj\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/wagnersj\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/wagnersj\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/wagnersj\/orgs","repos_url":"https:\/\/api.github.com\/users\/wagnersj\/repos","events_url":"https:\/\/api.github.com\/users\/wagnersj\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/wagnersj\/received_events","type":"User","site_admin":false},"labels":[{"id":552526583,"node_id":"MDU6TGFiZWw1NTI1MjY1ODM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20enhancement","name":"type: enhancement","color":"a2eeef","default":false,"description":"It's working, but needs polishing"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-07-08T13:11:59Z","updated_at":"2021-07-08T13:11:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected enhancement?\r\n\r\nSummary: Change `qiskit.result.get_statevector()` to retrieve any statevector saved with `save_statevector()` by specifying the label used.\r\n\r\nUsers can save the statevector at a midpoint in a `QuantumCircuit` run in a simulator by calling `save_statevector(label=label)`. However, retrieving the saved statevector from the `qiskit.result` object after simulation is not as straight-forward. The user is forced to retrieve the raw `data` field of the `qiskit.result` object and extract the saved statevector by using the `label` as a key. Once the statevector data is retrieved, the user must also then post-process the raw data manually or by calling `qiskit.result.postprocess.format_statevector()`.\r\n\r\nThe `get_statevector()` function handles the process retrieving the statevector and postprocessing the data. However, `get_statevector()` only retrieves the final statevector, not any arbitrarily saved statevector.\r\n\r\nI propose that the `get_statevector()` function be modified to retrieve any saved statevector. This can be done by adding an option `label` argument. If `label` is not specified, then the `get_statevector()` function will return the final statevector as it does now.\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6702","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6702\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6702\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6702\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6702","id":939419266,"node_id":"MDU6SXNzdWU5Mzk0MTkyNjY=","number":6702,"title":"function to calculate 2-qubit gate depth","user":{"login":"ajavadia","id":8622381,"node_id":"MDQ6VXNlcjg2MjIzODE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/8622381?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/ajavadia","html_url":"https:\/\/github.com\/ajavadia","followers_url":"https:\/\/api.github.com\/users\/ajavadia\/followers","following_url":"https:\/\/api.github.com\/users\/ajavadia\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/ajavadia\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/ajavadia\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/ajavadia\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/ajavadia\/orgs","repos_url":"https:\/\/api.github.com\/users\/ajavadia\/repos","events_url":"https:\/\/api.github.com\/users\/ajavadia\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/ajavadia\/received_events","type":"User","site_admin":false},"labels":[{"id":705273342,"node_id":"MDU6TGFiZWw3MDUyNzMzNDI=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":933835133,"node_id":"MDU6TGFiZWw5MzM4MzUxMzM=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/type:%20feature%20request","name":"type: feature request","color":"fbca04","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-08T02:59:44Z","updated_at":"2021-08-04T20:28:10Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"\r\n\r\n\r\n### What is the expected behavior?\r\nCurrently `circuit.depth()` considers all gates in the circuit. In the context of present experiments 2-qubit gates are often much longer than 1-qubit gates, so a function `circuit.depth_2q_gates()` would be useful. This would be a better estimate of true depth cost. Of course the most accurate would be to schedule the circuit with the gate durations and look at `circuit.duration`, but that requires further compilation and is not a pure analysis of the circuit.\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6698","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6698\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6698\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6698\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6698","id":939237357,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg1NDkwMTk3","number":6698,"title":"Visualization: fix histograms (#6692)","user":{"login":"drewrisinger","id":10198051,"node_id":"MDQ6VXNlcjEwMTk4MDUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/10198051?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/drewrisinger","html_url":"https:\/\/github.com\/drewrisinger","followers_url":"https:\/\/api.github.com\/users\/drewrisinger\/followers","following_url":"https:\/\/api.github.com\/users\/drewrisinger\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/drewrisinger\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/drewrisinger\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/drewrisinger\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/drewrisinger\/orgs","repos_url":"https:\/\/api.github.com\/users\/drewrisinger\/repos","events_url":"https:\/\/api.github.com\/users\/drewrisinger\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/drewrisinger\/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-07T20:27:53Z","updated_at":"2021-07-08T21:11:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6698","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6698","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6698.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6698.patch"},"body":"\n\n### Summary\n\nFixes #6692.\n\nThe issue was caused by calculating the most-common elements for the data separately for each dictionary, which caused different labels to be chosen for different dictionaries, and thus the output didn't align.\nThis resolves it by calculating the states to keep together, and getting values for all of those kept states for each dictionary.\n\n### Details and comments\n\nAdds tests for setting ``plot_histogram(..., number_to_keep=int)``. Note that the other arguments to ``plot_histogram()`` appear untested still.\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6693","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6693\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6693\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6693\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6693","id":938867902,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg1MTc0NDkw","number":6693,"title":"Respect backend defaults for BackendV1 path in execute()","user":{"login":"mtreinish","id":2447371,"node_id":"MDQ6VXNlcjI0NDczNzE=","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2447371?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/mtreinish","html_url":"https:\/\/github.com\/mtreinish","followers_url":"https:\/\/api.github.com\/users\/mtreinish\/followers","following_url":"https:\/\/api.github.com\/users\/mtreinish\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/mtreinish\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/mtreinish\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/mtreinish\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/mtreinish\/orgs","repos_url":"https:\/\/api.github.com\/users\/mtreinish\/repos","events_url":"https:\/\/api.github.com\/users\/mtreinish\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/mtreinish\/received_events","type":"User","site_admin":false},"labels":[{"id":1561342365,"node_id":"MDU6TGFiZWwxNTYxMzQyMzY1","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/Changelog:%20API%20Change","name":"Changelog: API Change","color":"da2add","default":false,"description":"Include in the Changed section of the changelog"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/milestone\/18","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/milestones\/18\/labels","id":6660086,"node_id":"MDk6TWlsZXN0b25lNjY2MDA4Ng==","number":18,"title":"0.19","description":"","creator":{"login":"1ucian0","id":766693,"node_id":"MDQ6VXNlcjc2NjY5Mw==","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/766693?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/1ucian0","html_url":"https:\/\/github.com\/1ucian0","followers_url":"https:\/\/api.github.com\/users\/1ucian0\/followers","following_url":"https:\/\/api.github.com\/users\/1ucian0\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/1ucian0\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/1ucian0\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/1ucian0\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/1ucian0\/orgs","repos_url":"https:\/\/api.github.com\/users\/1ucian0\/repos","events_url":"https:\/\/api.github.com\/users\/1ucian0\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/1ucian0\/received_events","type":"User","site_admin":false},"open_issues":63,"closed_issues":18,"state":"open","created_at":"2021-04-14T11:20:30Z","updated_at":"2021-08-04T22:37:14Z","due_on":"2021-09-15T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-07-07T13:00:17Z","updated_at":"2021-07-23T10:51:03Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/pulls\/6693","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6693","diff_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6693.diff","patch_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/pull\/6693.patch"},"body":"\r\n\r\n### Summary\r\n\r\nA BackendV1 backend object has default values for all it's options set\r\nalready in the Options object stored in the options attribute of the\r\nobject. However when running execute targettting a backend for backwards\r\ncompatibility we were overriding the default to what the execute\r\nfunction used to default to. The most basic example of this was\r\nsomething like shots. If the backend accepts a shots option execute()\r\nwould override whatever the default for the backend was to 1024 to be\r\nconsistent with what execute() did before BackendV1 was introduced. This\r\ncommit changes this behavior so that execute() will respect the default\r\nset in the backend's options instead of it's own defaults.\r\n\r\n### Details and comments\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6692","repository_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra","labels_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6692\/labels{\/name}","comments_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6692\/comments","events_url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/issues\/6692\/events","html_url":"https:\/\/github.com\/Qiskit\/qiskit-terra\/issues\/6692","id":938316180,"node_id":"MDU6SXNzdWU5MzgzMTYxODA=","number":6692,"title":"[Visualization]: plot_histogram() mis-pairs states & labels when comparing data with ``number_to_keep=int``","user":{"login":"drewrisinger","id":10198051,"node_id":"MDQ6VXNlcjEwMTk4MDUx","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/10198051?v=4","gravatar_id":"","url":"https:\/\/api.github.com\/users\/drewrisinger","html_url":"https:\/\/github.com\/drewrisinger","followers_url":"https:\/\/api.github.com\/users\/drewrisinger\/followers","following_url":"https:\/\/api.github.com\/users\/drewrisinger\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/drewrisinger\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/drewrisinger\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/drewrisinger\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/drewrisinger\/orgs","repos_url":"https:\/\/api.github.com\/users\/drewrisinger\/repos","events_url":"https:\/\/api.github.com\/users\/drewrisinger\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/drewrisinger\/received_events","type":"User","site_admin":false},"labels":[{"id":552526581,"node_id":"MDU6TGFiZWw1NTI1MjY1ODE=","url":"https:\/\/api.github.com\/repos\/Qiskit\/qiskit-terra\/labels\/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-06T22:46:31Z","updated_at":"2021-07-06T22:49:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\n\r\n### Information\r\n\r\n- **Qiskit Terra version**: 0.16.1, 0.17.4\r\n- **Python version**: 3.7, 3.8\r\n- **Operating system**: Linux\r\n\r\n### What is the current behavior?\r\n\r\nWhen the ``number_to_keep`` argument is added to ``qiskit.visualization.plot_histogram([data0, data1])``, the resulting states will be misaligned between the two results.\r\n\r\n### Steps to reproduce the problem\r\n\r\n```python\r\nimport qiskit.visualization as qiskit_vis\r\n\r\ndata_noisy = {'00000': 0.22, '00001': 0.003, '00010': 0.005, '00011': 0.0, '00100': 0.004, '00101': 0.001, '00110': 0.004, '00111': 0.001, '01000': 0.005, '01001': 0.0, '01010': 0.002, '01011': 0.0, '01100': 0.225, '01101': 0.001, '01110': 0.003, '01111': 0.003, '10000': 0.012, '10001': 0.002, '10010': 0.001, '10011': 0.001, '10100': 0.247, '10101': 0.004, '10110': 0.003, '10111': 0.001, '11000': 0.225, '11001': 0.005, '11010': 0.002, '11011': 0.0, '11100': 0.015, '11101': 0.004, '11110': 0.001, '11111': 0.0}\r\ndata_ideal = {'00000': 0.25, '00001': 0, '00010': 0, '00011': 0, '00100': 0, '00101': 0, '00110': 0, '00111': 0.0, '01000': 0.0, '01001': 0, '01010': 0.0, '01011': 0.0, '01100': 0.25, '01101': 0, '01110': 0, '01111': 0, '10000': 0, '10001': 0, '10010': 0.0, '10011': 0.0, '10100': 0.25, '10101': 0, '10110': 0, '10111': 0, '11000': 0.25, '11001': 0, '11010': 0, '11011': 0, '11100': 0.0, '11101': 0, '11110': 0, '11111': 0.0}\r\nqiskit_vis.plot_histogram([ data_ideal, data_noisy ])\r\nqiskit_vis.plot_histogram([ data_ideal, data_noisy ], number_to_keep=5)\r\n```\r\n\r\nProduces (using qiskit-terra 0.16.1)\r\n(``number_to_keep`` undefined)\r\n![image](https:\/\/user-images.githubusercontent.com\/10198051\/124674758-569dcc80-de89-11eb-9fe8-33b56769725c.png)\r\n\r\n(``number_to_keep = 5``)\r\n![image](https:\/\/user-images.githubusercontent.com\/10198051\/124674669-2e15d280-de89-11eb-854e-1472f4181f2d.png)\r\n\r\nNote that the states for 0b11000 are near-identical, and they match up in the first image, but not in the second.\r\n\r\n### What is the expected behavior?\r\n\r\nEvery bar in the ``number_to_keep`` plot should be aligned with the accompanying state in the other set of states.\r\n\r\n### Suggested solutions\r\n\r\nAt a brief debugging glance, it seems that the issue is likely due to state-accounting logic when reducing the number of states in ``_plot_histogram_data()``: https:\/\/github.com\/Qiskit\/qiskit-terra\/blob\/1270f7c8ad85cbcfbab2564f1288d39d97672744\/qiskit\/visualization\/counts_visualization.py#L246-L290.\r\n\r\nThere seem to have been some recent changes to histogram plotting (#6390), but none that touch the counter dict logic, so this should still be valid.\r\n\r\nMaybe returning the set of pruned labels from ``_plot_histogram_data()`` would help.","performed_via_github_app":null}]